<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>qklg</title>
    <link>https://qklgblog.pages.dev/</link>
    <description>Recent content on qklg</description>
    <image>
      <title>qklg</title>
      <url>https://qklgblog.pages.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://qklgblog.pages.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.123.8</generator>
    <language>en</language>
    <copyright>qklg Hosted on Cloudflare Pages </copyright>
    <lastBuildDate>Fri, 21 Mar 2025 21:55:04 +0000</lastBuildDate>
    <atom:link href="https://qklgblog.pages.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cloudflare新工具，文件转markdown</title>
      <link>https://qklgblog.pages.dev/post/20250321/</link>
      <pubDate>Fri, 21 Mar 2025 21:55:04 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250321/</guid>
      <description>1 官网文档链接 https://developers.cloudflare.com/workers-ai/markdown-conversion/
2 支持格式 .pdf, .jpeg, .jpg, .png, .webp, .svg, .html, .xml, .xlsx, .xlsm, .xlsb, .xls, .et, .ods, .csv, .numbers 主要就几大类，一个pdf，图片，office文档，网页啥的
还有图片的话是要钱的，没图片的话不需要钱的
3 获取REST API令牌 调用的话直接用REST API就可以了
获取办法的话参考官网 https://developers.cloudflare.com/workers-ai/get-started/rest-api/
①打开面板 https://dash.cloudflare.com/
② ai然后打开workers ai 使用rest api
③ 创建 workers ai api令牌 点击创建api令牌，令牌只会显示一次，记得保存下
4 调用 curl直接就ok了
{ACCOUNT_ID}的话再3③那里的账户id就是了
{API_TOKEN}的话就是你上面获取的rest api令牌
文档里面的，我稍微优化了下，直接导出到md文件
root/pc.xlsx 自己换下文件的位置
curl https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/tomarkdown \ -H &amp;#39;Authorization: Bearer {API_TOKEN}&amp;#39; \ -F files=@&amp;#34;//root/pc.xlsx&amp;#34; | jq -r &amp;#39;.result[0].data&amp;#39; &amp;gt; output.md 5 效果对比 网上随便找的装机配置单</description>
      <content:encoded><![CDATA[<h1 id="1-官网文档链接">1 官网文档链接</h1>
<p><a href="https://developers.cloudflare.com/workers-ai/markdown-conversion/">https://developers.cloudflare.com/workers-ai/markdown-conversion/</a></p>
<h1 id="2-支持格式">2 支持格式</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">.pdf, .jpeg, .jpg, .png, .webp, .svg, .html, .xml, .xlsx, .xlsm, .xlsb, .xls, .et, .ods, .csv, .numbers
</span></span></code></pre></div><p>主要就几大类，一个pdf，图片，office文档，网页啥的</p>
<p>还有图片的话是要钱的，没图片的话不需要钱的</p>
<h1 id="3-获取rest-api令牌">3 获取REST API令牌</h1>
<p>调用的话直接用REST API就可以了</p>
<p>获取办法的话参考官网 <a href="https://developers.cloudflare.com/workers-ai/get-started/rest-api/">https://developers.cloudflare.com/workers-ai/get-started/rest-api/</a></p>
<h2 id="打开面板">①打开面板</h2>
<p><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></p>
<h2 id="-ai然后打开workers-ai">② ai然后打开workers ai</h2>
<p>使用rest api</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/kQSGy2Y.png" alt=""  />
</p>
<h2 id="-创建-workers-ai-api令牌">③ 创建 workers ai api令牌</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/rr8V3UW.png" alt=""  />
</p>
<p>点击创建api令牌，令牌只会显示一次，记得保存下</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/bhYCAKK.png" alt=""  />
</p>
<h1 id="4-调用">4 调用</h1>
<p>curl直接就ok了</p>
<p>{ACCOUNT_ID}的话再3③那里的账户id就是了</p>
<p>{API_TOKEN}的话就是你上面获取的rest api令牌</p>
<p>文档里面的，我稍微优化了下，直接导出到md文件</p>
<p>root/pc.xlsx 自己换下文件的位置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/tomarkdown \
</span></span><span class="line"><span class="cl">  -H &#39;Authorization: Bearer {API_TOKEN}&#39; \
</span></span><span class="line"><span class="cl">  -F files=@&#34;//root/pc.xlsx&#34; | jq -r &#39;.result[0].data&#39; &gt; output.md
</span></span></code></pre></div><h1 id="5-效果对比">5 效果对比</h1>
<p>网上随便找的装机配置单</p>
<p>原版excel</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/9EmGoNP.png" alt=""  />
</p>
<p>markdown转换完的，还行</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/epzWmg1.png" alt=""  />
</p>
<h1 id="6-在线转换">6 在线转换</h1>
<p>左转隔壁mjj的，自己搞个worker玩玩，我懒得搞了</p>
<p><a href="https://linux.do/t/topic/505896/16">https://linux.do/t/topic/505896/16</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>用api切换cf的证书</title>
      <link>https://qklgblog.pages.dev/post/20250310/</link>
      <pubDate>Mon, 10 Mar 2025 15:01:55 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250310/</guid>
      <description>1 前言 之前写过一篇 用api把cloudflare的证书换成自家一年的
https://qklg.net/post/20230628/
cf的一年的digicert已经没有了， 现在多了一种三个月的ssl.com的，
cf官方说兼容性极强，原文如下
SSL.com 兼容性高度强，被超过 99.9% 的浏览器、平板电脑和移动设备所接受。 SSL.com 证书与 Certum ↗交叉签名，并且对中间体↗进行交叉签名的 CA来自 2004 年。 https://developers.cloudflare.com/ssl/reference/certificate-authorities/
https://developers.cloudflare.com/api/resources/acm/subresources/total_tls/methods/get/
2 切换办法 三种证书都可以切换，用小鸡上curl就可以了
切换成ssl.com的 curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key:你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;ssl_com\&amp;#34;}&amp;#34; 切换成谷歌的 curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key:你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;google\&amp;#34;}&amp;#34; 切换成let&amp;rsquo;s的 curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key:你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;lets_encrypt\&amp;#34;}&amp;#34; 3 参数替换 参数的话，三个需要替换下</description>
      <content:encoded><![CDATA[<h1 id="1-前言">1 前言</h1>
<p>之前写过一篇   用api把cloudflare的证书换成自家一年的</p>
<p><a href="https://qklg.net/post/20230628/">https://qklg.net/post/20230628/</a></p>
<p>cf的一年的digicert已经没有了， 现在多了一种三个月的ssl.com的，<br>
cf官方说兼容性极强，原文如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">SSL.com 兼容性高度强，被超过 99.9% 的浏览器、平板电脑和移动设备所接受。
</span></span><span class="line"><span class="cl">SSL.com 证书与 Certum ↗交叉签名，并且对中间体↗进行交叉签名的 CA来自 2004 年。
</span></span></code></pre></div><p><a href="https://developers.cloudflare.com/ssl/reference/certificate-authorities/">https://developers.cloudflare.com/ssl/reference/certificate-authorities/</a></p>
<p><a href="https://developers.cloudflare.com/api/resources/acm/subresources/total_tls/methods/get/">https://developers.cloudflare.com/api/resources/acm/subresources/total_tls/methods/get/</a></p>
<h1 id="2-切换办法">2 切换办法</h1>
<p>三种证书都可以切换，用小鸡上curl就可以了</p>
<h2 id="切换成sslcom的">切换成ssl.com的</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key:你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;ssl_com\&#34;}&#34;
</span></span></code></pre></div><h2 id="切换成谷歌的">切换成谷歌的</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key:你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;google\&#34;}&#34;
</span></span></code></pre></div><h2 id="切换成lets的">切换成let&rsquo;s的</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key:你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;lets_encrypt\&#34;}&#34;
</span></span></code></pre></div><h1 id="3-参数替换">3 参数替换</h1>
<p>参数的话，三个需要替换下</p>
<h2 id="你的域名区域id">你的域名区域id</h2>
<p>打开你的域名，域名 右下角有个区域id，复制粘贴下就ok了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/c9Nv2Ab.png" alt=""  />
</p>
<h2 id="邮箱">邮箱</h2>
<p>就是你cf的邮箱，不知道的话打开 <a href="https://dash.cloudflare.com/profile">https://dash.cloudflare.com/profile</a> 看下就知道了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/Hvs2YdH.png" alt=""  />
</p>
<h2 id="你的global-api-key">你的global api key</h2>
<p><a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a></p>
<p>点击查看，就有了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/f76ALGY.png" alt=""  />
</p>
<h1 id="4-效果">4 效果</h1>
<p>curl打完之后，出现如下就是成功了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{&#34;result&#34;:{&#34;enabled&#34;:true,&#34;certificate_authority&#34;:&#34;ssl_com&#34;},&#34;success&#34;:true,&#34;errors&#34;:[],&#34;messages&#34;
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/V9EdDvI.png" alt=""  />
</p>
<p>cf后台出现新证书了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/qqHbsTI.png" alt=""  />
</p>
<p>域名也可以看到是新证书了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/VyKuUEf.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>NodeSeek-PicGo图床上传油猴脚本</title>
      <link>https://qklgblog.pages.dev/post/20250309/</link>
      <pubDate>Sun, 09 Mar 2025 02:07:11 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250309/</guid>
      <description>1 前言 先感谢 @哆啦B梦 大佬
用的这个大佬的油猴脚本，拿ai稍微改了下
https://www.nodeseek.com/post-250494-1
2 安装地址 https://greasyfork.org/zh-CN/scripts/529221-nodeseek-picgo%E5%9B%BE%E5%BA%8A
3 使用办法 后台记得打开picgo，直接粘贴图片就ok了
4 原理 用的picgo的server，直接用picgo上传到图床
所以使用的时候，要打开picgo的server，
默认应该是开启的，没开的话picgo设置-设置server-点击设置，打开就ok了
默认的端口是36677，我的脚本里默认也是36677
5 优缺点 优点就是用的picgo，只要picgo支持的图床，理论上应该都支持，
缺点就是你得开着picgo，手机上的话你也没法用
6 具体效果的话 我试了imgur和smms这两个公共图床都是ok的，其他的等mjj反馈吧
兰空和easyimage，mjj自用的比较多的两个等会等评论区小伙伴反馈
7 其他 直接用油猴脚本传的话可以看下这些大佬的帖子
https://www.nodeseek.com/post-74493-1
https://www.nodeseek.com/post-68459-1
其他平台上传图片到图床的话可以看下这个大佬的帖子
【整理】归纳一下方便上传图片的脚本和APP
https://www.nodeseek.com/post-68951-1</description>
      <content:encoded><![CDATA[<h1 id="1-前言">1 前言</h1>
<p>先感谢 @哆啦B梦 大佬</p>
<p>用的这个大佬的油猴脚本，拿ai稍微改了下<br>
<a href="https://www.nodeseek.com/post-250494-1">https://www.nodeseek.com/post-250494-1</a></p>
<h1 id="2-安装地址">2 安装地址</h1>
<p><a href="https://greasyfork.org/zh-CN/scripts/529221-nodeseek-picgo%E5%9B%BE%E5%BA%8A">https://greasyfork.org/zh-CN/scripts/529221-nodeseek-picgo%E5%9B%BE%E5%BA%8A</a></p>
<h1 id="3-使用办法">3 使用办法</h1>
<p>后台记得打开picgo，直接粘贴图片就ok了</p>
<h1 id="4-原理">4 原理</h1>
<p>用的picgo的<a href="https://picgo.github.io/PicGo-Doc/zh/guide/advance.html#picgo-server%E7%9A%84%E4%BD%BF%E7%94%A8">server</a>，直接用picgo上传到图床</p>
<p>所以使用的时候，要打开picgo的server，</p>
<p>默认应该是开启的，没开的话picgo设置-设置server-点击设置，打开就ok了</p>
<p>默认的端口是36677，我的脚本里默认也是36677</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/YLnFDdX.png" alt="image-20250309014339029"  />
</p>
<h1 id="5-优缺点">5 优缺点</h1>
<p>优点就是用的picgo，只要picgo支持的图床，理论上应该都支持，<br>
缺点就是你得开着picgo，手机上的话你也没法用</p>
<h1 id="6-具体效果的话">6 具体效果的话</h1>
<p>我试了imgur和smms这两个公共图床都是ok的，其他的等mjj反馈吧<br>
兰空和easyimage，mjj自用的比较多的两个等会等评论区小伙伴反馈</p>
<h1 id="7-其他">7 其他</h1>
<p>直接用油猴脚本传的话可以看下这些大佬的帖子<br>
<a href="https://www.nodeseek.com/post-74493-1">https://www.nodeseek.com/post-74493-1</a><br>
<a href="https://www.nodeseek.com/post-68459-1">https://www.nodeseek.com/post-68459-1</a></p>
<p>其他平台上传图片到图床的话可以看下这个大佬的帖子<br>
【整理】归纳一下方便上传图片的脚本和APP<br>
<a href="https://www.nodeseek.com/post-68951-1">https://www.nodeseek.com/post-68951-1</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>2025年2月21日 上海一日游</title>
      <link>https://qklgblog.pages.dev/post/20250302/</link>
      <pubDate>Sun, 02 Mar 2025 15:48:20 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250302/</guid>
      <description>2月21日 上海一日游
地铁+高铁
人都快坐麻了
1 二次元店 南京路上的百联zx
卖手办的
当天是小孤独的生日，店里的立牌，
当时还有人cos那个乐队的，我没拍
隔壁小孩姐
元气少女缘结神，这个挺冷门的
团长
星野爱
mujica的涂鸦，不过番剧都烂完了
洛天依
卖轻小说和漫画的，但是都好贵啊
其实还去了趟静安大悦城，全是二游的，也没啥好发的了
2 电影院 回来的路上看了场电影，你的颜色，山田尚子的，但是剧情不行，歌还行
而且国内版有删减，少了五分钟
歌词里面的阿门都删了
不过26号，这个bd就出来了，重新又刷了一遍
3 苹果店 vision pro
这东西好重啊，人太多了， 我没戴
还测了下苹果店里牛逼的上海cn2，上次有哥们问到苹果自家服务器走的是内网还是公网
走的是公网，这东西就是个上海cn2，到cf只要40ms
隔壁的华为旗舰店•上海南京东路
三星的s25 ultra，摸了下也就那样子
4 外滩 东方明珠，陆家嘴三件套
外滩万国建筑群
海关大楼，就是那个钟楼
和平饭店
外滩的一堆银行
有兴趣的可以查下，都挺有年代的了</description>
      <content:encoded><![CDATA[<p>2月21日 上海一日游</p>
<p>地铁+高铁</p>
<p>人都快坐麻了</p>
<h1 id="1-二次元店">1 二次元店</h1>
<p>南京路上的百联zx</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140517375.webp" alt="20250302140517375"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140741379.webp" alt="20250302140741379"  />
</p>
<p>卖手办的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140544509.webp" alt="20250302140544509"  />
</p>
<p>当天是小孤独的生日，店里的立牌，</p>
<p>当时还有人cos那个乐队的，我没拍</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302151332631.webp" alt="20250302151332631"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140717355.webp" alt="20250302140717355"  />
</p>
<p>隔壁小孩姐</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302151315798.webp" alt="20250302151315798"  />
</p>
<p>元气少女缘结神，这个挺冷门的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140403395.webp" alt="20250302140357640"  />
</p>
<p>团长</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140443409.webp" alt="20250302140443409"  />
</p>
<p>星野爱</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140603811.webp" alt="20250302140603811"  />
</p>
<p>mujica的涂鸦，不过番剧都烂完了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140635929.webp" alt="20250302140635929"  />
</p>
<p>洛天依</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302140701516.webp" alt="20250302140701516"  />
</p>
<p>卖轻小说和漫画的，但是都好贵啊</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141629820.webp" alt="20250302141629820"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141641372.webp" alt="20250302141641372"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141658722.webp" alt="20250302141658722"  />
</p>
<p>其实还去了趟静安大悦城，全是二游的，也没啥好发的了</p>
<h1 id="2-电影院">2 电影院</h1>
<p>回来的路上看了场电影，你的颜色，山田尚子的，但是剧情不行，歌还行</p>
<p>而且国内版有删减，少了五分钟</p>
<p>歌词里面的阿门都删了</p>
<p>不过26号，这个bd就出来了，重新又刷了一遍</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141027335.webp" alt="20250302141027335"  />
</p>
<h1 id="3-苹果店">3 苹果店</h1>
<p>vision pro</p>
<p>这东西好重啊，人太多了， 我没戴</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141233321.webp" alt="20250302141233321"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141317652.webp" alt="20250302141317652"  />
</p>
<p>还测了下苹果店里牛逼的上海cn2，上次有哥们问到苹果自家服务器走的是内网还是公网</p>
<p>走的是公网，这东西就是个上海cn2，到cf只要40ms</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141518363.webp" alt="20250302141518363"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141511227.webp" alt="20250302141511227"  />
</p>
<p>隔壁的华为旗舰店•上海南京东路<br>
<img loading="lazy" src="https://s3.qklg.net/img/20250302141725245.webp" alt="20250302141725245"  />
</p>
<p>三星的s25 ultra，摸了下也就那样子</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302141807881.webp" alt="20250302141807881"  />
</p>
<h1 id="4-外滩">4 外滩</h1>
<p>东方明珠，陆家嘴三件套</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302142017214.webp" alt="20250302142017214"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302142051757.webp" alt="20250302142051757"  />
</p>
<p>外滩万国建筑群</p>
<p>海关大楼，就是那个钟楼</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302142148239.webp" alt="20250302142148239"  />
</p>
<p>和平饭店</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302152900921.webp" alt="20250302152900921"  />
</p>
<p>外滩的一堆银行</p>
<p>有兴趣的可以查下，都挺有年代的了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302142454533.webp" alt="20250302142454533"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302152833762.webp" alt="20250302152833762"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/20250302152810453.webp" alt="20250302152810453"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>江苏移动换华为hn8546x6n 光猫</title>
      <link>https://qklgblog.pages.dev/post/20250226/</link>
      <pubDate>Wed, 26 Feb 2025 18:26:14 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250226/</guid>
      <description>1 前言 华为HN8546X6N，移动的光猫
看中的就是它的2.5G口子，而且只要60包邮，闲鱼搞了台
出厂日期是24年6月，我那台上海的，卖家寄过来一天就到了
记录下怎么换的
2 恢复出厂设置 知乎上看到的 https://zhuanlan.zhihu.com/p/6800945855
原文如下
1、把光猫上的光纤线拔了，网线都拔了，只插电源线，保持开机状态 2、用取卡针/牙签，在光猫开机状态下，直接插入并顶住，光猫侧边的复位按钮 3、一直插着，光猫的灯会周期性的全灭、全亮 4、直到灯不亮了，再保持插3秒，接着松开取卡针/牙签 5、重置光猫完成，真正彻底恢复到出厂设置，此时默认超级密码也可用了，设备也需重新进行注册。 超级管理员密码的话
知乎上原文给的那个错的，他首字母大写了
我去恩山上找到了
华为HN8546x6n使用心得
https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;amp;tid=8390400&amp;amp;fromuid=588949
(出处: 恩山无线论坛)
用户名：CMCCAdmin 密码：aDm8H%MdA 3 拨号 B站上找到的https://www.bilibili.com/video/BV1kw4m1k7n1
江苏的不用改sn，我还为了找sn码，找旧光猫，翻了半天，要改的他视频里有教程的
其实可以看我以前的教程的https://qklg.net/post/20230926/
先用password登录
江苏的话password的话就是手机后10位
到40%出现已获得管理IP,正在连接省级数字家庭管理平台，就可以点右上角的返回登陆页面
用默认的超级管理员密码登录就ok了
tr069记得删掉，iptv什么的话看你自己了，我是不用的
拨号界面如图，vlanid记住，旧光猫上有的
用户名的话手机号，密码的话不行打10086重置下，六位数字
不改光猫sn码的话会弹验证的
打开管理 -设备管理-关闭rms跳转就ok了
4 ipv6防火墙关闭 安全-IPv6防火墙-使能IPv6防火墙控制转发报文 关掉ipv6防火墙
关掉我的软路由上ipv6就可以了
5 效果 测速能突破1000M了，其他也没啥
我家里其他2.5G设备可以看下我的这个 https://qklg.net/post/20241126/
都是穷哥们用的机子，交换机的话可以买水星最便宜的2.5G的，那玩意带网管功能，不要买我这个公版了</description>
      <content:encoded><![CDATA[<h1 id="1-前言">1 前言</h1>
<p>华为HN8546X6N，移动的光猫</p>
<p>看中的就是它的2.5G口子，而且只要60包邮，闲鱼搞了台</p>
<p>出厂日期是24年6月，我那台上海的，卖家寄过来一天就到了</p>
<p>记录下怎么换的</p>
<h1 id="2-恢复出厂设置">2 恢复出厂设置</h1>
<p>知乎上看到的 <a href="https://zhuanlan.zhihu.com/p/6800945855">https://zhuanlan.zhihu.com/p/6800945855</a></p>
<p>原文如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1、把光猫上的光纤线拔了，网线都拔了，只插电源线，保持开机状态
</span></span><span class="line"><span class="cl">2、用取卡针/牙签，在光猫开机状态下，直接插入并顶住，光猫侧边的复位按钮
</span></span><span class="line"><span class="cl">3、一直插着，光猫的灯会周期性的全灭、全亮
</span></span><span class="line"><span class="cl">4、直到灯不亮了，再保持插3秒，接着松开取卡针/牙签
</span></span><span class="line"><span class="cl">5、重置光猫完成，真正彻底恢复到出厂设置，此时默认超级密码也可用了，设备也需重新进行注册。
</span></span></code></pre></div><p>超级管理员密码的话</p>
<p>知乎上原文给的那个错的，他首字母大写了</p>
<p>我去恩山上找到了</p>
<p>华为HN8546x6n使用心得<br>
<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8390400&amp;fromuid=588949">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8390400&amp;fromuid=588949</a><br>
(出处: 恩山无线论坛)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">用户名：CMCCAdmin 
</span></span><span class="line"><span class="cl">密码：aDm8H%MdA
</span></span></code></pre></div><h1 id="3-拨号">3 拨号</h1>
<p>B站上找到的https://www.bilibili.com/video/BV1kw4m1k7n1</p>
<p>江苏的不用改sn，我还为了找sn码，找旧光猫，翻了半天，要改的他视频里有教程的</p>
<p>其实可以看我以前的教程的https://qklg.net/post/20230926/</p>
<p>先用password登录</p>
<p>江苏的话password的话就是手机后10位</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/J7K8CWF.png" alt="image-20250226180957307"  />
</p>
<p>到40%出现已获得管理IP,正在连接省级数字家庭管理平台，就可以点右上角的返回登陆页面</p>
<p>用默认的超级管理员密码登录就ok了</p>
<p>tr069记得删掉，iptv什么的话看你自己了，我是不用的</p>
<p>拨号界面如图，vlanid记住，旧光猫上有的</p>
<p>用户名的话手机号，密码的话不行打10086重置下，六位数字</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/5MF8wgG.png" alt="image-20250226181557069"  />
</p>
<p>不改光猫sn码的话会弹验证的<br>
打开管理 -设备管理-关闭rms跳转就ok了</p>
<h1 id="4-ipv6防火墙关闭">4 ipv6防火墙关闭</h1>
<p>安全-IPv6防火墙-使能IPv6防火墙控制转发报文 关掉ipv6防火墙</p>
<p>关掉我的软路由上ipv6就可以了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/CjYop49.png" alt="image-20250226181833724"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/uLpUcDU.png" alt="image-20250226181836442"  />
</p>
<h1 id="5-效果">5 效果</h1>
<p>测速能突破1000M了，其他也没啥</p>
<p>我家里其他2.5G设备可以看下我的这个 <a href="https://qklg.net/post/20241126/">https://qklg.net/post/20241126/</a></p>
<p>都是穷哥们用的机子，交换机的话可以买水星最便宜的2.5G的，那玩意带网管功能，不要买我这个公版了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/67UiFSP.png" alt="image-20250226181925119"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>claw looking glass汇总</title>
      <link>https://qklgblog.pages.dev/post/20250220/</link>
      <pubDate>Thu, 20 Feb 2025 19:14:58 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250220/</guid>
      <description>中国优化 香港 https://lg.cn-hongkong.claw.cloud/
Server Location: Hong Kong
Network Type: BGP (China Optimized)
IPv4 Address: 47.238.150.244
IPv6 Address: 240b:4001:278:8401:ffff::
东京 https://lg.ap-northeast-1.claw.cloud/
Server Location: Tokyo, Japan
Network Type: BGP (China Optimized)
IPv4 Address: 47.74.34.123
IPv6 Address: 240b:4009:25a:1800:ffff::
新加坡 https://lg.ap-southeast-1.claw.cloud/
Server Location: Singapore
Network Type: BGP (China Optimized)
IPv4 Address: 8.219.195.163
IPv6 Address: 240b:4000:93:de00:ffff::
非中国优化 香港 https://lg.cn-hongkong-intl.claw.cloud/
Server Location: Hong Kong
Network Type: BGP
IPv4 Address: 47.79.18.247
IPv6 Address: 240b:4001:278:8402::ffff
东京 https://lg.ap-northeast-1-intl.claw.cloud/
Server Location: Tokyo, Japan</description>
      <content:encoded><![CDATA[<h1 id="中国优化">中国优化</h1>
<h2 id="香港">香港</h2>
<p><a href="https://lg.cn-hongkong.claw.cloud/">https://lg.cn-hongkong.claw.cloud/</a><br>
Server Location: Hong Kong<br>
Network Type: BGP (China Optimized)<br>
IPv4 Address: 47.238.150.244<br>
IPv6 Address: 240b:4001:278:8401:ffff::</p>
<h2 id="东京">东京</h2>
<p><a href="https://lg.ap-northeast-1.claw.cloud/">https://lg.ap-northeast-1.claw.cloud/</a><br>
Server Location: Tokyo, Japan<br>
Network Type: BGP (China Optimized)<br>
IPv4 Address: 47.74.34.123<br>
IPv6 Address: 240b:4009:25a:1800:ffff::</p>
<h2 id="新加坡">新加坡</h2>
<p><a href="https://lg.ap-southeast-1.claw.cloud/">https://lg.ap-southeast-1.claw.cloud/</a><br>
Server Location: Singapore<br>
Network Type: BGP (China Optimized)<br>
IPv4 Address: 8.219.195.163<br>
IPv6 Address: 240b:4000:93:de00:ffff::</p>
<h1 id="非中国优化">非中国优化</h1>
<h2 id="香港-1">香港</h2>
<p><a href="https://lg.cn-hongkong-intl.claw.cloud/">https://lg.cn-hongkong-intl.claw.cloud/</a><br>
Server Location: Hong Kong<br>
Network Type: BGP<br>
IPv4 Address: 47.79.18.247<br>
IPv6 Address: 240b:4001:278:8402::ffff</p>
<h2 id="东京-1">东京</h2>
<p><a href="https://lg.ap-northeast-1-intl.claw.cloud/">https://lg.ap-northeast-1-intl.claw.cloud/</a><br>
Server Location: Tokyo, Japan<br>
Network Type: BGP<br>
IPv4 Address: 47.79.42.32<br>
IPv6 Address: 240b:4009:25a:1801::ffff</p>
<h2 id="新加坡-1">新加坡</h2>
<p><a href="https://lg.ap-southeast-1-intl.claw.cloud/">https://lg.ap-southeast-1-intl.claw.cloud/</a><br>
Server Location: Singapore<br>
Network Type: BGP<br>
IPv4 Address: 47.79.122.185<br>
IPv6 Address: 240b:4000:93:de01::ffff</p>
<h2 id="德国-法兰克福">德国 法兰克福</h2>
<p><a href="https://lg.eu-central-1.claw.cloud/">https://lg.eu-central-1.claw.cloud/</a><br>
Server Location: Frankfurt, Germany<br>
Network Type: BGP<br>
IPv4 Address: 8.209.70.255<br>
IPv6 Address: 240b:4005:13c:2a00:ffff::</p>
<h2 id="美国东部-弗吉尼亚">美国东部 弗吉尼亚</h2>
<p><a href="https://lg.us-east-1.claw.cloud/">https://lg.us-east-1.claw.cloud/</a><br>
Server Location: N. Virginia, United States<br>
Network Type: BGP<br>
IPv4 Address: 47.253.157.212<br>
IPv6 Address: 240b:4002:131:bc00:ffff::</p>
<h2 id="美国西部-加州">美国西部 加州</h2>
<p><a href="https://lg.us-west-1.claw.cloud/">https://lg.us-west-1.claw.cloud/</a><br>
Server Location: N. California, United States<br>
Network Type: BGP<br>
IPv4 Address: 47.251.75.195<br>
IPv6 Address: 240b:4004:108:7f00:ffff::</p>
<p>今天新上的</p>
<h2 id="英国-伦敦">英国 伦敦</h2>
<p><a href="https://lg.eu-west-1.claw.cloud/">https://lg.eu-west-1.claw.cloud/</a><br>
Server Location: London, United Kingdom<br>
Network Type: BGP<br>
IPv4 Address: 8.208.44.202<br>
IPv6 Address: <code>240b:4011:a:7a00:ffff::</code></p>
<h2 id="印尼-雅加达">印尼 雅加达</h2>
<p><a href="https://lg.ap-southeast-5.claw.cloud/">https://lg.ap-southeast-5.claw.cloud/</a><br>
Server Location: Jakarta, Indonesia<br>
Network Type: BGP<br>
IPv4 Address: 147.139.193.80<br>
IPv6 Address: 240b:400b:1a:a000:ffff::</p>
]]></content:encoded>
    </item>
    <item>
      <title>马斯克xai，冲5刀送150刀</title>
      <link>https://qklgblog.pages.dev/post/20250218/</link>
      <pubDate>Tue, 18 Feb 2025 00:45:08 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250218/</guid>
      <description>1 注册 https://accounts.x.ai/sign-in
我选的谷歌登录
2 绑银行卡 https://console.x.ai/
billing/payment 这边添加地址和银行卡
中国的银行卡可以绑定的我选的招行的visa，记得设置下限额，不然当心卖房
我选的是日本区的，机子挂的绿云的日本
记得别选欧洲的，不然没法申请额度
地区如下
- 奥地利, 比利时, 保加利亚, 克罗地亚, 塞浦路斯, 捷克共和国, 丹麦, 爱沙尼亚, 芬兰, 法国, 德国, 希腊, 匈牙利, 爱尔兰, 意大利, 拉脱维亚, 立陶宛, 卢森堡, 马耳他, 荷兰, 波兰, 葡萄牙, 罗马尼亚, 斯洛伐克, 斯洛文尼亚, 西班牙, 瑞典, 冰岛, 列支敦士登, 挪威, 英国 3 冲5刀 billing-credits-Prepaid credits，点Purchase credits冲5刀进去
4 搞150刀额度 https://docs.x.ai/docs/data-sharing#how-it-woks
官方文档，点击Enroll in data sharing加入，完事了</description>
      <content:encoded><![CDATA[<h1 id="1-注册">1 注册</h1>
<p><a href="https://accounts.x.ai/sign-in">https://accounts.x.ai/sign-in</a></p>
<p>我选的谷歌登录</p>
<h1 id="2-绑银行卡">2 绑银行卡</h1>
<p><a href="https://console.x.ai/">https://console.x.ai/</a></p>
<p>billing/payment 这边添加地址和银行卡</p>
<p>中国的银行卡可以绑定的我选的招行的visa，记得设置下限额，不然当心卖房</p>
<p>我选的是日本区的，机子挂的绿云的日本</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/jaQJ5Wp.png" alt="image-20250218002452328"  />
</p>
<p>记得别选欧洲的，不然没法申请额度</p>
<p>地区如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">- 奥地利, 比利时, 保加利亚, 克罗地亚, 塞浦路斯, 捷克共和国, 丹麦, 爱沙尼亚, 芬兰, 法国, 德国, 希腊, 匈牙利, 爱尔兰, 意大利, 拉脱维亚, 立陶宛, 卢森堡, 马耳他, 荷兰, 波兰, 葡萄牙, 罗马尼亚, 斯洛伐克, 斯洛文尼亚, 西班牙, 瑞典, 冰岛, 列支敦士登, 挪威, 英国
</span></span></code></pre></div><h1 id="3-冲5刀">3 冲5刀</h1>
<p>billing-credits-Prepaid credits，点Purchase credits冲5刀进去</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/zzueUcq.png" alt="image-20250218002640732"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/3YsQ3Hj.png" alt="image-2025021800"  />
</p>
<h1 id="4-搞150刀额度">4 搞150刀额度</h1>
<p><a href="https://docs.x.ai/docs/data-sharing#how-it-woks">https://docs.x.ai/docs/data-sharing#how-it-woks</a></p>
<p>官方文档，点击Enroll in data sharing加入，完事了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/lPMWJ6f.png" alt="image-20250218003114510"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/8S81N2u.png" alt="image-20250218003127071"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>cf的ddos报告分享</title>
      <link>https://qklgblog.pages.dev/post/20250207/</link>
      <pubDate>Fri, 07 Feb 2025 15:03:57 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250207/</guid>
      <description>前言
cloudflare的每个季度都有个ddos报告，原文如下
https://blog.cloudflare.com/zh-cn/ddos-threat-report-for-2024-q4/
给mjj分享几个好玩的点
1 cf的网络规模大的吓人 cf最近五年，20年的规模才35Tbps，现在	321 Tbps，近 20% 的全球网站
2 https流量现在是大头了 cf现在接近 94% 的合法流量是https。只有 6% 是明文 HTTP（未加密)
3 最大规模的ddos 上个月 5.6 Tbps，还是个接入Cloudflare Magic Transit的东亚isp
来源是1.3 万个 IoT 设备，就是家里的冰箱洗衣机，其实在打别人，哈哈
4 ddos来源 ddos来源全是mjj喜欢用的
第一是hz，第二do，第三ovh
前10这几个全是老面孔，除了上面这三位，还有mjj最喜欢的 良心云，龟壳 ，vultr，谷歌微软
最大的来源国家居然是印尼，也不知道为啥是
5 cn依然是受到ddos最多攻击的国家 以前听大佬说回国带宽都被ddos塞满了，看了cf的报告我觉得真信了</description>
      <content:encoded><![CDATA[<p>前言</p>
<p>cloudflare的每个季度都有个ddos报告，原文如下</p>
<p><a href="https://blog.cloudflare.com/zh-cn/ddos-threat-report-for-2024-q4/">https://blog.cloudflare.com/zh-cn/ddos-threat-report-for-2024-q4/</a></p>
<p>给mjj分享几个好玩的点</p>
<h1 id="1-cf的网络规模大的吓人">1 cf的网络规模大的吓人</h1>
<p>cf最近五年，20年的规模才35Tbps，现在	321 Tbps，近 20% 的全球网站</p>
<h1 id="2-https流量现在是大头了">2 https流量现在是大头了</h1>
<p>cf现在接近 94% 的合法流量是https。只有 6% 是明文 HTTP（未加密)</p>
<h1 id="3-最大规模的ddos">3 最大规模的ddos</h1>
<p>上个月 5.6 Tbps，还是个接入Cloudflare Magic Transit的东亚isp</p>
<p>来源是1.3 万个 IoT 设备，就是家里的冰箱洗衣机，其实在打别人，哈哈</p>
<h1 id="4-ddos来源">4 ddos来源</h1>
<p>ddos来源全是mjj喜欢用的</p>
<p>第一是hz，第二do，第三ovh</p>
<p>前10这几个全是老面孔，除了上面这三位，还有mjj最喜欢的 良心云，龟壳 ，vultr，谷歌微软</p>
<p>最大的来源国家居然是印尼，也不知道为啥是</p>
<h1 id="5-cn依然是受到ddos最多攻击的国家">5 cn依然是受到ddos最多攻击的国家</h1>
<p>以前听大佬说回国带宽都被ddos塞满了，看了cf的报告我觉得真信了</p>
]]></content:encoded>
    </item>
    <item>
      <title>自用脚本备份</title>
      <link>https://qklgblog.pages.dev/post/20250205/</link>
      <pubDate>Wed, 05 Feb 2025 17:14:35 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250205/</guid>
      <description>更新
apt update &amp;amp;&amp;amp; apt upgrade -y 安装curl wget sudo unzip
apt install curl wget sudo unzip -y 2G swarp
sudo bash -c &amp;#34;fallocate -l 2G /swapfile &amp;amp;&amp;amp; chmod 600 /swapfile &amp;amp;&amp;amp; mkswap /swapfile &amp;amp;&amp;amp; swapon /swapfile &amp;amp;&amp;amp; echo &amp;#39;/swapfile none swap sw 0 0&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34; bbr+fq
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p sysctl net.ipv4.tcp_available_congestion_control lsmod | grep bbr ipv4优先
sed -i &amp;#39;s/#precedence ::ffff:0:0\/96 100/precedence ::ffff:0:0\/96 100/&amp;#39; /etc/gai.</description>
      <content:encoded><![CDATA[<p>更新</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt update &amp;&amp; apt upgrade -y
</span></span></code></pre></div><p>安装curl wget sudo unzip</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt install curl wget sudo unzip -y
</span></span></code></pre></div><p>2G swarp</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo bash -c &#34;fallocate -l 2G /swapfile &amp;&amp; chmod 600 /swapfile &amp;&amp; mkswap /swapfile &amp;&amp; swapon /swapfile &amp;&amp; echo &#39;/swapfile none swap sw 0 0&#39; &gt;&gt; /etc/fstab&#34;
</span></span></code></pre></div><p>bbr+fq</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">echo &#34;net.core.default_qdisc=fq&#34; &gt;&gt; /etc/sysctl.conf
</span></span><span class="line"><span class="cl">echo &#34;net.ipv4.tcp_congestion_control=bbr&#34; &gt;&gt; /etc/sysctl.conf
</span></span><span class="line"><span class="cl">sysctl -p
</span></span><span class="line"><span class="cl">sysctl net.ipv4.tcp_available_congestion_control
</span></span><span class="line"><span class="cl">lsmod | grep bbr
</span></span></code></pre></div><p>ipv4优先</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sed -i &#39;s/#precedence ::ffff:0:0\/96  100/precedence ::ffff:0:0\/96  100/&#39; /etc/gai.conf
</span></span></code></pre></div><p>nexttrace</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl nxtrace.org/nt | bash
</span></span></code></pre></div><p>江苏三网回程</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">nexttrace 218.2.2.2
</span></span><span class="line"><span class="cl">nexttrace 112.87.86.194
</span></span><span class="line"><span class="cl">nexttrace 112.4.0.55
</span></span></code></pre></div><p>curl ip.sb</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl ip.sb
</span></span></code></pre></div><p>ipv4 geo</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl ipv4.ping0.cc/geo
</span></span></code></pre></div><p>ipv6 geo</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl ipv6.ping0.cc/geo
</span></span></code></pre></div><p>ipv6 ping</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ping 2001:4860:4860::8888
</span></span></code></pre></div><p>流媒体检测</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)
</span></span></code></pre></div><p>ip质量检测</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -sL IP.Check.Place)
</span></span></code></pre></div><p>超售检测</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget --no-check-certificate -O memoryCheck.sh https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh &amp;&amp; chmod +x memoryCheck.sh &amp;&amp; bash memoryCheck.sh
</span></span></code></pre></div><p>硬盘测试</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">dd bs=64k count=4k if=/dev/zero of=test oflag=dsync
</span></span></code></pre></div><p>三网测速</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(wget -qO- bash.spiritlhl.net/ecs-net)
</span></span></code></pre></div><p>bench.sh</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -Lso- bench.sh | bash
</span></span></code></pre></div><p>yabs</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sL yabs.sh | bash
</span></span></code></pre></div><p>geekbench5</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sL yabs.sh|bash -s -- -if -fdi5
</span></span></code></pre></div><p>八合一脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -P /root -N --no-check-certificate &#34;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&#34; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh
</span></span></code></pre></div><p>xray官方脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash -c &#34;$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)&#34; @ install
</span></span></code></pre></div><p>singbox官方脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -fsSL https://sing-box.app/deb-install.sh)
</span></span></code></pre></div><p>warp</p>
<p>warp-go</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/warp-go.sh &amp;&amp; bash warp-go.sh
</span></span></code></pre></div><p>wgcf</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>拿vps跑deepseek r1</title>
      <link>https://qklgblog.pages.dev/post/20250129/</link>
      <pubDate>Wed, 29 Jan 2025 17:27:13 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250129/</guid>
      <description>前言 前排提示:ollama很吃性能的，别拿你的生产力的小鸡跑
建议内存大点的鸡上跑
1 docker安装openwebui+ollama https://github.com/open-webui/open-webui
For CPU Only: If you&amp;rsquo;re not using a GPU, use this command instead:
docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama 2 访问及设置 ① 访问 ip:3000端口打开即可，有条件的话nginx反代下
② 设置用户名密码邮箱 ##③ 切换语言
点击右上角头像下面的settings-general，选择中文，save保存
④ 添加模型 左上角选择一个模型的话可以输入你想要的模型，
我们选择7b的，输入 deepseek-r1:7b,从ollama拉取
下载deepseek的7b模型，小鸡的性能跑个7b还是可以的
如果没法跑的话，可以跑1.5b的 deepseek-r1:1.5b
其他的模型的话这边
https://ollama.com/library/deepseek-r1
3 闲言碎语 本人用签名探针上的家里云。配置为5600+32G内存跑的
占用的话大概cpu在50%左右，内存吃到10G
我的cpu的话跑分gb5单核1675多，多核8934，你可以参考下自己跑着玩
7.5b的效果其实不怎么样，你们跑了就知道了
其实还不如自己直接调用api来的合适
跑api的话可以参考我这个帖子
https://qklg.net/post/20250127/
有条件上显卡跑，而且显存至少16G的，这种纯cpu跑的是玩具
隔壁老哥拿12400跑72b的https://linux.do/t/topic/397701/20
半小时才能回答一次，隔壁老哥cpu当一回时代先锋</description>
      <content:encoded><![CDATA[<h1 id="前言">前言</h1>
<p>前排提示:ollama很吃性能的，别拿你的生产力的小鸡跑<br>
建议内存大点的鸡上跑</p>
<h1 id="1-docker安装openwebuiollama">1 docker安装openwebui+ollama</h1>
<p><a href="https://github.com/open-webui/open-webui">https://github.com/open-webui/open-webui</a><br>
For CPU Only: If you&rsquo;re not using a GPU, use this command instead:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
</span></span></code></pre></div><h1 id="2-访问及设置">2 访问及设置</h1>
<h2 id="-访问">① 访问</h2>
<p>ip:3000端口打开即可，有条件的话nginx反代下</p>
<h2 id="-设置用户名密码邮箱">② 设置用户名密码邮箱</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/YYnrsjR.png" alt="image-20250129170712679"  />
</p>
<p>##③ 切换语言</p>
<p>点击右上角头像下面的settings-general，选择中文，save保存</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/0GbOotp.png" alt="image-20250129170809543"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/0fPh5qs.png" alt="image-20250129170824068"  />
</p>
<h2 id="-添加模型">④ 添加模型</h2>
<p>左上角选择一个模型的话可以输入你想要的模型，</p>
<p>我们选择7b的，输入 deepseek-r1:7b,从ollama拉取</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/nOPOWHY.png" alt="image-20250129171023372"  />
</p>
<p>下载deepseek的7b模型，小鸡的性能跑个7b还是可以的<br>
如果没法跑的话，可以跑1.5b的  deepseek-r1:1.5b</p>
<p>其他的模型的话这边<br>
<a href="https://ollama.com/library/deepseek-r1">https://ollama.com/library/deepseek-r1</a></p>
<h1 id="3-闲言碎语">3 闲言碎语</h1>
<p>本人用签名探针上的家里云。配置为5600+32G内存跑的</p>
<p>占用的话大概cpu在50%左右，内存吃到10G<br>
我的cpu的话跑分gb5单核1675多，多核8934，你可以参考下自己跑着玩</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/cpzRGgs.png" alt="image-20241110200910735"  />
</p>
<p>7.5b的效果其实不怎么样，你们跑了就知道了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/IsaW10B.png" alt=""  />
</p>
<p>其实还不如自己直接调用api来的合适</p>
<p>跑api的话可以参考我这个帖子</p>
<p><a href="https://qklg.net/post/20250127/">https://qklg.net/post/20250127/</a></p>
<p>有条件上显卡跑，而且显存至少16G的，这种纯cpu跑的是玩具<br>
隔壁老哥拿12400跑72b的https://linux.do/t/topic/397701/20<br>
半小时才能回答一次，隔壁老哥cpu当一回时代先锋</p>
]]></content:encoded>
    </item>
    <item>
      <title>用nextchat调用deepseek的api</title>
      <link>https://qklgblog.pages.dev/post/20250127/</link>
      <pubDate>Mon, 27 Jan 2025 13:57:01 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250127/</guid>
      <description>1 docker搭建 compose文件如下
OPENAI_API_KEY的话替换成你deepseek的api key，
DeepSeek API 使用与 OpenAI 兼容的 API 格式
deepseek的api生成地址 https://platform.deepseek.com/api_keys
参考deepseek的文档 https://api-docs.deepseek.com/zh-cn/
code访问密码，面板最好搞个密码
services: chatgpt-next-web: image: yidadaa/chatgpt-next-web container_name: chatgpt-next-web ports: - &amp;#34;127.0.0.1:3000:3000&amp;#34; environment: - OPENAI_API_KEY=sk-xxxxxx - CODE=访问密码 - BASE_URL=https://api.deepseek.com - CUSTOM_MODELS=deepseek-chat - DEFAULT_MODEL=deepseek-chat restart: unless-stopped 搭建完成之后，输入ip:3000即可访问你的面板
建议有条件的话用caddy或者nginx反代下搞下https
使用时记得输入下面板密码和模型切换成deepseek
2 本地客户端调用 参考 https://github.com/ChatGPTNextWeb/NextChat/issues/6037
① 下载next chat https://github.com/ChatGPTNextWeb/NextChat/releases
如果是win的话直接下载 exe安装即可
② 调用 如图所示
模型服务商 OpenAI不变
DeepSeek API 使用与 OpenAI 兼容的 API 格式
接口地址填写 https://api.deepseek.com
api key填写deepseek的api，sk开头的，生成地址 https://platform.deepseek.com/api_keys
自定义模型名称deepseek-chat</description>
      <content:encoded><![CDATA[<h1 id="1-docker搭建">1 docker搭建</h1>
<p>compose文件如下<br>
OPENAI_API_KEY的话替换成你deepseek的api key，<br>
DeepSeek API 使用与 OpenAI 兼容的 API 格式<br>
deepseek的api生成地址 <a href="https://platform.deepseek.com/api_keys">https://platform.deepseek.com/api_keys</a><br>
参考deepseek的文档  <a href="https://api-docs.deepseek.com/zh-cn/">https://api-docs.deepseek.com/zh-cn/</a></p>
<p>code访问密码，面板最好搞个密码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  chatgpt-next-web:
</span></span><span class="line"><span class="cl">    image: yidadaa/chatgpt-next-web
</span></span><span class="line"><span class="cl">    container_name: chatgpt-next-web
</span></span><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">      - &#34;127.0.0.1:3000:3000&#34;
</span></span><span class="line"><span class="cl">    environment:
</span></span><span class="line"><span class="cl">      - OPENAI_API_KEY=sk-xxxxxx
</span></span><span class="line"><span class="cl">      - CODE=访问密码
</span></span><span class="line"><span class="cl">      - BASE_URL=https://api.deepseek.com
</span></span><span class="line"><span class="cl">      - CUSTOM_MODELS=deepseek-chat
</span></span><span class="line"><span class="cl">      - DEFAULT_MODEL=deepseek-chat
</span></span><span class="line"><span class="cl">    restart: unless-stopped
</span></span></code></pre></div><p>搭建完成之后，输入ip:3000即可访问你的面板<br>
建议有条件的话用caddy或者nginx反代下搞下https<br>
使用时记得输入下面板密码和模型切换成deepseek<br>
<img loading="lazy" src="https://s3.qklg.net/img/S5dJBGM.png" alt=""  />
</p>
<h1 id="2-本地客户端调用">2 本地客户端调用</h1>
<p>参考 <a href="https://github.com/ChatGPTNextWeb/NextChat/issues/6037">https://github.com/ChatGPTNextWeb/NextChat/issues/6037</a></p>
<h2 id="-下载next-chat">① 下载next chat</h2>
<p><a href="https://github.com/ChatGPTNextWeb/NextChat/releases">https://github.com/ChatGPTNextWeb/NextChat/releases</a></p>
<p>如果是win的话直接下载 exe安装即可</p>
<h2 id="-调用">② 调用</h2>
<p>如图所示</p>
<p>模型服务商 OpenAI不变</p>
<p>DeepSeek API 使用与 OpenAI 兼容的 API 格式</p>
<p>接口地址填写 <a href="https://api.deepseek.com">https://api.deepseek.com</a></p>
<p>api key填写deepseek的api，sk开头的，生成地址 <a href="https://platform.deepseek.com/api_keys">https://platform.deepseek.com/api_keys</a></p>
<p>自定义模型名称deepseek-chat</p>
<p>模型切换成 deepseek-chat</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/m7onc1r.png" alt="image-20250127135209762"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>哪吒探针V1启用google登录</title>
      <link>https://qklgblog.pages.dev/post/20250126/</link>
      <pubDate>Sun, 26 Jan 2025 18:16:50 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250126/</guid>
      <description>1 创建google项目 ① 打开 https://console.cloud.google.com/apis/dashboard
② 点击新建项目创建项目
③ 项目名称随便取个，叫nezha完事了
④ 点击创建，完成创建
2 配置OAuth ① 点击左侧的API和服务&amp;quot; → &amp;ldquo;OAuth权限请求页面&amp;rdquo;
打开链接 https://console.cloud.google.com/apis/credentials/ 直达
② 用户类型选择外部，点击创建
③ 应用名称填写随便填写一个
用户支持电子邮件，选择你自己的gmail邮箱
应用徽标，选择一个图片传上去，
应用网域，填写你探针的地址，列如https://nezha.example.com
已获授权的网域填写你的哪吒探针的顶级域名 example.com
开发者信息填写你的gmail邮箱
保存并继续
④ 范围的话，点添加或移除范围，选择前两个就够了，保存并继续
⑤ 测试用户
点击添加add users，把自己的gmail邮箱输入就ok了，保存并继续
⑥ 显示摘要，就完成了
3 配置OAuth凭据 ① 左侧的&amp;quot;API和服务-凭据
点击链接直达 https://console.cloud.google.com/apis/credentials
创建凭据-oatuth客户端id
② 选择应用类型（Web应用)
③ 设置已获授权的 JavaScript 来源 填写你的探针域名 https://nezha.example.com
已获授权的重定向 URI，填写哪吒的callback地址 https://nezha.example.com/api/v1/oauth2/callback
点击创建，获得
clientid和clientsecret
4 哪吒面板配置 ① 打开/opt/nezha/dashboard/data/config.yaml下加入如下
​ clientid和clientsecret替换上面生成的，
oauth2: Google: clientid: &amp;#34;your id&amp;#34; clientsecret: &amp;#34;your secret&amp;#34; endpoint: authurl: &amp;#34;https://accounts.</description>
      <content:encoded><![CDATA[<h1 id="1-创建google项目">1 创建google项目</h1>
<h2 id="heading">①</h2>
<p>打开 <a href="https://console.cloud.google.com/apis/dashboard">https://console.cloud.google.com/apis/dashboard</a></p>
<h2 id="heading-1">②</h2>
<p>点击新建项目创建项目</p>
<h2 id="heading-2">③</h2>
<p>项目名称随便取个，叫nezha完事了</p>
<h2 id="heading-3">④</h2>
<p>点击创建，完成创建</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/VsVrKPe.png" alt="image-20250126165956579"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/TkX4DRg.png" alt="image-20250126170032042"  />
</p>
<h1 id="2-配置oauth">2 配置OAuth</h1>
<h2 id="heading-4">①</h2>
<p>点击左侧的API和服务&quot; → &ldquo;OAuth权限请求页面&rdquo;</p>
<p>打开链接 <a href="https://console.cloud.google.com/apis/credentials/">https://console.cloud.google.com/apis/credentials/</a> 直达</p>
<h2 id="heading-5">②</h2>
<p>用户类型选择外部，点击创建</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/5lBCoj6.png" alt="image-20250126170651299"  />
</p>
<h2 id="heading-6">③</h2>
<p>应用名称填写随便填写一个</p>
<p>用户支持电子邮件，选择你自己的gmail邮箱</p>
<p>应用徽标，选择一个图片传上去，</p>
<p>应用网域，填写你探针的地址，列如https://nezha.example.com</p>
<p>已获授权的网域填写你的哪吒探针的顶级域名 example.com</p>
<p>开发者信息填写你的gmail邮箱</p>
<p>保存并继续</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/vzyD6mV.png" alt="image-20250126171129732"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/mKmS0vQ.png" alt="image-20250126171259628"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/MKGCSgh.png" alt="image-20250126171327087"  />
</p>
<h2 id="heading-7">④</h2>
<p>范围的话，点添加或移除范围，选择前两个就够了，保存并继续</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/oGNmo74.png" alt="image-20250126172059522"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/BVPnDfe.png" alt="image-20250126172103409"  />
</p>
<h2 id="heading-8">⑤</h2>
<p>测试用户</p>
<p>点击添加add users，把自己的gmail邮箱输入就ok了，保存并继续</p>
<h2 id="heading-9">⑥</h2>
<p>显示摘要，就完成了</p>
<h1 id="3-配置oauth凭据">3 配置OAuth凭据</h1>
<h2 id="heading-10">①</h2>
<p>左侧的&quot;API和服务-凭据</p>
<h2 id="heading-11"></h2>
<p>点击链接直达 <a href="https://console.cloud.google.com/apis/credentials">https://console.cloud.google.com/apis/credentials</a></p>
<p>创建凭据-oatuth客户端id</p>
<h2 id="image-20250126172543453httpss3qklgnetimgcc7njfepng"><img loading="lazy" src="https://s3.qklg.net/img/CC7NJfE.png" alt="image-20250126172543453"  />
②</h2>
<p>选择应用类型（Web应用)</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/nMy3S5P.png" alt="image-20250126172655544"  />
</p>
<h2 id="heading-12">③</h2>
<p>设置已获授权的 JavaScript 来源 填写你的探针域名 <a href="https://nezha.example.com">https://nezha.example.com</a></p>
<p>已获授权的重定向 URI，填写哪吒的callback地址   <a href="https://nezha.example.com/api/v1/oauth2/callback">https://nezha.example.com/api/v1/oauth2/callback</a></p>
<p>点击创建，获得</p>
<p>clientid和clientsecret</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/ytIuOSb.png" alt="image-20250126173651162"  />
</p>
<h1 id="4-哪吒面板配置">4 哪吒面板配置</h1>
<h2 id="heading-13">①</h2>
<p>打开/opt/nezha/dashboard/data/config.yaml下加入如下</p>
<p>​    clientid和clientsecret替换上面生成的，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">oauth2:
</span></span><span class="line"><span class="cl">  Google:
</span></span><span class="line"><span class="cl">    clientid: &#34;your id&#34;
</span></span><span class="line"><span class="cl">    clientsecret: &#34;your secret&#34;
</span></span><span class="line"><span class="cl">    endpoint:
</span></span><span class="line"><span class="cl">      authurl: &#34;https://accounts.google.com/o/oauth2/v2/auth&#34;
</span></span><span class="line"><span class="cl">      tokenurl: &#34;https://oauth2.googleapis.com/token&#34;
</span></span><span class="line"><span class="cl">    scopes:
</span></span><span class="line"><span class="cl">       - &#34;https://www.googleapis.com/auth/userinfo.email&#34;
</span></span><span class="line"><span class="cl">    userinfourl: &#34;https://openidconnect.googleapis.com/v1/userinfo&#34;
</span></span><span class="line"><span class="cl">    useridpath: &#34;sub&#34;
</span></span></code></pre></div><h2 id="heading-14">②</h2>
<p>重启docker</p>
<p>重启后登录 登录哪吒探针的后台，进入“个人信息”页面绑定即可。</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/R0L7KWB.png" alt="image-20250126175540357"  />
</p>
<h2 id="heading-15">③</h2>
<p>为了安全，可以在个人信息页面，更新个人资料那边，禁用密码登录</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/YS9X7uf.png" alt="image-20250126175717060"  />
</p>
<p>感谢以下几位大佬</p>
<p>谷歌的设置参考了https://coreychiu.com/blogs/google-oauth-setup</p>
<p>哪吒yaml文件设置参考了https://www.nodeseek.com/post-234604-1</p>
<p><a href="https://www.74110.net/tutorial/linux/nezha-v1-github-oauth2/">https://www.74110.net/tutorial/linux/nezha-v1-github-oauth2/</a></p>
<p>哪吒wiki <a href="https://nezha.wiki/guide/q14.html">https://nezha.wiki/guide/q14.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>claw 日本dns修改</title>
      <link>https://qklgblog.pages.dev/post/20250121/</link>
      <pubDate>Tue, 21 Jan 2025 17:25:35 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250121/</guid>
      <description>我之前香港也遇到了
ping google.com延迟五六十，这次日本也遇到了
把下面文件夹下dns 8888改成1.0.0.1就好了
/etc/resolv.conf
/etc/network/interfaces</description>
      <content:encoded><![CDATA[<p>我之前香港也遇到了<br>
ping google.com延迟五六十，这次日本也遇到了<br>
<img loading="lazy" src="https://s3.qklg.net/img/67IlWC2.png" alt=""  />
</p>
<p>把下面文件夹下dns 8888改成1.0.0.1就好了<br>
/etc/resolv.conf<br>
/etc/network/interfaces</p>
]]></content:encoded>
    </item>
    <item>
      <title>发现了个好玩的</title>
      <link>https://qklgblog.pages.dev/post/20250120/</link>
      <pubDate>Mon, 20 Jan 2025 17:22:12 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250120/</guid>
      <description>刚想买个腾讯云200M，拉我的claw 7刀玩玩
于是我测了claw东京到腾讯云上海的回程
发现了个好玩的，软银在国内的pop
北京延迟5ms，这东西应该是软银在国内pop，应该是在墙外的
以前听说过ntt在上海有pop，但是没见过
这次真见到了，软银在北京的pop了
https://www.itdog.cn/ping/softbank221111202062.bbtec.net</description>
      <content:encoded><![CDATA[<p>刚想买个腾讯云200M，拉我的claw 7刀玩玩<br>
于是我测了claw东京到腾讯云上海的回程<br>
发现了个好玩的，软银在国内的pop<br>
北京延迟5ms，这东西应该是软银在国内pop，应该是在墙外的<br>
以前听说过ntt在上海有pop，但是没见过<br>
这次真见到了，软银在北京的pop了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/sqQsB5n.png" alt=""  />
</p>
<p><a href="https://www.itdog.cn/ping/softbank221111202062.bbtec.net">https://www.itdog.cn/ping/softbank221111202062.bbtec.net</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/ocI9SKj.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享下全球海缆地图</title>
      <link>https://qklgblog.pages.dev/post/20250106/</link>
      <pubDate>Mon, 06 Jan 2025 00:35:18 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20250106/</guid>
      <description>三大运营商各自官网的，也有陆缆
移动 https://globalresources.cmi.chinamobile.com/#/
联通 https://www.cuguplus.com/zh-hant/globalnetwork
https://www.cuguplus.com/network/
电信 https://media.chinatelecomeurope.com/view/1056582712/
https://www.ctamericas.com/company/global-network/
其他的地图
全球都有的那种
https://www.submarinecablemap.com/
https://www.infrapedia.com/
https://submarine-cable-map-2024.telegeography.com/</description>
      <content:encoded><![CDATA[<p>三大运营商各自官网的，也有陆缆</p>
<p>移动 <a href="https://globalresources.cmi.chinamobile.com/#/">https://globalresources.cmi.chinamobile.com/#/</a></p>
<p>联通 <a href="https://www.cuguplus.com/zh-hant/globalnetwork">https://www.cuguplus.com/zh-hant/globalnetwork</a><br>
<a href="https://www.cuguplus.com/network/">https://www.cuguplus.com/network/</a></p>
<p>电信 <a href="https://media.chinatelecomeurope.com/view/1056582712/">https://media.chinatelecomeurope.com/view/1056582712/</a><br>
<a href="https://www.ctamericas.com/company/global-network/">https://www.ctamericas.com/company/global-network/</a></p>
<p>其他的地图<br>
全球都有的那种<br>
<a href="https://www.submarinecablemap.com/">https://www.submarinecablemap.com/</a><br>
<a href="https://www.infrapedia.com/">https://www.infrapedia.com/</a><br>
<a href="https://submarine-cable-map-2024.telegeography.com/">https://submarine-cable-map-2024.telegeography.com/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>我的哪吒探针v1安全措施</title>
      <link>https://qklgblog.pages.dev/post/20241231/</link>
      <pubDate>Tue, 31 Dec 2024 19:26:19 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241231/</guid>
      <description>1 tls+cloudflare ①一键脚本搭建设置 请指定安装命令中预设的 nezha-agent 连接地址(例如 example.com:443) 域名和端口选择你套cf的域名 还有443端口
是否希望通过 TLS 连接 Agent? (影响安装命令)[y/N] 这边输入y 启用tls
②反代 cf后台打开解析个ip过来，记得云朵直接打开，避免ip泄露，直接ipv6完事
cf后台的SSL/TLS选择完全严格
本地用nginx或者caddy反代下
参考官方文档 https://nezha.wiki/guide/q3.html
如果你使用1panel的话，可以参考这个大佬的文章 https://misaka.es/archives/42.html
③ cloudflare后台启用ws和grpc ④ 哪吒后台启动tls连接agent Agent对接地址【域名/IP:端口】 域名:443
后台的Agent 使用 TLS 连接 勾选上
2 关闭8008端口的外部访问 打开如下哪吒的compose文件，位置在
/opt/nezha/dashboard/docker-compose.yaml 端口不要暴露在公网上
ports: - 127.0.0.1:8008:8008 3 agent上禁用webssh 打开
/opt/nezha/agent/config.yml 把 disable_command_execute:改成true
参考哪吒文档 https://nezha.wiki/guide/q7.html
4 把哪吒后台重定向到首页 如果你和我一样不怎么访问后台的话，直接在cf上用规则把哪吒的后台dashboard给重定向到首页完事了
或者你自己访问的时候，本地改个host直接访问原站完事了
cf 后台，规则-重定向规则
添加如下规则把后台dashboard重定向到首页
规则名称随便取个
传入请求匹配选择，通配符模式
url
*域名/*dashboard* 目标就是你的首页，状态选择301，保存就完事了
这样子打开后台的时候就直接跳首页了
再把api也重定向下
请求 URL
https://域名/api/v1/login 其他如图
​</description>
      <content:encoded><![CDATA[<h1 id="1-tlscloudflare">1 tls+cloudflare</h1>
<h2 id="一键脚本搭建设置">①一键脚本搭建设置</h2>
<p>请指定安装命令中预设的 nezha-agent 连接地址(例如 example.com:443)  域名和端口选择你套cf的域名 还有443端口</p>
<p>是否希望通过 TLS 连接 Agent? (影响安装命令)[y/N]  这边输入y 启用tls</p>
<h2 id="反代">②反代</h2>
<p>cf后台打开解析个ip过来，记得云朵直接打开，避免ip泄露，直接ipv6完事</p>
<p>cf后台的SSL/TLS选择完全严格</p>
<p>本地用nginx或者caddy反代下</p>
<p>参考官方文档   <a href="https://nezha.wiki/guide/q3.html">https://nezha.wiki/guide/q3.html</a></p>
<p>如果你使用1panel的话，可以参考这个大佬的文章 <a href="https://misaka.es/archives/42.html">https://misaka.es/archives/42.html</a></p>
<h2 id="-cloudflare后台启用ws和grpc">③ cloudflare后台启用ws和grpc</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/cSRmFPl.png" alt="image-20241231182328043"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/wUBjAJm.png" alt="image-20241231182336021"  />
</p>
<h2 id="-哪吒后台启动tls连接agent">④ 哪吒后台启动tls连接agent</h2>
<p>Agent对接地址【域名/IP:端口】  域名:443</p>
<p>后台的Agent 使用 TLS 连接 勾选上</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/PizHRBL.png" alt="image-20241231183628238"  />
</p>
<h1 id="2--关闭8008端口的外部访问">2  关闭8008端口的外部访问</h1>
<p>打开如下哪吒的compose文件，位置在</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/opt/nezha/dashboard/docker-compose.yaml
</span></span></code></pre></div><p>端口不要暴露在公网上</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    ports:
</span></span><span class="line"><span class="cl">      - 127.0.0.1:8008:8008
</span></span></code></pre></div><h1 id="3-agent上禁用webssh">3 agent上禁用webssh</h1>
<p>打开</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-/opt/nezha/agent/config.yml" data-lang="/opt/nezha/agent/config.yml"><span class="line"><span class="cl"><span class="l">/opt/nezha/agent/config.yml</span><span class="w">
</span></span></span></code></pre></div><p>把 disable_command_execute:改成true</p>
<p>参考哪吒文档 <a href="https://nezha.wiki/guide/q7.html">https://nezha.wiki/guide/q7.html</a></p>
<h1 id="4-把哪吒后台重定向到首页">4 把哪吒后台重定向到首页</h1>
<p>如果你和我一样不怎么访问后台的话，直接在cf上用规则把哪吒的后台dashboard给重定向到首页完事了</p>
<p>或者你自己访问的时候，本地改个host直接访问原站完事了</p>
<p>cf 后台，规则-重定向规则</p>
<p>添加如下规则把后台dashboard重定向到首页</p>
<p>规则名称随便取个</p>
<p>传入请求匹配选择，通配符模式</p>
<p>url</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">*域名/*dashboard*
</span></span></code></pre></div><p>目标就是你的首页，状态选择301，保存就完事了</p>
<p>这样子打开后台的时候就直接跳首页了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/Vo8KgmB.png" alt="下载 (10)"  />
</p>
<p>再把api也重定向下</p>
<p>请求 URL</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">https://域名/api/v1/login
</span></span></code></pre></div><p>其他如图</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/NlezdYN.png" alt="下载"  />
</p>
<p>​</p>
]]></content:encoded>
    </item>
    <item>
      <title>我的年末小鸡总结</title>
      <link>https://qklgblog.pages.dev/post/20241214/</link>
      <pubDate>Sat, 14 Dec 2024 09:22:14 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241214/</guid>
      <description>2024已经过去了
2023年的可以看这里https://www.nodeseek.com/post-583-1
今年的如下
丢了的鸡 ①cc 8.79 2核1G内存35G硬盘4T流量@1Gbps
没啥用，吃灰，90块钱出给坛友了
②rn的6.79 1台2021年黑五纽约闪购，年付$6.79
1核640M内存10G硬盘2T流量@1Gbps(翻倍后)
在线四百多天的鸡，但是也没啥用丢了
③rn 5刀 达拉斯 1核1G内存10G硬盘2T流量
没啥用，吃灰，100块钱出给坛友了
④claw 4刀 玩了一个月，出给坛友三手，收来的二手，结果被人找回，惹得一堆破事
三网牛逼，但是有点贵只爬墙的话，现在也qos了
⑤绿云香港 去年100收来的，配置忘记了，有段时间移动能直连，当时搭配nnr落地用的，而且解锁牛逼
到期的时候丢了，反正也没啥用
⑥netcup 1欧 没啥用，吃灰放了两个多月，出给坛友了
⑦ovh0.97年抛英国 没啥用，买了杜甫砍单砍麻了，也直接懒得续费了，玩了一个月
手头的鸡 见我签名探针
爬墙用的三台
①aws首尔 mikyhost分销那买的lightsail， 15刀一年，
2核512M内存20G硬盘1T流量
商家口碑不太好，反正PayPal保半年，也还行了
首尔就移动直连，本来在东京的
东京三网直连，但是晚上太炸了， 我迁移到首尔好很多了
可惜首尔落地不如东京，访问一堆东西得去日本，而且看不了色色
每天奖励自己的时候，还得切别的鸡
爬墙主力鸡
②vir 6.3刀日本 1核512M内存15G硬盘1T流量@1Gbps
2021年黑五花了3刀迁移到日本，年付$6.3
性欲旺盛的麻秆鸡，iij就移动直连了现在
躲过了几次遣返，还能PayPal续费，性欲真的旺盛
主要用来解锁chatgpt
③hytron 香港年抛鸡 1核1G内存5G硬盘，流量忘记了
40多收的坛友的，年抛鸡，就移动直连，白天还行
拿来备用
干活用的2台
④ovh俄勒冈0.97一个月 1核2G内存20G硬盘无限流量 100M口子
目前还在用，性能太弱鸡，目前拿来当博客图床和探针
性能买来时候gb5 600分不到点，现在400分了，有点太弱鸡，不过稳定性没得说
⑤firevps的18.95 2核4G内存50G硬盘1T流量，
收的坛友的，准备替换0.97.先放个一个月看看稳定性再说
性能无敌，反正也不要求啥了， 网络套cf，稳定性好就行了
最后总结 目前就5台鸡了
精简了一堆乱七八糟的玩意，什么rn，cc全丢了，都没啥用，反正吃灰也没啥用</description>
      <content:encoded><![CDATA[<p>2024已经过去了<br>
2023年的可以看这里https://www.nodeseek.com/post-583-1<br>
今年的如下<br>
<img loading="lazy" src="https://s3.qklg.net/img/wLQ8k6F.png" alt=""  />
</p>
<h1 id="丢了的鸡">丢了的鸡</h1>
<h2 id="cc-879">①cc 8.79</h2>
<p>2核1G内存35G硬盘4T流量@1Gbps<br>
没啥用，吃灰，90块钱出给坛友了</p>
<h2 id="rn的679">②rn的6.79</h2>
<p>1台2021年黑五纽约闪购，年付$6.79<br>
1核640M内存10G硬盘2T流量@1Gbps(翻倍后)<br>
在线四百多天的鸡，但是也没啥用丢了<br>
<img loading="lazy" src="https://s3.qklg.net/img/XDAeRLr.png" alt=""  />
</p>
<h2 id="rn-5刀-达拉斯">③rn 5刀 达拉斯</h2>
<p>1核1G内存10G硬盘2T流量<br>
没啥用，吃灰，100块钱出给坛友了</p>
<h2 id="claw-4刀">④claw 4刀</h2>
<p>玩了一个月，出给坛友三手，收来的二手，结果被人找回，惹得一堆破事<br>
三网牛逼，但是有点贵只爬墙的话，现在也qos了</p>
<h2 id="绿云香港">⑤绿云香港</h2>
<p>去年100收来的，配置忘记了，有段时间移动能直连，当时搭配nnr落地用的，而且解锁牛逼<br>
到期的时候丢了，反正也没啥用</p>
<h2 id="netcup-1欧">⑥netcup 1欧</h2>
<p>没啥用，吃灰放了两个多月，出给坛友了</p>
<h2 id="ovh097年抛英国">⑦ovh0.97年抛英国</h2>
<p>没啥用，买了杜甫砍单砍麻了，也直接懒得续费了，玩了一个月</p>
<h1 id="手头的鸡">手头的鸡</h1>
<p>见我签名探针</p>
<p>爬墙用的三台</p>
<h2 id="aws首尔">①aws首尔</h2>
<p>mikyhost分销那买的lightsail， 15刀一年，<br>
2核512M内存20G硬盘1T流量<br>
商家口碑不太好，反正PayPal保半年，也还行了<br>
首尔就移动直连，本来在东京的<br>
东京三网直连，但是晚上太炸了， 我迁移到首尔好很多了<br>
可惜首尔落地不如东京，访问一堆东西得去日本，而且看不了色色<br>
每天奖励自己的时候，还得切别的鸡<br>
爬墙主力鸡</p>
<h2 id="vir-63刀日本">②vir 6.3刀日本</h2>
<p>1核512M内存15G硬盘1T流量@1Gbps<br>
2021年黑五花了3刀迁移到日本，年付$6.3<br>
性欲旺盛的麻秆鸡，iij就移动直连了现在<br>
躲过了几次遣返，还能PayPal续费，性欲真的旺盛<br>
主要用来解锁chatgpt</p>
<h2 id="hytron-香港年抛鸡">③hytron 香港年抛鸡</h2>
<p>1核1G内存5G硬盘，流量忘记了<br>
40多收的坛友的，年抛鸡，就移动直连，白天还行<br>
拿来备用</p>
<p>干活用的2台</p>
<h2 id="ovh俄勒冈097一个月">④ovh俄勒冈0.97一个月</h2>
<p>1核2G内存20G硬盘无限流量 100M口子<br>
目前还在用，性能太弱鸡，目前拿来当博客图床和探针<br>
性能买来时候gb5 600分不到点，现在400分了，有点太弱鸡，不过稳定性没得说</p>
<h2 id="firevps的1895">⑤firevps的18.95</h2>
<p>2核4G内存50G硬盘1T流量，<br>
收的坛友的，准备替换0.97.先放个一个月看看稳定性再说</p>
<p>性能无敌，反正也不要求啥了， 网络套cf，稳定性好就行了</p>
<h1 id="最后总结">最后总结</h1>
<p>目前就5台鸡了<br>
精简了一堆乱七八糟的玩意，什么rn，cc全丢了，都没啥用，反正吃灰也没啥用<br>
反正垃圾没啥用的统统都得降本增效<br>
搞了台性能鸡，差不多就是今年的小鸡了<br>
以前玩鸡预算差不多五百块吧，现在算了下应该是没有超过</p>
]]></content:encoded>
    </item>
    <item>
      <title>unraid安装哪吒 v1版本agent</title>
      <link>https://qklgblog.pages.dev/post/20241209/</link>
      <pubDate>Mon, 09 Dec 2024 06:24:57 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241209/</guid>
      <description>v0版本的安装可以参考我博客的旧教程
https://qklg.net/post/20231019/
本文参考了哪吒文档中群晖和openwrt的安装
哪吒文档链接 https://nezha.wiki/guide/agent.html
1 下载哪吒探针的agent github 链接 https://github.com/nezhahq/agent/releases
unradi一般为amd64架构
我喜欢在win上解压之后再用winscp传到unraid上，我和以前一样放在 /mnt/disk1/nezha/ 文件夹下
或者也可以使用下面的命令直接拉下来
以下命令请开启unraid的root权限，登录到ssh执行
wget -O nezha-agent.zip https://github.com/nezhahq/agent/releases/latest/download/nezha-agent_linux_amd64.zip 创建/mnt/disk1/nezha/ 文件夹
解压缩到该文件夹下
mkdir -p /mnt/disk1/nezha unzip nezha-agent.zip -d /mnt/disk1/nezha 2 创建配置文件 这个其实可以直接偷懒点，直接从一台已经装了nezha的vps上的config.yml给下载下来
vps上用一键脚本安装的在/opt/nezha/agent 文件夹下
直接上传到 /mnt/disk1/nezha/ 文件夹下和agent放在一起
效果如图
注意 需要编辑config.yml里的uuid，其他参数不用变
使用 uuidgen 命令生产uuid，然后把config.yml里uuid替换掉
哪吒文档里这么说的
uuid：为该 Agent 生成一个唯一标识符，不要与同一个 Dashboard 中其他的 Agent 重复
我喜欢把 disable_command_execute: 设置成true开停用webssh
3 设置定时任务 在unraid的应用中搜索 User Scripts
这是一个执行bash脚本的工具
插件，User Scripts 进去
点击add new script
取名为nezha
点击ok确认
用winscp打开如下路径</description>
      <content:encoded><![CDATA[<p>v0版本的安装可以参考我博客的旧教程</p>
<p><a href="https://qklg.net/post/20231019/">https://qklg.net/post/20231019/</a></p>
<p>本文参考了哪吒文档中群晖和openwrt的安装</p>
<p>哪吒文档链接  <a href="https://nezha.wiki/guide/agent.html">https://nezha.wiki/guide/agent.html</a></p>
<h1 id="1-下载哪吒探针的agent">1 下载哪吒探针的agent</h1>
<p>github 链接 <a href="https://github.com/nezhahq/agent/releases">https://github.com/nezhahq/agent/releases</a></p>
<p>unradi一般为amd64架构</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/O5M30ZB.png" alt="image-20241209053941411"  />
</p>
<p>我喜欢在win上解压之后再用winscp传到unraid上，我和以前一样放在 /mnt/disk1/nezha/ 文件夹下</p>
<p>或者也可以使用下面的命令直接拉下来</p>
<p>以下命令请开启unraid的root权限，登录到ssh执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">wget</span> <span class="o">-</span><span class="n">O</span> <span class="n">nezha</span><span class="o">-</span><span class="n">agent</span><span class="o">.</span><span class="n">zip</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">nezhahq</span><span class="o">/</span><span class="n">agent</span><span class="o">/</span><span class="n">releases</span><span class="o">/</span><span class="n">latest</span><span class="o">/</span><span class="n">download</span><span class="o">/</span><span class="n">nezha</span><span class="o">-</span><span class="n">agent_linux_amd64</span><span class="o">.</span><span class="n">zip</span>
</span></span></code></pre></div><p>创建/mnt/disk1/nezha/ 文件夹</p>
<p>解压缩到该文件夹下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir -p /mnt/disk1/nezha
</span></span><span class="line"><span class="cl">unzip nezha-agent.zip -d /mnt/disk1/nezha
</span></span></code></pre></div><h1 id="2-创建配置文件">2 创建配置文件</h1>
<p>这个其实可以直接偷懒点，直接从一台已经装了nezha的vps上的config.yml给下载下来</p>
<p>vps上用一键脚本安装的在/opt/nezha/agent 文件夹下</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/H9iK71r.png" alt="image-20241209054803344"  />
</p>
<p>直接上传到 /mnt/disk1/nezha/  文件夹下和agent放在一起</p>
<p>效果如图</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/3AqSpvs.png" alt="image-20241209054845673"  />
</p>
<p>注意 需要编辑config.yml里的uuid，其他参数不用变</p>
<p>使用 <code>uuidgen</code>  命令生产uuid，然后把config.yml里uuid替换掉</p>
<p>哪吒文档里这么说的</p>
<p><code>uuid</code>：为该 Agent 生成一个唯一标识符，不要与同一个 Dashboard 中其他的 Agent 重复</p>
<p>我喜欢把 <strong><code>disable_command_execute:</code></strong> 设置成true开停用webssh</p>
<h1 id="3-设置定时任务">3 设置定时任务</h1>
<p>在unraid的应用中搜索 User Scripts</p>
<p>这是一个执行bash脚本的工具</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/8RHnZGu.png" alt="image-20241209055221542"  />
</p>
<p>插件，User Scripts 进去</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/07NXac1.png" alt="image-20241209055406123"  />
</p>
<p>点击add new script</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/kTnzB0m.png" alt="image-20241209055342746"  />
</p>
<p>取名为nezha</p>
<p>点击ok确认</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/pORc9un.png" alt="image-20241209055443583"  />
</p>
<p>用winscp打开如下路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/boot/config/plugins/user.scripts/scripts/nezha
</span></span></code></pre></div><p>打开script 文件填入如下脚本,保存</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>chmod +x /mnt/disk1/nezha/nezha-agent
</span></span><span class="line"><span class="cl">/mnt/disk1/nezha/nezha-agent -c /mnt/disk1/nezha/config.yml
</span></span></code></pre></div><p>这时候回到unraid面板上，打开插件User Scripts的nezha，</p>
<p>点击RUN IN BACKGROUND 启动</p>
<p>右边设置成at first array start only开机自启</p>
<p>如果想要停下脚本的话旧点击ABORT SCRIPT脚本</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/VRWPu2B.png" alt="image-20241209055734638"  />
</p>
<h1 id="4-设置参数">4 设置参数</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/mnt/disk1/nezha/nezha-agent edit
</span></span></code></pre></div><p>编辑参数</p>
<p>使用箭头移动，空格键选择，回车确认</p>
<p>unriad 一般旧一个网卡直接eth0就可以了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/mPQ3OkY.png" alt="image-20241209055950888"  />
</p>
<p>硬盘的话我三块硬盘disk1 2 3选择完事了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/BfWySNZ.png" alt="image-20241209060504866"  />
</p>
<p>dns的话直接空格跳过</p>
<p>uuid的话回车</p>
<p>gpu的话y 回车确认</p>
<p>温度的话y 回车确认</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/0Nneq2E.png" alt="image-20241209060653642"  />
</p>
<p>去User Scripts那里先停止后启动就可以重启Agent了</p>
<p>这样子编辑完就准备很多，尤其是网卡和硬盘了</p>
]]></content:encoded>
    </item>
    <item>
      <title>哪吒v0版本面板安装，agent安装 ，文档</title>
      <link>https://qklgblog.pages.dev/post/20241203/</link>
      <pubDate>Tue, 03 Dec 2024 23:48:15 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241203/</guid>
      <description>1 面板部分 ① v0面板安装脚本 curl -L https://raw.githubusercontent.com/nezhahq/scripts/refs/heads/v0/install.sh -o nezha.sh &amp;amp;&amp;amp; chmod +x nezha.sh &amp;amp;&amp;amp; sudo ./nezha.sh ② v0面板禁用更新 打开/opt/nezha/dashboard/docker-compose.yaml
讲docker固定到:v0.20.13版本
services: dashboard: image: ghcr.io/naiba/nezha-dashboard:v0.20.13 restart: always 感谢 https://www.nodeseek.com/post-210009-1 老哥
2 agent部分 agent安装脚本
把后台复制出来的 main改成v0就可以了
记得加入&amp;ndash;disable-force-update 禁用更新
我同时喜欢加入 &amp;ndash;disable-command-execute 禁止web ssh
curl -L https://raw.githubusercontent.com/nezhahq/scripts/v0/install.sh -o nezha.sh &amp;amp;&amp;amp; chmod +x nezha.sh &amp;amp;&amp;amp; ./nezha.sh install_agent 域名 端口 密钥 --tls --disable-force-update --disable-command-execute 感谢 https://www.nodeseek.com/post-209183-1#7 老哥
3 v0文档 论坛老哥整的v0文档 https://nezha-v0.mereith.dev/
感谢https://www.nodeseek.com/post-209098-1 老哥
github仓库 https://github.com/nezhahq/nezhahq.github.io/tree/v0
互联网档案馆 https://web.</description>
      <content:encoded><![CDATA[<h1 id="1-面板部分">1 面板部分</h1>
<h2 id="-v0面板安装脚本">① v0面板安装脚本</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -L https://raw.githubusercontent.com/nezhahq/scripts/refs/heads/v0/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./nezha.sh
</span></span></code></pre></div><h2 id="-v0面板禁用更新">② v0面板禁用更新</h2>
<p>打开/opt/nezha/dashboard/docker-compose.yaml</p>
<p>讲docker固定到:v0.20.13版本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">services:
</span></span><span class="line"><span class="cl">  dashboard:
</span></span><span class="line"><span class="cl">    image: ghcr.io/naiba/nezha-dashboard:v0.20.13
</span></span><span class="line"><span class="cl">    restart: always
</span></span></code></pre></div><p>感谢 <a href="https://www.nodeseek.com/post-210009-1">https://www.nodeseek.com/post-210009-1</a> 老哥</p>
<h1 id="2-agent部分">2 agent部分</h1>
<p>agent安装脚本</p>
<p>把后台复制出来的 main改成v0就可以了</p>
<p>记得加入&ndash;disable-force-update 禁用更新</p>
<p>我同时喜欢加入 &ndash;disable-command-execute 禁止web ssh</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -L https://raw.githubusercontent.com/nezhahq/scripts/v0/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; ./nezha.sh install_agent 域名 端口 密钥 --tls --disable-force-update --disable-command-execute
</span></span></code></pre></div><p>感谢  <a href="https://www.nodeseek.com/post-209183-1#7">https://www.nodeseek.com/post-209183-1#7</a> 老哥</p>
<h1 id="3-v0文档">3 v0文档</h1>
<p>论坛老哥整的v0文档 <a href="https://nezha-v0.mereith.dev/">https://nezha-v0.mereith.dev/</a></p>
<p>感谢https://www.nodeseek.com/post-209098-1 老哥</p>
<p>github仓库  <a href="https://github.com/nezhahq/nezhahq.github.io/tree/v0">https://github.com/nezhahq/nezhahq.github.io/tree/v0</a><br>
互联网档案馆 <a href="https://web.archive.org/web/20240929125721/https://nezha.wiki/guide/dashboard.html">https://web.archive.org/web/20240929125721/https://nezha.wiki/guide/dashboard.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>垃圾佬的2.5G 内网升级</title>
      <link>https://qklgblog.pages.dev/post/20241126/</link>
      <pubDate>Tue, 26 Nov 2024 21:47:05 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241126/</guid>
      <description>1 硬件 先来说下硬件，东西都是便宜货，螃蟹全家桶
总成本不超过200块钱
wifi懒得升级了，就千兆继续用算了
交换机 某多多的2.5G傻瓜交换机， 螃蟹的RTL 8372N公版方案，四个2.5G网口，还带双万兆SFP光口
这个价位的四口2.5G的交换机都是这方案的
六月126买的，现在只要109了，真的白菜价
2.5G usb网卡 笔记本上外接的2.5G usb网卡，螃蟹的8156b方案的
某多多 42块钱买的
自带的驱动很垃圾，记得下载下驱动，自带驱动打完拷文件会蓝屏，螃蟹官网删掉重新打了下驱动就不然会蓝屏
螃蟹官网下 https://www.realtek.com/Download/List?cate_id=585
我下的是Win10 Auto Installation Program这个驱动
直接握手2500Mbps
pcie网卡 某宝28包邮的8125b网卡，插上去我的unraid能免驱就能点亮了
不过论坛上说不稳定，我还是装了下驱动，unraid的应用商店直接就能找到了
2 速度测试 speedtest-x iperf3 拷贝文件 上传文件 3 进阶玩法 把游戏装nas上的固态试了下
下了个黑神话悟空的benchmark，跑了下，感觉好像还行
也没遇到什么卡顿，不过我这笔记本核显也不玩游戏，无所谓了 4 总结 200不到，稍微升级了下，后面准备光猫2.5G的猫100块钱，再买个小米的be6500把我的ax6000替换掉，就完事了</description>
      <content:encoded><![CDATA[<h1 id="1-硬件">1 硬件</h1>
<p>先来说下硬件，东西都是便宜货，螃蟹全家桶</p>
<p>总成本不超过200块钱</p>
<p>wifi懒得升级了，就千兆继续用算了</p>
<h2 id="交换机">交换机</h2>
<p>某多多的2.5G傻瓜交换机， 螃蟹的RTL 8372N公版方案，四个2.5G网口，还带双万兆SFP光口</p>
<p>这个价位的四口2.5G的交换机都是这方案的</p>
<p>六月126买的，现在只要109了，真的白菜价</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/qbGXJUo.png" alt="image-20241126225926832"  />
</p>
<h2 id="25g-usb网卡">2.5G usb网卡</h2>
<p>笔记本上外接的2.5G usb网卡，螃蟹的8156b方案的</p>
<p>某多多 42块钱买的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/WMV0VMP.png" alt="image-20241126230002684"  />
</p>
<p>自带的驱动很垃圾，记得下载下驱动，自带驱动打完拷文件会蓝屏，螃蟹官网删掉重新打了下驱动就不然会蓝屏</p>
<p>螃蟹官网下 <a href="https://www.realtek.com/Download/List?cate_id=585">https://www.realtek.com/Download/List?cate_id=585</a></p>
<p>我下的是Win10 Auto Installation Program这个驱动</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/kLgy1Rc.png" alt="image-20241126230622485"  />
</p>
<p>直接握手2500Mbps</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/MLx05Ox.png" alt="image-20241126230649429"  />
</p>
<h2 id="pcie网卡">pcie网卡</h2>
<p>某宝28包邮的8125b网卡，插上去我的unraid能免驱就能点亮了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/25Tv1cS.png" alt="image-20241126230315913"  />
</p>
<p>不过论坛上说不稳定，我还是装了下驱动，unraid的应用商店直接就能找到了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/V8zaQAE.png" alt="image-20241126230440139"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/DED3pOG.png" alt="image-20241126230800839"  />
</p>
<h1 id="2-速度测试">2 速度测试</h1>
<h2 id="speedtest-x">speedtest-x</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/26I6uHO.png" alt="image-20241126230839069"  />
</p>
<h2 id="iperf3">iperf3</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/zzXEEz1.png" alt="image-20241126231153677"  />
</p>
<h2 id="拷贝文件">拷贝文件</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/2sg4hfQ.png" alt="image-20241126230925018"  />
</p>
<h2 id="上传文件">上传文件</h2>
<p><img loading="lazy" src="https://s3.qklg.net/img/wUUuWTq.png" alt="image-20241126230939214"  />
</p>
<h1 id="3-进阶玩法">3 进阶玩法</h1>
<p>把游戏装nas上的固态试了下</p>
<p>下了个黑神话悟空的benchmark，跑了下，感觉好像还行</p>
<p>也没遇到什么卡顿，不过我这笔记本核显也不玩游戏，无所谓了<img loading="lazy" src="https://s3.qklg.net/img/ZvQaana.png" alt="image-20241126231345931"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/8nURL5z.png" alt="image-20241126231359090"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/qpZTKHw.png" alt="image-20241126231405116"  />
</p>
<h1 id="4-总结">4 总结</h1>
<p>200不到，稍微升级了下，后面准备光猫2.5G的猫100块钱，再买个小米的be6500把我的ax6000替换掉，就完事了</p>
]]></content:encoded>
    </item>
    <item>
      <title>YouTube 官方的rss</title>
      <link>https://qklgblog.pages.dev/post/20241121/</link>
      <pubDate>Thu, 21 Nov 2024 22:20:49 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241121/</guid>
      <description>https://news.ycombinator.com/item?id=32192352
老外那边学到的新技术
User : https://www.youtube.com/feeds/videos.xml?user=&amp;lt;XXX&amp;gt; Channel : https://www.youtube.com/feeds/videos.xml?channel_id=&amp;lt;XXX&amp;gt; Playlist : https://www.youtube.com/feeds/videos.xml?playlist_id=&amp;lt;XXX&amp;gt; 以前一直拿rsshub抓的，youtube官方其实是有rss的
我主要就是抓频道更新的
user的话直接就是用户名，@ 后面的用户名就是了
https://www.youtube.com/@LinusTechTips
https://www.youtube.com/feeds/videos.xml?user=LinusTechTips
channel_id的话右键查看源代码，Ctrl+F 搜索 externalId后面那串就是
https://www.youtube.com/feeds/videos.xml?channel_id=UCXuqSBlHAE6Xw-yeJA0Tunw
Playlist的话打开播放列表，list= 后面的那串就是
https://www.youtube.com/watch?v=apdZ7xmytiQ&amp;amp;list=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec
https://www.youtube.com/feeds/videos.xml?playlist_id=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec
其他的还是拿rsshub抓吧
https://docs.rsshub.app/routes/social-media#youtube</description>
      <content:encoded><![CDATA[<p><a href="https://news.ycombinator.com/item?id=32192352">https://news.ycombinator.com/item?id=32192352</a><br>
老外那边学到的新技术</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">User : https://www.youtube.com/feeds/videos.xml?user=&lt;XXX&gt;
</span></span><span class="line"><span class="cl">Channel : https://www.youtube.com/feeds/videos.xml?channel_id=&lt;XXX&gt;
</span></span><span class="line"><span class="cl">Playlist : https://www.youtube.com/feeds/videos.xml?playlist_id=&lt;XXX&gt;
</span></span></code></pre></div><p>以前一直拿rsshub抓的，youtube官方其实是有rss的<br>
我主要就是抓频道更新的<br>
user的话直接就是用户名，@ 后面的用户名就是了<br>
<a href="https://www.youtube.com/@LinusTechTips">https://www.youtube.com/@LinusTechTips</a><br>
<a href="https://www.youtube.com/feeds/videos.xml?user=LinusTechTips">https://www.youtube.com/feeds/videos.xml?user=LinusTechTips</a></p>
<p>channel_id的话右键查看源代码，Ctrl+F 搜索 externalId后面那串就是<br>
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCXuqSBlHAE6Xw-yeJA0Tunw">https://www.youtube.com/feeds/videos.xml?channel_id=UCXuqSBlHAE6Xw-yeJA0Tunw</a></p>
<p>Playlist的话打开播放列表，list= 后面的那串就是<br>
<a href="https://www.youtube.com/watch?v=apdZ7xmytiQ&amp;list=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec">https://www.youtube.com/watch?v=apdZ7xmytiQ&amp;list=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec</a><br>
<a href="https://www.youtube.com/feeds/videos.xml?playlist_id=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec">https://www.youtube.com/feeds/videos.xml?playlist_id=PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec</a></p>
<p>其他的还是拿rsshub抓吧<br>
<a href="https://docs.rsshub.app/routes/social-media#youtube">https://docs.rsshub.app/routes/social-media#youtube</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>给mjj看看你的hetzner的杜甫长啥样子</title>
      <link>https://qklgblog.pages.dev/post/20241119/</link>
      <pubDate>Tue, 19 Nov 2024 22:14:48 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241119/</guid>
      <description>刚油管刷到的视频
买了的mjj说下使用体验，我玩鸡好几年现在还没体验过杜甫
顺带看看你的大杜甫长啥样子
没买的mjj的话祝各位mjj发大财，早点买到
https://youtu.be/V2P8mjWRqpk
1 ax52的配置 https://www.hetzner.com/dedicated-rootserver/ax52/
2 主板 华硕的 Pro WS 665 ACE,主板是定做的，
看了下十二项供电，四条内存槽，pice通道和家用也没啥区别
最大区别就是旋转了90度，好处就是内存不影响风道
芯片组用的是B665，和家用的b650换皮，只有pcie4.0
没m.2 ，多了两个oculink，家用的话现在很少见啊，笔记本上倒是有的
oculink的话是pcie4.0x4的，速度是64Gbps，比雷电4和usb4的40Gbps快，但是不如雷电5
而且成本更低，不用专门芯片，我看了下显卡扩展坞的话真的便宜，不过不能一线通和热插拔
可以看下这个视频了解下https://www.bilibili.com/video/av1550700758/
下面还有个debug灯
上代ax41的主板，B565 ，是家用的b550换皮
3 散热器 大铝块散热
放进去长这样子的
拆下来是这样子的，全靠暴力扇
4 固态硬盘 固态硬盘是扩展卡插上去的
这块是永擎的RB4M2_G4转接卡，转上去的
查了下这卡是pcie4.0x16转成4个pcie4.0x4的
固态型号不知道，有没有买过的mjj说下
5 CPU 7700
跑在90瓦上
性能释放90瓦，温度86度
没跑太高，不然功耗要多20%-30%，电费吃不消
R20多核7200
6 内存 4800频率的内存，时序C40,共64G
7 华擎版的b665主板 </description>
      <content:encoded><![CDATA[<p>刚油管刷到的视频<br>
买了的mjj说下使用体验，我玩鸡好几年现在还没体验过杜甫<br>
顺带看看你的大杜甫长啥样子</p>
<p>没买的mjj的话祝各位mjj发大财，早点买到<br>
<a href="https://youtu.be/V2P8mjWRqpk">https://youtu.be/V2P8mjWRqpk</a></p>
<h1 id="1-ax52的配置">1 ax52的配置</h1>
<p><a href="https://www.hetzner.com/dedicated-rootserver/ax52/">https://www.hetzner.com/dedicated-rootserver/ax52/</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/BCO5ajD.png" alt="image-20241119171706620"  />
</p>
<h1 id="2-主板">2 主板</h1>
<p>华硕的 Pro WS 665 ACE,主板是定做的，</p>
<p>看了下十二项供电，四条内存槽，pice通道和家用也没啥区别</p>
<p>最大区别就是旋转了90度，好处就是内存不影响风道</p>
<p>芯片组用的是B665，和家用的b650换皮，只有pcie4.0</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/42qxp39.png" alt="image-20241119164735157"  />
</p>
<p>没m.2 ，多了两个oculink，家用的话现在很少见啊，笔记本上倒是有的</p>
<p>oculink的话是pcie4.0x4的，速度是64Gbps，比雷电4和usb4的40Gbps快，但是不如雷电5</p>
<p>而且成本更低，不用专门芯片，我看了下显卡扩展坞的话真的便宜，不过不能一线通和热插拔</p>
<p>可以看下这个视频了解下https://www.bilibili.com/video/av1550700758/</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/iGaIdAO.png" alt="image-20241119165212814"  />
</p>
<p>下面还有个debug灯</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/w4eYxjz.png" alt="image-20241119165615817"  />
</p>
<p>上代ax41的主板，B565 ，是家用的b550换皮</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/rdzf6VN.png" alt="image-20241119170533856"  />
</p>
<h1 id="3-散热器">3 散热器</h1>
<p>大铝块散热</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/OJAUEGB.png" alt="image-20241119170707210"  />
</p>
<p>放进去长这样子的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/2SHHp5T.png" alt="image-20241119170749718"  />
</p>
<p>拆下来是这样子的，全靠暴力扇</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/cceXWWs.png" alt="image-20241119170821908"  />
</p>
<h1 id="4-固态硬盘">4 固态硬盘</h1>
<p>固态硬盘是扩展卡插上去的</p>
<p>这块是永擎的RB4M2_G4转接卡，转上去的</p>
<p>查了下这卡是pcie4.0x16转成4个pcie4.0x4的</p>
<p>固态型号不知道，有没有买过的mjj说下</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/xhBL87T.png" alt="image-20241119171001759"  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/ZYTsRDe.png" alt="image-20241119171942365"  />
</p>
<h1 id="5-cpu">5 CPU</h1>
<p>7700</p>
<p>跑在90瓦上</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/7YtbLbe.png" alt="image-20241119172046970"  />
</p>
<p>性能释放90瓦，温度86度</p>
<p>没跑太高，不然功耗要多20%-30%，电费吃不消</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/4YA3sqR.png" alt="image-20241119172230162"  />
</p>
<p>R20多核7200</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/3VXC7Y2.png" alt="image-20241119172320383"  />
</p>
<h1 id="6-内存">6 内存</h1>
<p>4800频率的内存，时序C40,共64G</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/SkZTjKd.png" alt="image-20241119172113417"  />
</p>
<h1 id="7-华擎版的b665主板">7 华擎版的b665主板</h1>
<p><img loading="lazy" src="https://s3.qklg.net/img/S7fqqi0.png" alt="image-20241119172812420"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>小钢炮变大钢炮历险记</title>
      <link>https://qklgblog.pages.dev/post/20241110/</link>
      <pubDate>Sun, 10 Nov 2024 20:43:34 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241110/</guid>
      <description>小钢炮变大钢炮历险记
1 前后对比 配置 小钢炮 大钢炮 跑分 小钢炮 https://browser.geekbench.com/v5/cpu/23042098
大钢炮W https://browser.geekbench.com/v5/cpu/23045171
2 配置 用的旧电脑配置，凑合用了下，显卡cpu是被我卖掉换成2400G了
cpu 从小钢炮N5095升级成了amd的5600，b2步进，拼多多514买的b2的散片
主板 用的之前旧电脑上的b450迫击炮，升级了下bios
用的m-flash刷的新bios，不然点不亮
教程这边
https://www.bilibili.com/video/av682122112/
bios微星官网下的最新的
https://www.msi.cn/Motherboard/B450M-mortar/support#bios
散热器 旧电脑上的玄冰400，俗称反人类400，装的时候累死我了
内存 从原来小钢炮笔记本的两根2666的升级成了3600 C18的cjr颗粒的条子，旧的两根过几天挂皇上鱼
京东279买的，好评可以返现10块钱，
想2019年我一根8G的 2666条子都要299，现在条子真的白菜价
硬盘 还是原来的两块，1快256G的pm981，1快3T的机械硬盘，够用了，懒得升级
3 无显卡启动 微星bios里 顺带说下主板除了开了xmp，其他的我都默认了
unraid里 主界面-Flash-Syslinux 配置-菜单视图
选择unraid os启动，默认应该就是这个
目前就这样子先用着吧
跑了下docker，其他好像也没啥用</description>
      <content:encoded><![CDATA[<p>小钢炮变大钢炮历险记</p>
<h1 id="1-前后对比">1 前后对比</h1>
<h2 id="配置">配置</h2>
<h3 id="小钢炮">小钢炮</h3>
<p><img loading="lazy" src="https://s3.qklg.net/img/LeeMeYV.png" alt="image-20241110200635383"  />
</p>
<h3 id="大钢炮">大钢炮</h3>
<p><img loading="lazy" src="https://s3.qklg.net/img/f6x4JPN.png" alt="image-20241110200707198"  />
</p>
<h2 id="跑分">跑分</h2>
<h3 id="小钢炮-1">小钢炮</h3>
<p><a href="https://browser.geekbench.com/v5/cpu/23042098">https://browser.geekbench.com/v5/cpu/23042098</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/JyOgx6Y.png" alt="image-20241110200823940"  />
</p>
<h3 id="大钢炮w">大钢炮W</h3>
<p><a href="https://browser.geekbench.com/v5/cpu/23045171">https://browser.geekbench.com/v5/cpu/23045171</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/XtSIr8v.png" alt="image-20241110200910735"  />
</p>
<h1 id="2-配置">2 配置</h1>
<p>用的旧电脑配置，凑合用了下，显卡cpu是被我卖掉换成2400G了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/pScUdzA.png" alt="img"  />
</p>
<h2 id="cpu">cpu</h2>
<p>从小钢炮N5095升级成了amd的5600，b2步进，拼多多514买的b2的散片</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/Lvlvvz4.png" alt="image-20241110201137783"  />
</p>
<h2 id="主板">主板</h2>
<p>用的之前旧电脑上的b450迫击炮，升级了下bios</p>
<p>用的m-flash刷的新bios，不然点不亮</p>
<p>教程这边</p>
<p><a href="https://www.bilibili.com/video/av682122112/">https://www.bilibili.com/video/av682122112/</a></p>
<p>bios微星官网下的最新的</p>
<p><a href="https://www.msi.cn/Motherboard/B450M-mortar/support#bios">https://www.msi.cn/Motherboard/B450M-mortar/support#bios</a></p>
<h2 id="散热器">散热器</h2>
<p>旧电脑上的玄冰400，俗称反人类400，装的时候累死我了</p>
<h2 id="内存">内存</h2>
<p>从原来小钢炮笔记本的两根2666的升级成了3600 C18的cjr颗粒的条子，旧的两根过几天挂皇上鱼</p>
<p>京东279买的，好评可以返现10块钱，</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/niOtBmN.png" alt="image-20241110201333689"  />
</p>
<p>想2019年我一根8G的 2666条子都要299，现在条子真的白菜价</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/lkB4qWa.png" alt="image-20241110201521599"  />
</p>
<h2 id="硬盘">硬盘</h2>
<p>还是原来的两块，1快256G的pm981，1快3T的机械硬盘，够用了，懒得升级</p>
<h1 id="3-无显卡启动">3 无显卡启动</h1>
<h2 id="微星bios里">微星bios里</h2>
<p>顺带说下主板除了开了xmp，其他的我都默认了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/cvhgXbG.png" alt="image-20241110202244058"  />
</p>
<h2 id="unraid里">unraid里</h2>
<p>主界面-Flash-Syslinux 配置-菜单视图</p>
<p>选择unraid os启动，默认应该就是这个</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/Kb6KYGr.png" alt="image-20241110202645797"  />
</p>
<p>目前就这样子先用着吧</p>
<p>跑了下docker，其他好像也没啥用</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/BjUowcf.png" alt="image-20241110203007438"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享下怎么看你小鸡ip前任干过啥</title>
      <link>https://qklgblog.pages.dev/post/20241029/</link>
      <pubDate>Tue, 29 Oct 2024 01:20:48 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241029/</guid>
      <description>我只发自己常用的
等波老哥补充，我再完善下
1 ip滥用报告
https://www.abuseipdb.com/check/
2 ip下过bt没
https://iknowwhatyoudownload.com/
3 ip以前有哪些网站
https://site.ip138.com/
https://tools.ipip.net/ipdomain.php
https://ipchaxun.com/
4 查询网站长啥样
https://web.archive.org/
https://archive.md/
5 查询网站以前解析的ip
https://viewdns.info/iphistory/?domain
https://ipchaxun.com/</description>
      <content:encoded><![CDATA[<p>我只发自己常用的<br>
等波老哥补充，我再完善下</p>
<p>1 ip滥用报告<br>
<a href="https://www.abuseipdb.com/check/">https://www.abuseipdb.com/check/</a></p>
<p>2 ip下过bt没<br>
<a href="https://iknowwhatyoudownload.com/">https://iknowwhatyoudownload.com/</a></p>
<p>3 ip以前有哪些网站<br>
<a href="https://site.ip138.com/">https://site.ip138.com/</a><br>
<a href="https://tools.ipip.net/ipdomain.php">https://tools.ipip.net/ipdomain.php</a><br>
<a href="https://ipchaxun.com/">https://ipchaxun.com/</a></p>
<p>4 查询网站长啥样<br>
<a href="https://web.archive.org/">https://web.archive.org/</a><br>
<a href="https://archive.md/">https://archive.md/</a></p>
<p>5 查询网站以前解析的ip<br>
<a href="https://viewdns.info/iphistory/?domain">https://viewdns.info/iphistory/?domain</a><br>
<a href="https://ipchaxun.com/">https://ipchaxun.com/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>哪吒探针关闭webssh  ＆ openwrt版的网速设置</title>
      <link>https://qklgblog.pages.dev/post/20241028/</link>
      <pubDate>Mon, 28 Oct 2024 23:24:36 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241028/</guid>
      <description>1 关闭webssh 安装agent时一键命令后加入
--disable-command-execute 参考https://www.nodeseek.com/post-31986-1
2 opnewrt版哪吒网速设置 openwrt nezha ipk 下载地址 https://github.com/Erope/openwrt_nezha/releases/
ssh输入如下，我默认是eth0，空格选择，回车确认
/usr/bin/nezha-agent edit 参考 https://www.nodeseek.com/post-28904-1</description>
      <content:encoded><![CDATA[<h1 id="1-关闭webssh">1 关闭webssh</h1>
<p>安装agent时一键命令后加入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">--disable-command-execute
</span></span></code></pre></div><p>参考<a href="https://www.nodeseek.com/post-31986-1">https://www.nodeseek.com/post-31986-1</a></p>
<h1 id="2-opnewrt版哪吒网速设置">2 opnewrt版哪吒网速设置</h1>
<p>openwrt nezha ipk 下载地址 <a href="https://github.com/Erope/openwrt_nezha/releases/">https://github.com/Erope/openwrt_nezha/releases/</a><br>
ssh输入如下，我默认是eth0，空格选择，回车确认</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/usr/bin/nezha-agent edit
</span></span></code></pre></div><p>参考   <a href="https://www.nodeseek.com/post-28904-1">https://www.nodeseek.com/post-28904-1</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>win手动安装dig</title>
      <link>https://qklgblog.pages.dev/post/20241027/</link>
      <pubDate>Sun, 27 Oct 2024 23:19:17 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241027/</guid>
      <description>dig是linux下很常见的dns工具
win上只能手动安装了
Note that BIND 9.18 and beyond will no longer support the native Windows(tm) operating system.
官网公告，9.18及以后的不再提供了，所以只能安装最后的版本9.17.9了
链接 如下，ftp粘贴到idm中可添加直接下载
ftp://ftp.isc.org/isc/bind9/9.17.9/BIND9.17.9.x64.zip 解压缩，把文件夹到添加到win环境变量当中
就可以在win中运行dig了</description>
      <content:encoded><![CDATA[<p>dig是linux下很常见的dns工具<br>
win上只能手动安装了<br>
Note that BIND 9.18 and beyond will no longer support the native Windows(tm) operating system.</p>
<p>官网公告，9.18及以后的不再提供了，所以只能安装最后的版本9.17.9了<br>
链接 如下，ftp粘贴到idm中可添加直接下载</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ftp://ftp.isc.org/isc/bind9/9.17.9/BIND9.17.9.x64.zip
</span></span></code></pre></div><p>解压缩，把文件夹到添加到win环境变量当中<br>
就可以在win中运行dig了</p>
]]></content:encoded>
    </item>
    <item>
      <title>Debian11 开启bbr</title>
      <link>https://qklgblog.pages.dev/post/20241021/</link>
      <pubDate>Mon, 21 Oct 2024 17:34:11 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241021/</guid>
      <description>确认内核是否支持bbr
sysctl net.ipv4.tcp_available_congestion_control 1 开启bbr
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; | sudo tee -a /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; | sudo tee -a /etc/sysctl.conf 重新加载sysctl 设置
sudo sysctl -p 2 开启bbr+fq
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; | sudo tee -a /etc/sysctl.conf 重新加载sysctl 设置
sudo sysctl -p </description>
      <content:encoded><![CDATA[<p>确认内核是否支持bbr</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sysctl net.ipv4.tcp_available_congestion_control
</span></span></code></pre></div><p>1  开启bbr</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">echo &#34;net.core.default_qdisc=fq&#34; | sudo tee -a /etc/sysctl.conf
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">echo &#34;net.ipv4.tcp_congestion_control=bbr&#34; | sudo tee -a /etc/sysctl.conf
</span></span></code></pre></div><p>重新加载sysctl 设置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo sysctl -p
</span></span></code></pre></div><p>2 开启bbr+fq</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">echo &#34;net.core.default_qdisc=fq&#34; | sudo tee -a /etc/sysctl.conf
</span></span></code></pre></div><p>重新加载sysctl 设置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo sysctl -p
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>openwrt用cron定时任务装哪吒探针</title>
      <link>https://qklgblog.pages.dev/post/20241020/</link>
      <pubDate>Sun, 20 Oct 2024 12:53:40 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241020/</guid>
      <description>前言 :本文使用定时任务的方式装哪吒探针，如果你觉得麻烦的话可以用ipk的方式创建哪吒探针
项目地址https://github.com/Erope/openwrt_nezha/releases/
下载后上传安装ipk包，然后设置就可以了
1 下载哪吒探针的agent 选择你的客户端下载，我的是n5105的软路由所以选择的是linux-amd64
https://github.com/nezhahq/agent/releases
将nezha-agnet 用winscp或其他工具上传用到/opt/nezha/agent/ 文件夹下，我喜欢和debian一样的
没有就用下面命令创建个
mkdir -p /opt/nezha/agent/ 2 创建nezha.sh文件 在/opt/nezha 文件夹下创建 nezha.sh文件,里面填入如下
agenntkey 换成你自己的 &amp;ndash;disable-command-execute的话禁用webssh
#!/bin/bash cd /opt/nezha/agent chmod +x nezha-agent ./nezha-agent -s 没套cdn的域名:面板rpc端口 -p agentkey --disable-command-execute 3 启动任务 打开openwrt的管理后台 系统-计划任务
里面加入如下,填入如下文本，右下角提交
* * * * * /bin/bash /opt/nezha/agent/nezha.sh 登录openwrt的ssh，重启cron
/etc/init.d/cron restart 如果启动成功的话就可以在后台看到哪吒了，如果未成功可以查看cron日志
logread | grep cron 4 编辑nezha-agent 在ssh中
/opt/nezha/agent/nezha-agent edit 网卡选择eth0，我的eth0是wan口，方向键的上下移动，空格选择，然后回车
接着是硬盘，根据自己的分区选择
自定义dns的话我没自定义，直接空格回车
是否启用gpu监控，输入y 回车
是否启动温度监控，输入y回车
是否开启调试模式，输入N回车
重启agent就可以生效了
成功效果如图</description>
      <content:encoded><![CDATA[<p>前言 :本文使用定时任务的方式装哪吒探针，如果你觉得麻烦的话可以用ipk的方式创建哪吒探针<br>
项目地址<a href="https://github.com/Erope/openwrt_nezha/releases/">https://github.com/Erope/openwrt_nezha/releases/</a></p>
<p>下载后上传安装ipk包，然后设置就可以了</p>
<h1 id="1-下载哪吒探针的agent">1 下载哪吒探针的agent</h1>
<p>选择你的客户端下载，我的是n5105的软路由所以选择的是linux-amd64</p>
<p><a href="https://github.com/nezhahq/agent/releases">https://github.com/nezhahq/agent/releases</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/KySh8sF.png" alt="image-20241020121816437"  />
</p>
<p>将nezha-agnet   用winscp或其他工具上传用到/opt/nezha/agent/  文件夹下，我喜欢和debian一样的</p>
<p>没有就用下面命令创建个</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir -p /opt/nezha/agent/  
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/wtKhGuw.png" alt="image-20241020122027653"  />
</p>
<h1 id="2---创建nezhash文件">2   创建nezha.sh文件</h1>
<p>在/opt/nezha 文件夹下创建 nezha.sh文件,里面填入如下</p>
<p>agenntkey 换成你自己的   &ndash;disable-command-execute的话禁用webssh</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">cd</span> /opt/nezha/agent
</span></span><span class="line"><span class="cl">chmod +x nezha-agent
</span></span><span class="line"><span class="cl">./nezha-agent -s 没套cdn的域名:面板rpc端口 -p agentkey --disable-command-execute
</span></span></code></pre></div><h1 id="3--启动任务">3  启动任务</h1>
<p>打开openwrt的管理后台  系统-计划任务</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/a4Pn5XA.png" alt="image-20241020122540873"  />
</p>
<p>里面加入如下,填入如下文本，右下角提交</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">* * * * * /bin/bash /opt/nezha/agent/nezha.sh
</span></span></code></pre></div><p>登录openwrt的ssh，重启cron</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/etc/init.d/cron restart
</span></span></code></pre></div><p>如果启动成功的话就可以在后台看到哪吒了，如果未成功可以查看cron日志</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">logread | grep cron
</span></span></code></pre></div><h1 id="4-编辑nezha-agent">4 编辑nezha-agent</h1>
<p>在ssh中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/opt/nezha/agent/nezha-agent edit
</span></span></code></pre></div><p>网卡选择eth0，我的eth0是wan口，方向键的上下移动，空格选择，然后回车</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/ozzvPNA.png" alt="image-20241020123330838"  />
</p>
<p>接着是硬盘，根据自己的分区选择</p>
<p>自定义dns的话我没自定义，直接空格回车</p>
<p>是否启用gpu监控，输入y 回车</p>
<p>是否启动温度监控，输入y回车</p>
<p>是否开启调试模式，输入N回车</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/LOJnkl7.png" alt="image-20241020123520987"  />
</p>
<p>重启agent就可以生效了</p>
<p>成功效果如图</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/P1XVL4b.png" alt="image-20241020123644431"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>nginx搭建文件服务器当图床</title>
      <link>https://qklgblog.pages.dev/post/20241014/</link>
      <pubDate>Mon, 14 Oct 2024 15:39:16 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241014/</guid>
      <description>基于1panel
我的探针就是用1panel反代的，顺带在探针鸡上搞一下算了
1 前置操作 ①打开路径 应用商店-已安装-openresty-进入安装目录
打开/conf/conf.d
上面的路径应该是 /opt/1panel/apps/openresty/openresty/conf/conf.d
②配置文件 创建pic.conf的文件，内容如下，保存
29288可以改成你自己的端口
/var/pic的话就是你图片的文件夹
autoindex on; 启用自动索引，我是打开的
autoindex_exact_size off的话显示文件大小为多少K
autoindex_localtime 显示本地时间，我是打开的
server { listen 29288; server_name localhost; location / { root /var/pic; index index.html; autoindex on; autoindex_exact_size off; autoindex_localtime on; } } ​
2 docker文件夹映射 ①创建图片文件夹 创建/var/pic 文件夹 ，创建完记得往里面随便传个图片
mkdir -p /var/pic ②容器添加图片文件夹路径 1panel面板-容器-1panel/openresty 最右边的更多-添加
挂载/var/pic ，点击确认
3 反代 网站-创建网站-反向代理
主域名填写你图床的域名
代理地址的话填写 127.0.0.1:29288 29288也换成你自己的端口，确认
4 https证书 https启用下，1panel申请证书看这个 https://1panel.cn/docs/user_manual/websites/certificate_create/
① cf api acme账户的话cloudflare的话，现在不是Global API Key了</description>
      <content:encoded><![CDATA[<p>基于1panel<br>
我的探针就是用1panel反代的，顺带在探针鸡上搞一下算了</p>
<h1 id="1-前置操作">1 前置操作</h1>
<h2 id="打开路径">①打开路径</h2>
<p>应用商店-已安装-openresty-进入安装目录</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/yYZKKeT.png" alt="image-20241014143742691"  />
</p>
<p>打开/conf/conf.d</p>
<p>上面的路径应该是 /opt/1panel/apps/openresty/openresty/conf/conf.d</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/NREgLmS.png" alt=""  />
</p>
<h2 id="配置文件">②配置文件</h2>
<p>创建pic.conf的文件，内容如下，保存</p>
<p>29288可以改成你自己的端口</p>
<p>/var/pic的话就是你图片的文件夹</p>
<p>autoindex on;  启用自动索引，我是打开的</p>
<p>autoindex_exact_size   off的话显示文件大小为多少K</p>
<p>autoindex_localtime  显示本地时间，我是打开的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">listen</span> <span class="mi">29288</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">server_name</span> <span class="n">localhost</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">location</span> <span class="o">/</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">root</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">pic</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">index</span> <span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">autoindex</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">autoindex_exact_size</span> <span class="n">off</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">autoindex_localtime</span> <span class="n">on</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>​</p>
<h1 id="2-docker文件夹映射">2 docker文件夹映射</h1>
<h2 id="创建图片文件夹">①创建图片文件夹</h2>
<p>创建/var/pic 文件夹  ，创建完记得往里面随便传个图片</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">mkdir</span> <span class="o">-</span><span class="n">p</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">pic</span> 
</span></span></code></pre></div><h2 id="容器添加图片文件夹路径">②容器添加图片文件夹路径</h2>
<p>1panel面板-容器-1panel/openresty   最右边的更多-添加</p>
<p>挂载/var/pic  ，点击确认</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/cM95LhY.png" alt=""  />
</p>
<h1 id="3-反代">3 反代</h1>
<p>网站-创建网站-反向代理</p>
<p>主域名填写你图床的域名</p>
<p>代理地址的话填写  127.0.0.1:29288   29288也换成你自己的端口，确认</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/eqA4uRk.png" alt=""  />
</p>
<h1 id="4-https证书">4 https证书</h1>
<p>https启用下，1panel申请证书看这个 <a href="https://1panel.cn/docs/user_manual/websites/certificate_create/">https://1panel.cn/docs/user_manual/websites/certificate_create/</a></p>
<h2 id="-cf-api">① cf api</h2>
<p>acme账户的话cloudflare的话，现在不是Global API Key了</p>
<p><a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a></p>
<p>创建令牌  编辑区域dns，使用此模板</p>
<p>区域资源，包括 所有域名</p>
<p>继续以显示摘要-创建令牌</p>
<p>保存下，token只显示一次</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/GoFapeO.png" alt=""  />
</p>
<h2 id="dns账户">②dns账户</h2>
<p>1panel面板-网站-证书- dns账户</p>
<p>创建名字随便去个，我直接就叫cf</p>
<p>类型cloudflare</p>
<p>EMAIL 你的cf邮箱</p>
<p>API Token 刚刚上面创建的token</p>
<p>点击确认</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/C04fpNa.png" alt=""  />
</p>
<h2 id="--创建acme账户">③  创建acme账户</h2>
<p>邮箱自己邮箱</p>
<p>我一般用let&rsquo;s</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/cpb7ijQ.png" alt="image-20241014151646265"  />
</p>
<h2 id="-申请证书">④ 申请证书</h2>
<p>主域名的话填写  abc.com</p>
<p>其他域名的话  *.abc.com 申请通配符</p>
<p>acme账户刚刚创建的acme账户</p>
<p>验证方式dns验证</p>
<p>dns账户选择cf</p>
<p>自动续签勾上</p>
<p>点击确认就会申请证书了</p>
<p>就能看到证书申请成功了</p>
<p>三个月的let&rsquo;s通配符</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/K0zwb4M.png" alt="image-20241014151913165"  />
</p>
<p>网站-网站</p>
<p>选择你的域名-https-启用https</p>
<p>SSL 选项选择已有证书</p>
<p>amce账户选择你刚刚的账户-</p>
<p>证书选择你刚刚的证书</p>
<p>保存</p>
<p>这样子你的图片就是 域名/文件名字了</p>
<p>比方说我把avatar.png  传到/var/pic下的话</p>
<p>avatar.png的url就是  https://域名/avatar.png</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享下自用的cloudflare 图片缓存设置</title>
      <link>https://qklgblog.pages.dev/post/20241002/</link>
      <pubDate>Wed, 02 Oct 2024 00:57:53 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241002/</guid>
      <description>规则-页面规则
隔壁论坛抄过来的这个 https://linux.do/t/topic/126107/5
缓存-Cache Rules-创建规则
我的图片都是图片，所以我只缓存图片格式算了
效果如下</description>
      <content:encoded><![CDATA[<p>规则-页面规则<br>
<img loading="lazy" src="https://s3.qklg.net/img/PdrREb6.png" alt=""  />
</p>
<p>隔壁论坛抄过来的这个  <a href="https://linux.do/t/topic/126107/5">https://linux.do/t/topic/126107/5</a><br>
缓存-Cache Rules-创建规则<br>
我的图片都是图片，所以我只缓存图片格式算了<br>
<img loading="lazy" src="https://s3.qklg.net/img/lwvqUy4.png" alt=""  />
</p>
<p>效果如下<br>
<img loading="lazy" src="https://s3.qklg.net/img/ndd2ELF.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>python3搭建http服务器拿来当图床</title>
      <link>https://qklgblog.pages.dev/post/20241001/</link>
      <pubDate>Tue, 01 Oct 2024 02:10:30 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20241001/</guid>
      <description>本文基于debian
1 安装python3和python3-pip
sudo apt update sudo apt install python3 sudo apt install python3-pip 检查下是否安装成功
python3 --version pip3 --version 2
python3 -m http.server 8090 这样子 ip:8090就可以访问了,8090可以换成任意端口
不过这样子的话无法长期使用，所以创建个Systemd ，同时搞个文件夹专门放图片
先创建文件夹 我是直接在root下创建的，记得文件夹下面随便放个文件任意，不然会遇到无法访问情况
sudo mkdir -p /root/pic 在 /etc/systemd/system 下创建一个叫python-http.service的文件
里面填写图下内容，我用chatgpt写的，文件的话我用winscp编辑上传的，你用nano也行，保存退出
[Unit] Description=Python HTTP Server After=network.target [Service] ExecStart=/usr/bin/python3 -m http.server 8090 WorkingDirectory=/root/pic User=root Restart=always [Install] WantedBy=multi-user.target systemd就下面那么玩呗，分别是 重新加载，启动服务，开机自启
sudo systemctl daemon-reload sudo systemctl start python-http sudo systemctl enable python-http 检查下状态
sudo systemctl status python-http 搞完么，拿nginx，caddy或者cloudflare tunnel什么的反代下，就完事了</description>
      <content:encoded><![CDATA[<p>本文基于debian</p>
<p>1 安装python3和python3-pip</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt update
</span></span><span class="line"><span class="cl">sudo apt install python3
</span></span><span class="line"><span class="cl">sudo apt install python3-pip
</span></span></code></pre></div><p>检查下是否安装成功</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">python3 --version
</span></span><span class="line"><span class="cl">pip3 --version
</span></span></code></pre></div><p>2</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">python3 -m http.server 8090
</span></span></code></pre></div><p>这样子 ip:8090就可以访问了,8090可以换成任意端口</p>
<p>不过这样子的话无法长期使用，所以创建个Systemd ，同时搞个文件夹专门放图片</p>
<p>先创建文件夹 我是直接在root下创建的，记得文件夹下面随便放个文件任意，不然会遇到无法访问情况</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo mkdir -p /root/pic
</span></span></code></pre></div><p>在 /etc/systemd/system 下创建一个叫python-http.service的文件</p>
<p>里面填写图下内容，我用chatgpt写的，文件的话我用winscp编辑上传的，你用nano也行，保存退出</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[Unit]
</span></span><span class="line"><span class="cl">Description=Python HTTP Server
</span></span><span class="line"><span class="cl">After=network.target
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Service]
</span></span><span class="line"><span class="cl">ExecStart=/usr/bin/python3 -m http.server 8090
</span></span><span class="line"><span class="cl">WorkingDirectory=/root/pic
</span></span><span class="line"><span class="cl">User=root
</span></span><span class="line"><span class="cl">Restart=always
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Install]
</span></span><span class="line"><span class="cl">WantedBy=multi-user.target
</span></span></code></pre></div><p>systemd就下面那么玩呗，分别是 重新加载，启动服务，开机自启</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>
</span></span><span class="line"><span class="cl"><span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">python</span><span class="o">-</span><span class="n">http</span>
</span></span><span class="line"><span class="cl"><span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">python</span><span class="o">-</span><span class="n">http</span>
</span></span></code></pre></div><p>检查下状态</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo systemctl status python-http
</span></span></code></pre></div><p>搞完么，拿nginx，caddy或者cloudflare tunnel什么的反代下，就完事了<br>
文件直接用winscp传上去，地址的话就是  反代域名/文件名字</p>
]]></content:encoded>
    </item>
    <item>
      <title>cloudflare 生日周新功能总结</title>
      <link>https://qklgblog.pages.dev/post/20240925/</link>
      <pubDate>Wed, 25 Sep 2024 15:06:41 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240925/</guid>
      <description>先祝cf大善人 14岁生日快乐
mjj可以去看下新增加的功能
https://www.cloudflare.com/zh-cn/birthday-week-2024/updates/
都在这几篇文章里面，我稍微分享几个对mjj来说有用的功能
具体的可以看cf的文档和文章，我只是稍微分享下
1 Security Analytics 安全分析 文档链接 https://developers.cloudflare.com/waf/analytics/security-analytics/
主要功能是看各种请求信息，免费用户最多可以看7天的，付费的pro以上可以看1个月
2 DNS Analytics DNS分析 DNS分析 文档链接 https://developers.cloudflare.com/dns/additional-options/analytics/
主要功能是看 DNS 查询的数据，免费用户最多可以看7天的，付费的pro以上可以看1个月
3 google登录cf 4 Supply chain attack prevention 检测页面的第三方js的安全性的
文档链接 https://developers.cloudflare.com/page-shield/detection/monitor-connections-scripts/
5 API schema validation 以上5个功能详细可以看cf的这篇文章
https://blog.cloudflare.com/a-safer-internet-with-cloudflare/
6 批量修改dns 具体看cf的博客
https://blog.cloudflare.com/batched-dns-changes
7 AI Audit 分析和控制那些ai爬虫
具体可以看cf的这篇博客
https://blog.cloudflare.com/zh-cn/cloudflare-ai-audit-control-ai-content-crawlers/</description>
      <content:encoded><![CDATA[<p>先祝cf大善人 14岁生日快乐<br>
mjj可以去看下新增加的功能<br>
<a href="https://www.cloudflare.com/zh-cn/birthday-week-2024/updates/">https://www.cloudflare.com/zh-cn/birthday-week-2024/updates/</a></p>
<p>都在这几篇文章里面，我稍微分享几个对mjj来说有用的功能</p>
<p>具体的可以看cf的文档和文章，我只是稍微分享下</p>
<h1 id="1-security-analytics">1 Security Analytics</h1>
<p>安全分析  文档链接  <a href="https://developers.cloudflare.com/waf/analytics/security-analytics/">https://developers.cloudflare.com/waf/analytics/security-analytics/</a></p>
<p>主要功能是看各种请求信息，免费用户最多可以看7天的，付费的pro以上可以看1个月</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/zqQRZax.png" alt=""  />
</p>
<h1 id="2--dns-analytics--dns分析">2  DNS Analytics  DNS分析</h1>
<p>DNS分析  文档链接  <a href="https://developers.cloudflare.com/dns/additional-options/analytics/">https://developers.cloudflare.com/dns/additional-options/analytics/</a></p>
<p>主要功能是看 DNS 查询的数据，免费用户最多可以看7天的，付费的pro以上可以看1个月</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/BSMuXPj.png" alt=""  />
</p>
<h1 id="3-google登录cf">3 google登录cf</h1>
<p><img loading="lazy" src="https://s3.qklg.net/img/6ApbQZ2.png" alt=""  />
</p>
<h1 id="4-supply-chain-attack-prevention">4 Supply chain attack prevention</h1>
<p>检测页面的第三方js的安全性的</p>
<p>文档链接  <a href="https://developers.cloudflare.com/page-shield/detection/monitor-connections-scripts/">https://developers.cloudflare.com/page-shield/detection/monitor-connections-scripts/</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/8t48JAw.png" alt=""  />
</p>
<h1 id="5-api-schema-validation">5 API schema validation</h1>
<p><img loading="lazy" src="https://s3.qklg.net/img/qF48IW0.png" alt=""  />
</p>
<p>以上5个功能详细可以看cf的这篇文章</p>
<p><a href="https://blog.cloudflare.com/a-safer-internet-with-cloudflare/">https://blog.cloudflare.com/a-safer-internet-with-cloudflare/</a></p>
<h1 id="6-批量修改dns">6 批量修改dns</h1>
<p>具体看cf的博客</p>
<p><a href="https://blog.cloudflare.com/batched-dns-changes">https://blog.cloudflare.com/batched-dns-changes</a></p>
<h1 id="7-ai-audit">7 AI Audit</h1>
<p>分析和控制那些ai爬虫</p>
<p>具体可以看cf的这篇博客</p>
<p><a href="https://blog.cloudflare.com/zh-cn/cloudflare-ai-audit-control-ai-content-crawlers/">https://blog.cloudflare.com/zh-cn/cloudflare-ai-audit-control-ai-content-crawlers/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>warp移动能直连hk</title>
      <link>https://qklgblog.pages.dev/post/20240923/</link>
      <pubDate>Mon, 23 Sep 2024 18:24:40 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240923/</guid>
      <description>cf赛高
有个问题问下你们
你们的ios和Windows电脑是不是只能练lax或者sjc
我就安卓手机可以连hkg
其他两个连不上
甚至能看奈飞，狼辛和周星驰电影这些肯定是非自制了
其他的流媒体测试结果如下</description>
      <content:encoded><![CDATA[<p>cf赛高<br>
<img loading="lazy" src="https://s3.qklg.net/img/8fSn8Td.png" alt="image"  />
</p>
<p>有个问题问下你们<br>
你们的ios和Windows电脑是不是只能练lax或者sjc<br>
我就安卓手机可以连hkg<br>
其他两个连不上</p>
<p>甚至能看奈飞，狼辛和周星驰电影这些肯定是非自制了<br>
<img loading="lazy" src="https://s3.qklg.net/img/Vd5BUty.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/eDynPNJ.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/glOzfuo.png" alt=""  />
</p>
<p>其他的流媒体测试结果如下<br>
<img loading="lazy" src="https://s3.qklg.net/img/wsD3fkQ.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/BDXnI8e.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>Cloudflare WARP MASQUE体验分享</title>
      <link>https://qklgblog.pages.dev/post/20240922/</link>
      <pubDate>Sun, 22 Sep 2024 17:24:50 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240922/</guid>
      <description>Android 根据隔壁群大佬说的
google play加入warp的beta测试，把app删了，重新下，下载好之后过个几分钟会有个beta更新，
更新完之后就行了
然后app里面，设置-高级-连接选项-tunnel protocol选择MASQUE
速度还不错，移动甚至能直连cf的hk pop
Windows 下载新版的，官网就行 https://one.one.one.one/
安装好之后，
新建个mdm.xml，放到 C:\ProgramData\Cloudflare 下面
&amp;lt;dict&amp;gt; &amp;lt;key&amp;gt;warp_tunnel_protocol&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;masque&amp;lt;/string&amp;gt; &amp;lt;/dict&amp;gt; 连的是洛杉矶的pop
测了下速度
油管十万多
speedtest
ios ios简单，下好app
设置-高级-连接选项-tunnel protocol选择MASQUE
速度还行</description>
      <content:encoded><![CDATA[<h1 id="android">Android</h1>
<p>根据隔壁群大佬说的<br>
google play加入warp的beta测试，把app删了，重新下，下载好之后过个几分钟会有个beta更新，<br>
更新完之后就行了<br>
<img loading="lazy" src="https://s3.qklg.net/img/DHsxoPn.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/pbXJr0W.png" alt=""  />
</p>
<p>然后app里面，设置-高级-连接选项-tunnel protocol选择MASQUE<br>
<img loading="lazy" src="https://s3.qklg.net/img/hX61rox.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/rvXL4q6.png" alt=""  />
</p>
<p>速度还不错，移动甚至能直连cf的hk pop<br>
<img loading="lazy" src="https://s3.qklg.net/img/8sKc8qQ.png" alt=""  />
</p>
<h1 id="windows">Windows</h1>
<p>下载新版的，官网就行  <a href="https://one.one.one.one/">https://one.one.one.one/</a></p>
<p>安装好之后，</p>
<p>新建个mdm.xml，放到 C:\ProgramData\Cloudflare 下面</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&lt;dict&gt;
</span></span><span class="line"><span class="cl">    &lt;key&gt;warp_tunnel_protocol&lt;/key&gt;
</span></span><span class="line"><span class="cl">    &lt;string&gt;masque&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;/dict&gt;
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/cZt7u5a.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/RflvJmv.png" alt=""  />
</p>
<p>连的是洛杉矶的pop</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/3gCQupf.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/OUn4KVk.png" alt=""  />
</p>
<p>测了下速度</p>
<p>油管十万多</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/N5M20Mz.png" alt=""  />
</p>
<p>speedtest</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/PgvsPoZ.png" alt=""  />
</p>
<h1 id="ios">ios</h1>
<p>ios简单，下好app</p>
<p>设置-高级-连接选项-tunnel protocol选择MASQUE</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/1aaxvuY.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/ACt1NvD.png" alt=""  />
</p>
<p>速度还行</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/4fzSGzD.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>在无人关注的角落里，cf的ipfs公共网关无了</title>
      <link>https://qklgblog.pages.dev/post/20240829/</link>
      <pubDate>Thu, 29 Aug 2024 23:49:40 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240829/</guid>
      <description>我的签名的博客本来about里有段
可以通过Cloudflare的公共网关来访问 https://cloudflare-ipfs.com/ipfs/QmUf7b6tiz3nbxQbtcTo7e2FABn52AmZTLsBMRGzxKrJb3/ 今天博客搬家从gridea搬家到hugo上
结果点进去发现居然打不开了
于是搜了下，发现去年就有帖子说cf的web3按钮没了，换成AI了
这边的ai本来是web3的，果然热度没了，以前热度是web3 元宇宙，现在是ai了
然后cf的官网找到了篇博客
https://blog.cloudflare.com/cloudflares-public-ipfs-gateways-and-supporting-interplanetary-shipyard/
里面有说
所有使用cloudflare-ipfs.com或cf-ipfs.com主机名的流量将继续不间断地工作，并重定向到 ipfs.io 或 dweb.link，直到 2024 年 8 月 14 日，届时 Cloudflare 主机名将不再连接到 IPFS，所有用户必须将他们使用的主机名切换到ipfs.io或dweb.link，以确保不会发生服务中断。如果您正在使用任何一个 Cloudflare 主机名，请务必在过渡日期之前尽快切换到新的主机名之一，以避免任何服务中断！ 在无人关注的角落里，cf的ipfs公共网关无了
现在隔一段时间久一个热点，过去源于元宇宙 web3 nft ，现在ai
过段时间又可能是别的什么了
大家又有新的玩具玩了</description>
      <content:encoded><![CDATA[<p>我的签名的博客本来about里有段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">可以通过Cloudflare的公共网关来访问 https://cloudflare-ipfs.com/ipfs/QmUf7b6tiz3nbxQbtcTo7e2FABn52AmZTLsBMRGzxKrJb3/
</span></span></code></pre></div><p>今天博客搬家从gridea搬家到hugo上<br>
结果点进去发现居然打不开了<br>
于是搜了下，发现去年就有帖子说cf的web3按钮没了，换成AI了<br>
这边的ai本来是web3的，果然热度没了，以前热度是web3 元宇宙，现在是ai了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408311215617.png" alt=""  />
<br>
然后cf的官网找到了篇博客<br>
<a href="https://blog.cloudflare.com/cloudflares-public-ipfs-gateways-and-supporting-interplanetary-shipyard/">https://blog.cloudflare.com/cloudflares-public-ipfs-gateways-and-supporting-interplanetary-shipyard/</a><br>
里面有说</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">所有使用cloudflare-ipfs.com或cf-ipfs.com主机名的流量将继续不间断地工作，并重定向到 ipfs.io 或 dweb.link，直到 2024 年 8 月 14 日，届时 Cloudflare 主机名将不再连接到 IPFS，所有用户必须将他们使用的主机名切换到ipfs.io或dweb.link，以确保不会发生服务中断。如果您正在使用任何一个 Cloudflare 主机名，请务必在过渡日期之前尽快切换到新的主机名之一，以避免任何服务中断！
</span></span></code></pre></div><p>在无人关注的角落里，cf的ipfs公共网关无了<br>
现在隔一段时间久一个热点，过去源于元宇宙 web3 nft ，现在ai<br>
过段时间又可能是别的什么了<br>
大家又有新的玩具玩了</p>
]]></content:encoded>
    </item>
    <item>
      <title>publii部署静态博客</title>
      <link>https://qklgblog.pages.dev/post/20240823/</link>
      <pubDate>Fri, 23 Aug 2024 21:55:30 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240823/</guid>
      <description>以前哥们写过一篇用gridea部署静态博客的文章
文章链接 https://www.nodeseek.com/post-8624-1
今天闲着无聊逛老外论坛的时候发现了一个类似的，和gridea一样，不用自己像hexo hugo那样折腾命令
全部可以用gui来完成的博客系统
一 下载publii 并且汉化 ①下载 https://getpublii.com/download/ 拉到最下面，下载0.45.2的版本，汉化支持最新的版本就是这个
双击打开，点我同意安装就可以了，然后会来到这么个界面，先不要管，
② 汉化 点右上角三个点，选择language
点击get more language，跳转到 https://github.com/GetPublii/Publii-ui-locales
拉到下面选择zh-cn下载，点下载按钮下载
最高支持到0.45.0，所以刚刚下的旧版本
点击右上角的install language，直接点刚刚的汉化文件就行，不用解压缩,选择就行，如果还是不行，重启下软件
二 配置github ①注册 github https://github.com/join 没号的自己注册一个
②创建仓库 https://github.com/new
创建username.github.io的 仓库
username就是你github的用户名
其实仓库名字也可以不是这个，随便取个就行，取github.io结尾的，
是我想同时用cloudflare pages，netlify，vercel之外，还有可以部署到github pages，多个地方
③申请token https://github.com/settings/tokens/new
点击链接申请token，期限选择无期限，repo勾上，token只显示一次，记得保存下
三 配置 publii ①配置服务器 点击左边的服务器，选择 git repository
里面长这样子
网址就是你博客的网址，如果你没域名的话就是 username.github.io
存储库url就是 你刚刚创建github仓库的url，注意，后面加个.git
如果你和我一样的话应该是 username.github.io仓库的话应该是下面这样子，username改成你自己的
https://github.com/username/username.github.io.git
分支 一般为main
用户名 就是你github的邮箱
密码/令牌 就是你刚刚创建的github的token
提交作者 ，提交作者邮箱这两个自己填下就行了
提交信息不用动
点击保存，并且测试下连接
②写文章 文章的话我喜欢markdown，我一般用typora编辑之后复制到其他地方
③同步 点击左下角的同步您的网站，即可同步到github仓库，然后cf pages等其他地方会自动更新的</description>
      <content:encoded><![CDATA[<p>以前哥们写过一篇用<a href="https://github.com/getgridea/gridea">gridea</a>部署静态博客的文章<br>
文章链接   <a href="https://www.nodeseek.com/post-8624-1">https://www.nodeseek.com/post-8624-1</a></p>
<p>今天闲着无聊逛老外论坛的时候发现了一个类似的，和gridea一样，不用自己像hexo hugo那样折腾命令<br>
全部可以用gui来完成的博客系统</p>
<h1 id="一--下载publii-并且汉化">一  下载publii 并且汉化</h1>
<h2 id="下载">①下载</h2>
<p><a href="https://getpublii.com/download/">https://getpublii.com/download/</a>  拉到最下面，下载0.45.2的版本，汉化支持最新的版本就是这个<br>
<img loading="lazy" src="https://s3.qklg.net/img/202408232158227.png" alt=""  />
<br>
双击打开，点我同意安装就可以了，然后会来到这么个界面，先不要管，<br>
<img loading="lazy" src="https://s3.qklg.net/img/202408232158176.png" alt=""  />
</p>
<h2 id="-汉化">② 汉化</h2>
<p>点右上角三个点，选择language</p>
<p>点击get more language，跳转到  <a href="https://github.com/GetPublii/Publii-ui-locales">https://github.com/GetPublii/Publii-ui-locales</a><br>
拉到下面选择zh-cn下载，点下载按钮下载<br>
最高支持到0.45.0，所以刚刚下的旧版本<br>
<img loading="lazy" src="https://s3.qklg.net/img/202408232158603.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202408232158657.png" alt=""  />
<br>
点击右上角的install language，直接点刚刚的汉化文件就行，不用解压缩,选择就行，如果还是不行，重启下软件<br>
<img loading="lazy" src="https://s3.qklg.net/img/202408232159054.png" alt=""  />
</p>
<h1 id="二--配置github">二  配置github</h1>
<h2 id="注册-github">①注册 github</h2>
<p><a href="https://github.com/join">https://github.com/join</a> 没号的自己注册一个</p>
<h2 id="创建仓库">②创建仓库</h2>
<p><a href="https://github.com/new">https://github.com/new</a></p>
<p>创建username.github.io的 仓库</p>
<p>username就是你github的用户名</p>
<p>其实仓库名字也可以不是这个，随便取个就行，取github.io结尾的，</p>
<p>是我想同时用cloudflare pages，netlify，vercel之外，还有可以部署到github pages，多个地方</p>
<h2 id="申请token">③申请token</h2>
<p><a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a></p>
<p>点击链接申请token，期限选择无期限，repo勾上，token只显示一次，记得保存下</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232159381.png" alt=""  />
</p>
<h1 id="三-配置-publii">三 配置 publii</h1>
<h2 id="配置服务器">①配置服务器</h2>
<p>点击左边的服务器，选择 git repository</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232159146.png" alt=""  />
</p>
<p>里面长这样子</p>
<p>网址就是你博客的网址，如果你没域名的话就是  username.github.io</p>
<p>存储库url就是 你刚刚创建github仓库的url，注意，后面加个.git</p>
<p>如果你和我一样的话应该是 username.github.io仓库的话应该是下面这样子，username改成你自己的</p>
<p><a href="https://github.com/username/username.github.io.git">https://github.com/username/username.github.io.git</a></p>
<p>分支 一般为main</p>
<p>用户名 就是你github的邮箱</p>
<p>密码/令牌 就是你刚刚创建的github的token</p>
<p>提交作者 ，提交作者邮箱这两个自己填下就行了</p>
<p>提交信息不用动</p>
<p>点击保存，并且测试下连接</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232159796.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232159616.png" alt=""  />
</p>
<h2 id="写文章">②写文章</h2>
<p>文章的话我喜欢markdown，我一般用typora编辑之后复制到其他地方</p>
<h2 id="同步">③同步</h2>
<p>点击左下角的同步您的网站，即可同步到github仓库，然后cf pages等其他地方会自动更新的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232159678.png" alt=""  />
</p>
<h2 id="备份">④备份</h2>
<p>点击左边的工具&amp;插件,选择别分即可生成备份文件</p>
<h1 id="四-部署到cloudflare-pages">四 部署到cloudflare pages</h1>
<h2 id="注册cf账户">①注册cf账户</h2>
<p><a href="https://cloudflare.com">https://cloudflare.com</a>打开网站，点击注册</p>
<h2 id="部署到pages">②部署到pages</h2>
<p>选择左侧的workers和pages，选择创建</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232200560.png" alt=""  />
</p>
<p>连接到git，选择你刚刚的github账户和仓库，然后点击开始设置，保存并部署</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232200609.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232200494.png" alt=""  />
</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232200515.png" alt=""  />
</p>
<p>设置自定义域名，默认的pages.dev被墙了，就需要你设置一个自定义域名了</p>
<p>设置完打开浏览器就能访问了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202408232200295.png" alt=""  />
</p>
<p>其他平台可以看我部署到gridea的帖子，是一样的</p>
<h1 id="五-相关链接">五 相关链接</h1>
<p>publii的官网  <a href="https://getpublii.com/">https://getpublii.com/</a></p>
<p>github仓库   <a href="https://github.com/GetPublii/Publii">https://github.com/GetPublii/Publii</a></p>
<p>文档   <a href="https://getpublii.com/docs/">https://getpublii.com/docs/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>chrome 125禁用新ui</title>
      <link>https://qklgblog.pages.dev/post/20240517/</link>
      <pubDate>Fri, 17 May 2024 13:52:49 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240517/</guid>
      <description>chrome更新125了，没法在chrome://flags 里面禁用新界面了
新界面这个右键这真的垃圾，学什么不好，学win11
哥们找了好久,reddit上老外找的办法，快捷方式里面加一个这个
“C:\Program Files\Google\Chrome\Application\chrome.exe” --disable-features=CustomizeChromeSidePanel 参考https://www.reddit.com/r/chrome/comments/1c8sthv/as_of_chrome_ver_125_the_customizechromesidepanel/</description>
      <content:encoded><![CDATA[<p>chrome更新125了，没法在chrome://flags 里面禁用新界面了<br>
新界面这个右键这真的垃圾，学什么不好，学win11<br>
哥们找了好久,reddit上老外找的办法，快捷方式里面加一个这个</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">“C:\Program Files\Google\Chrome\Application\chrome.exe” --disable-features=CustomizeChromeSidePanel
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/202405181353395.png" alt=""  />
<br>
参考<a href="https://www.reddit.com/r/chrome/comments/1c8sthv/as_of_chrome_ver_125_the_customizechromesidepanel/">https://www.reddit.com/r/chrome/comments/1c8sthv/as_of_chrome_ver_125_the_customizechromesidepanel/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>分享下自己用的win软件</title>
      <link>https://qklgblog.pages.dev/post/20240329/</link>
      <pubDate>Fri, 29 Mar 2024 18:27:58 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240329/</guid>
      <description>分享下自己用的win软件
我的软件都在开始菜单里，打开很方便
google chrome上网用的，电脑浏览器用的最多了
office三件套+onenote，用的不多，电脑必备，365家庭车+1T OneDrive一年40多
clash for windows，之前一直用机场的这个，挺好用的
steam 其实是csgo启动器，我已经很久没买游戏了，每天打两把csgo，现在已经是cs2了
steam++，之前配steam用的
share x截图软件
picgo截图图床，这两个我picgo用的比较多，配合typora很好用
网易云，用来听音乐
potplayer，mpv都是看视频的，我用potplayer比较多，MadVR+SVP4的话挺好用的
教程看的b站这个 https://www.bilibili.com/video/av314120135/
mpv用的lazy https://github.com/hooke007/MPV_lazy
自己稍微改了下
contextmenu_gui用的这个 https://github.com/hooke007/MPV_lazy/discussions/60
配置用的这个优化了下 https://vcb-s.com/archives/7594
主要是配emby用的，
浏览器用这个下面可以从emby跳转上去 https://github.com/akiirui/mpv-handler
emby配合油猴脚本启动potplayer和mpv，脚本链接https://github.com/bpking1/embyExternalUrl
弹弹play，看二次元番剧加载弹幕用的
obs主要来录屏
kodo rader看电子书比较多，我平时主要看一些轻小说和漫画
calibre，编辑书的
idm 之前104买的，下载和资源嗅探很好用
win自带的天气
tg，大家都有
spotify听歌和播客的
tim，qq的办公版本
aida64看电脑各硬件的
core temp主要是看温度的
best trace测路由的，用旧版本就不需要设置api了
speedtest 测网速的
lenovo hotkeys控制联想笔记本的快捷键的
lenovo vantage控制联想笔记本的
v2rayng，主要用的自己的节点用这个，机场用clash比较多
termius，只用来ssh，我常用的脚本在这里https://www.nodeseek.com/post-18637-1
winscp，主要用来弄小鸡上文件的，本人懒狗，懒得用vim，直接用winscp
grdiea写博客的，教程看我这个文章https://www.nodeseek.com/post-8624-1
微信，大家都用
geek卸载软件用的
typora用来写markdown的
usbeam改hosts很好用的
ubuntu的子系统
Whisperdesktop可以语音转文字，自己做字幕，教程看这里https://www.nodeseek.com/post-80841-1
mkvtoolnix+gmkvextractgui，可以把字幕从mkv提取，封装mkv之类的
下面一堆win自带的，照片，uwp的邮箱很好用，计算器，终端和相机
电影和电视，配合杜比视界和杜比全景声，hevc插件很好用
https://www.nodeseek.com/post-21191-1
traffic moitor右下角现实网速的
openvpn我出门在外回家用的</description>
      <content:encoded><![CDATA[<p>分享下自己用的win软件<br>
我的软件都在开始菜单里，打开很方便<br>
google chrome上网用的，电脑浏览器用的最多了<br>
office三件套+onenote，用的不多，电脑必备，365家庭车+1T OneDrive一年40多<br>
clash for windows，之前一直用机场的这个，挺好用的<br>
steam 其实是csgo启动器，我已经很久没买游戏了，每天打两把csgo，现在已经是cs2了<br>
steam++，之前配steam用的<br>
share x截图软件<br>
picgo截图图床，这两个我picgo用的比较多，配合typora很好用<br>
网易云，用来听音乐<br>
potplayer，mpv都是看视频的，我用potplayer比较多，MadVR+SVP4的话挺好用的<br>
教程看的b站这个  <a href="https://www.bilibili.com/video/av314120135/">https://www.bilibili.com/video/av314120135/</a><br>
mpv用的lazy  <a href="https://github.com/hooke007/MPV_lazy">https://github.com/hooke007/MPV_lazy</a><br>
自己稍微改了下<br>
contextmenu_gui用的这个 <a href="https://github.com/hooke007/MPV_lazy/discussions/60">https://github.com/hooke007/MPV_lazy/discussions/60</a><br>
配置用的这个优化了下 <a href="https://vcb-s.com/archives/7594">https://vcb-s.com/archives/7594</a><br>
主要是配emby用的，<br>
浏览器用这个下面可以从emby跳转上去 <a href="https://github.com/akiirui/mpv-handler">https://github.com/akiirui/mpv-handler</a><br>
emby配合油猴脚本启动potplayer和mpv，脚本链接https://github.com/bpking1/embyExternalUrl<br>
弹弹play，看二次元番剧加载弹幕用的<br>
obs主要来录屏<br>
kodo rader看电子书比较多，我平时主要看一些轻小说和漫画<br>
calibre，编辑书的<br>
idm 之前104买的，下载和资源嗅探很好用<br>
win自带的天气<br>
tg，大家都有<br>
spotify听歌和播客的<br>
tim，qq的办公版本<br>
aida64看电脑各硬件的<br>
core temp主要是看温度的<br>
best trace测路由的，用旧版本就不需要设置api了<br>
speedtest 测网速的<br>
lenovo hotkeys控制联想笔记本的快捷键的<br>
lenovo vantage控制联想笔记本的<br>
v2rayng，主要用的自己的节点用这个，机场用clash比较多<br>
termius，只用来ssh，我常用的脚本在这里<a href="https://www.nodeseek.com/post-18637-1">https://www.nodeseek.com/post-18637-1</a><br>
winscp，主要用来弄小鸡上文件的，本人懒狗，懒得用vim，直接用winscp<br>
grdiea写博客的，教程看我这个文章<a href="https://www.nodeseek.com/post-8624-1">https://www.nodeseek.com/post-8624-1</a><br>
微信，大家都用<br>
geek卸载软件用的<br>
typora用来写markdown的<br>
usbeam改hosts很好用的<br>
ubuntu的子系统<br>
Whisperdesktop可以语音转文字，自己做字幕，教程看这里<a href="https://www.nodeseek.com/post-80841-1">https://www.nodeseek.com/post-80841-1</a><br>
mkvtoolnix+gmkvextractgui，可以把字幕从mkv提取，封装mkv之类的<br>
下面一堆win自带的，照片，uwp的邮箱很好用，计算器，终端和相机<br>
电影和电视，配合杜比视界和杜比全景声，hevc插件很好用<br>
<a href="https://www.nodeseek.com/post-21191-1">https://www.nodeseek.com/post-21191-1</a><br>
traffic moitor右下角现实网速的<br>
openvpn我出门在外回家用的</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202403291829248.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403291829894.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>自己做字幕和翻译</title>
      <link>https://qklgblog.pages.dev/post/20240317/</link>
      <pubDate>Sun, 17 Mar 2024 10:09:13 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240317/</guid>
      <description>总共两大步
生成语音转文字和翻译
一 原文字幕，语音转文字 ①下载WhisperDesktop https://github.com/Const-me/Whisper/releases
解压缩，打开WhisperDesktop.exe
②下载模型 https://huggingface.co/ggerganov/whisper.cpp/tree/main
我用的是medium，够用了一般
③设置 然后填上模型文件路径
Model Implementation选择gpu，amd的也是可以的，我用的6800H的核显，点ok
这边建议用ffmpeg切成五分钟左右的片段，这样子准确度高很多，到后面有时候会出bug
如果是视频的话，也可以用ffmpeg把音频提取出来
④转换 language选择你原文的语言，translate别勾
Transcribe File选择音频文件
Output Format选择SubRip subtitles的srt格式的文件
Place that file to the input folder的勾上
点完，然后Transcribe开始工作，右上角Debug Console可以看到转换的进度的
我的6800H的核显转换一段五分钟的话，大概一分钟左右完成
二 翻译 翻译的话直接用chatgpt，3.5够用了
用api太贵了，直接免费的web版丢进去完事了
丢给他翻译就完事了，穷人办法，一分钱都不用花
用下面这段提示的话，能保留原来的日文字幕，英文的话自己把日文改成英文就行了
如果它停止了的话就发个go on就行了
把这个日语的字幕文件转成中日双语，中文在下，日文在下面另起一行，保留原有的日文 字幕文件如下 参考
https://www.bilibili.com/video/av268725141/?p=1&amp;amp;t=160
https://www.bilibili.com/read/cv22692287/</description>
      <content:encoded><![CDATA[<p>总共两大步<br>
生成语音转文字和翻译</p>
<h1 id="一-原文字幕语音转文字">一 原文字幕，语音转文字</h1>
<h2 id="下载whisperdesktop">①下载WhisperDesktop</h2>
<p><a href="https://github.com/Const-me/Whisper/releases">https://github.com/Const-me/Whisper/releases</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171010932.png" alt=""  />
<br>
解压缩，打开WhisperDesktop.exe<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171010503.png" alt=""  />
</p>
<h2 id="下载模型">②下载模型</h2>
<p><a href="https://huggingface.co/ggerganov/whisper.cpp/tree/main">https://huggingface.co/ggerganov/whisper.cpp/tree/main</a><br>
我用的是medium，够用了一般<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171012823.png" alt=""  />
</p>
<h2 id="设置">③设置</h2>
<p>然后填上模型文件路径<br>
Model Implementation选择gpu，amd的也是可以的，我用的6800H的核显，点ok<br>
这边建议用ffmpeg切成五分钟左右的片段，这样子准确度高很多，到后面有时候会出bug<br>
如果是视频的话，也可以用ffmpeg把音频提取出来<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171010791.png" alt=""  />
</p>
<h2 id="转换">④转换</h2>
<p>language选择你原文的语言，translate别勾<br>
Transcribe File选择音频文件<br>
Output Format选择SubRip subtitles的srt格式的文件<br>
Place that file to the input folder的勾上<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171012714.png" alt=""  />
<br>
点完，然后Transcribe开始工作，右上角Debug Console可以看到转换的进度的<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171012184.png" alt=""  />
<br>
我的6800H的核显转换一段五分钟的话，大概一分钟左右完成<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171012548.png" alt=""  />
</p>
<h1 id="二-翻译">二 翻译</h1>
<p>翻译的话直接用chatgpt，3.5够用了<br>
用api太贵了，直接免费的web版丢进去完事了<br>
丢给他翻译就完事了，穷人办法，一分钱都不用花<br>
用下面这段提示的话，能保留原来的日文字幕，英文的话自己把日文改成英文就行了<br>
如果它停止了的话就发个go on就行了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">把这个日语的字幕文件转成中日双语，中文在下，日文在下面另起一行，保留原有的日文
</span></span><span class="line"><span class="cl">字幕文件如下
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/202403171012777.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403171012028.png" alt=""  />
</p>
<p>参考<br>
<a href="https://www.bilibili.com/video/av268725141/?p=1&amp;t=160">https://www.bilibili.com/video/av268725141/?p=1&amp;t=160</a><br>
<a href="https://www.bilibili.com/read/cv22692287/">https://www.bilibili.com/read/cv22692287/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>将我博客的图片都转换成avif</title>
      <link>https://qklgblog.pages.dev/post/jiang-wo-bo-ke-de-tu-pian-dou-zhuan-huan-cheng-avif/</link>
      <pubDate>Thu, 07 Mar 2024 16:56:22 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/jiang-wo-bo-ke-de-tu-pian-dou-zhuan-huan-cheng-avif/</guid>
      <description>1 avif的好处 avif最大的好处就是更高的压缩性，从而省流量和存储
我的博客已经是纯静态化的了，主要的大头是图片，变小可以更加快的打开博客
之前的png格式的，现在转换成avif，大小只有原来21%
压缩性比webp更加好
2主流浏览器已经支持 Microsoft Edge在从2024年1月开始的121版本也开始支持了
其他的浏览器safari和firefox也早就支持了
chrome的话早在2020年的chrome85就支持了
具体支持度可以看这个
https://caniuse.com/?search=avif
3用ffmpeg转换 for %%i in (&amp;#34;D:\blog\png\*.png&amp;#34;) do ffmpeg -i &amp;#34;%%i&amp;#34; -c:v av1 -strict experimental -b:v 0 -crf 30 &amp;#34;D:\blog\avif\%%~ni.avif&amp;#34; 将我D:\blog\png下的png文件全转成了avif
4更多 如果你想更加了解avif的话
https://blog.cloudflare.com/generate-avif-images-with-image-resizing
https://developer.aliyun.com/article/1147111</description>
      <content:encoded><![CDATA[<h1 id="1-avif的好处">1 avif的好处</h1>
<p>avif最大的好处就是更高的压缩性，从而省流量和存储<br>
我的博客已经是纯静态化的了，主要的大头是图片，变小可以更加快的打开博客<br>
之前的png格式的，现在转换成avif，大小只有原来21%<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403071657600.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202403071657238.png" alt=""  />
</p>
<p>压缩性比webp更加好</p>
<h1 id="2主流浏览器已经支持">2主流浏览器已经支持</h1>
<p>Microsoft Edge在从2024年1月开始的121版本也开始支持了<br>
其他的浏览器safari和firefox也早就支持了<br>
chrome的话早在2020年的chrome85就支持了</p>
<p>具体支持度可以看这个<br>
<a href="https://caniuse.com/?search=avif">https://caniuse.com/?search=avif</a></p>
<h1 id="3用ffmpeg转换">3用ffmpeg转换</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"> for %%i in (&#34;D:\blog\png\*.png&#34;) do ffmpeg -i &#34;%%i&#34; -c:v av1 -strict experimental -b:v 0 -crf 30 &#34;D:\blog\avif\%%~ni.avif&#34;
</span></span></code></pre></div><p>将我D:\blog\png下的png文件全转成了avif</p>
<h1 id="4更多">4更多</h1>
<p>如果你想更加了解avif的话<br>
<a href="https://blog.cloudflare.com/generate-avif-images-with-image-resizing">https://blog.cloudflare.com/generate-avif-images-with-image-resizing</a><br>
<a href="https://developer.aliyun.com/article/1147111">https://developer.aliyun.com/article/1147111</a></p>
]]></content:encoded>
    </item>
    <item>
      <title> 2023年看番总结</title>
      <link>https://qklgblog.pages.dev/post/20231222/</link>
      <pubDate>Fri, 22 Dec 2023 01:54:28 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231222/</guid>
      <description>总结下今年看过的番剧
我每季度追是十部左右
看番就图一乐
1月 这季度还行
①妖幻三重奏
看了前面六集，结果停播了，后面重新播，还没去补，我刚下了前面6级的bd，还没补上去，漫画也完结了，矢吹老师卖肉的，还是开放式结局
②久保同学不放过我
为了香菜去看的，高木同学香菜版，漫画也完结了，补完了我，反正有情人终成眷属
③间谍教室
声优教室，卖点就是美少女+声优，反正随便看看
④别当哥哥了
画面很美，剧情看不懂，我就图一乐
⑤冰属性男子与酷酷女同事
衣服很漂亮，剧情我也懒得看懂，反正漫画我最近补完了，有情人终成眷属
⑥为了养老金 去异界存八万金
异世界番，图一乐
⑦虚构推理
女主cv鬼头明里在鬼灭里没说的话，这里面全说完了，女主车速太快
⑧变成狗后被喜欢的人捡走了
刚下bd，等有空再补一遍没圣光的
⑨小智是女生
剧情也没看懂，反正最后有情人终成眷属
⑩邻家天使
小说真不错，可惜遇到p9，这玩意居然还有第二季就很离谱
4月 全是恋爱番
①公爵的契约未婚妻
日本改的韩漫，反正最后有情人总成眷属了
②放学后失眠的你
画面很美，但是当时b站追的时候，删减让我很不爽，那季度唯一在b站看的番，大会员就是大韭菜
情感描写很细致，原作漫画也完结了，作者作者还有个知恩姐，超级好看
③跃动青春
这个番的人居然要学习，还要考试，反正就是很好看，漫画还在连载，我懒得追了
④为美好的世界献上爆焰
图一乐，为了李依李看的，还行
⑤魔法使的新娘
今天刚更完第二部分24集，不如第一季，华哥牛逼
⑥总之就是非常可爱
挺好看，图一乐
⑦小鸟之翼
百合赛高
⑧和山田进行Lv999的恋爱
男的很帅，女的漂亮，不是我这种死宅所能比的
⑨我心里危险的东西
还没看，等最近有空了补一补，这季据说不错的，
⑩邻人似银河
还行，追完了
⑪蓝色管弦乐
音乐番，太小众了
⑫推子
大赤老师牛逼，我是骨科党
7月 这季度真没啥好看的
挑了几个看看
①喜欢的人忘记戴眼镜了
还行，有人说工业糖浆，看个乐，我近视600多，但是没女主这么离谱啊
②我的幸福婚姻
原作小说我补完了，反正就是男女主都是牛逼的，最后有情人终成眷属
③转生产贩卖机
看完了，只能说现在转生的越来越奇怪了，10月还有个转生成猪的
④BanG Dream!It&amp;rsquo;s MyGO!!!!!
看了乐，这季超级不错的一部
⑤能干的猫今天也忧郁
挺有代入感的，我也是一个人住，可惜没这大猫
⑥堀与宫村
可以，看完真不错</description>
      <content:encoded><![CDATA[<p>总结下今年看过的番剧<br>
我每季度追是十部左右<br>
看番就图一乐</p>
<h1 id="1月">1月</h1>
<p>这季度还行<br>
①妖幻三重奏<br>
看了前面六集，结果停播了，后面重新播，还没去补，我刚下了前面6级的bd，还没补上去，漫画也完结了，矢吹老师卖肉的，还是开放式结局<br>
②久保同学不放过我<br>
为了香菜去看的，高木同学香菜版，漫画也完结了，补完了我，反正有情人终成眷属<br>
③间谍教室<br>
声优教室，卖点就是美少女+声优，反正随便看看<br>
④别当哥哥了<br>
画面很美，剧情看不懂，我就图一乐<br>
⑤冰属性男子与酷酷女同事<br>
衣服很漂亮，剧情我也懒得看懂，反正漫画我最近补完了，有情人终成眷属<br>
⑥为了养老金 去异界存八万金<br>
异世界番，图一乐<br>
⑦虚构推理<br>
女主cv鬼头明里在鬼灭里没说的话，这里面全说完了，女主车速太快<br>
⑧变成狗后被喜欢的人捡走了<br>
刚下bd，等有空再补一遍没圣光的<br>
⑨小智是女生<br>
剧情也没看懂，反正最后有情人终成眷属<br>
⑩邻家天使<br>
小说真不错，可惜遇到p9，这玩意居然还有第二季就很离谱</p>
<h1 id="4月">4月</h1>
<p>全是恋爱番<br>
①公爵的契约未婚妻<br>
日本改的韩漫，反正最后有情人总成眷属了<br>
②放学后失眠的你<br>
画面很美，但是当时b站追的时候，删减让我很不爽，那季度唯一在b站看的番，大会员就是大韭菜<br>
情感描写很细致，原作漫画也完结了，作者作者还有个知恩姐，超级好看<br>
③跃动青春<br>
这个番的人居然要学习，还要考试，反正就是很好看，漫画还在连载，我懒得追了<br>
④为美好的世界献上爆焰<br>
图一乐，为了李依李看的，还行<br>
⑤魔法使的新娘<br>
今天刚更完第二部分24集，不如第一季，华哥牛逼<br>
⑥总之就是非常可爱<br>
挺好看，图一乐<br>
⑦小鸟之翼<br>
百合赛高<br>
⑧和山田进行Lv999的恋爱<br>
男的很帅，女的漂亮，不是我这种死宅所能比的<br>
⑨我心里危险的东西<br>
还没看，等最近有空了补一补，这季据说不错的，<br>
⑩邻人似银河<br>
还行，追完了<br>
⑪蓝色管弦乐<br>
音乐番，太小众了<br>
⑫推子<br>
大赤老师牛逼，我是骨科党</p>
<h1 id="7月">7月</h1>
<p>这季度真没啥好看的<br>
挑了几个看看<br>
①喜欢的人忘记戴眼镜了<br>
还行，有人说工业糖浆，看个乐，我近视600多，但是没女主这么离谱啊<br>
②我的幸福婚姻<br>
原作小说我补完了，反正就是男女主都是牛逼的，最后有情人终成眷属<br>
③转生产贩卖机<br>
看完了，只能说现在转生的越来越奇怪了，10月还有个转生成猪的<br>
④BanG Dream!It&rsquo;s MyGO!!!!!<br>
看了乐，这季超级不错的一部<br>
⑤能干的猫今天也忧郁<br>
挺有代入感的，我也是一个人住，可惜没这大猫<br>
⑥堀与宫村<br>
可以，看完真不错<br>
⑦黑暗集会<br>
为了香菜去看的，半夜更新看的时候有点哈人</p>
<h1 id="10月">10月</h1>
<p>①星灵感应<br>
女孩子贴贴，反正很好看，追了前面6集，等完结了再看<br>
②16bit<br>
好久没玩galgame，女主穿越来穿越去的，等下个礼拜更完了，再补几集<br>
③葬送的芙莉莲<br>
霸权动画，除了op都很好<br>
④间谍过家家s2<br>
可以，但是感觉没第一部好看，那个电影也不知道内地上不上了<br>
⑤猪肝倒是热热再吃啊<br>
转生成猪，就很离谱，还没看，等更完了再看<br>
⑥药屋少女的呢喃<br>
猫猫赛高<br>
⑦超超超超喜欢你的100个女孩子<br>
就很离谱</p>
<p>我今年看了这些<br>
有些等更完了再看<br>
最近没时间看<br>
追番的可以试下这个<br>
<a href="https://github.com/EstrellaXD/Auto_Bangumi">https://github.com/EstrellaXD/Auto_Bangumi</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>我该不该需要奈飞</title>
      <link>https://qklgblog.pages.dev/post/20240119/</link>
      <pubDate>Tue, 19 Dec 2023 21:27:56 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20240119/</guid>
      <description>前言
最近奈飞把埃及，土耳其，尼日利亚，巴基斯坦等低价区的“垃圾客户”给清退了
楼主就是受害者之一，今天闲着无聊，写篇帖子来讨论下我们需要奈飞吗
为啥要清退?有人觉得我给你奈飞送钱，你都不要，很多人是这么想的
楼主订的埃及4K套餐才165 EGP，换算过去才5刀多点，美国的4K套餐讲过多次涨价后要23美金，差了好几倍价格
爆不了金币了，影响赚钱了
流媒体现在涨价很猛，除了奈飞，别家也在涨价，导致看盗版的人数都上涨了好多
奈飞的好处就是随时都能看，不需要下载，这个确实好，这也是流媒体的好处
但是奈飞的麻烦其实也很多
①网速，网速会影响画质，你的买个速度很好的小鸡才能看,具体看官网
https://help.netflix.com/zh-cn/node/306
②解锁，小鸡得解锁才能看，而且中文资源分布在香港台湾新加坡这三个地方，小鸡解锁也是个卖点
这里可以查到奈飞各区的版权和字幕解锁情况
https://unogs.com/
③设备
电视国产的得配合apple tv，fire tv 4K，google tv 4K之类的才能看4K，而且杜比视界和杜比全景声也得设备支持，盒子也得支持才行
pc这边得用edge和奈飞uwp才能看4K,chrome只能1080P，而且设备也得支持，不然得折腾插件啥的，mac上也得safari才能放4K
怎么用edge启用4K双杜比，可以看我以前的帖子
https://www.nodeseek.com/post-21191-1
手机平板安卓的得给奈飞去认证，解锁root也会掉这个
不认证只有540P，认证之后L1才有1080P，hdr，双杜比啥的还得给奈飞另外交钱
④套餐，最贵的套餐才能看，普通只能1080P，当然mjj合租一般都是最贵的
以上四个，却已不可，4K套餐，设备支持，小鸡网速给力加解锁，才能看4K
当然最为下载党，以上都不在，下载的好处就是不需要这么麻烦，下载下来直接看
下载党的话也得分清楚资源的来源
很多剧和电影的资源是蓝光原盘，这些肯定比流媒体的好
你下载的时候上面会写分辨率，还有来源的，比方blue-ray啥的是蓝光，bdrip是转码过的蓝光
wb-dl啥的是在线流媒体上扒下来的，后面有个nf是从奈菲上下载下来的
奈飞的剧基本上资源当天就有了，所以我不准备续费了
奈飞的好处就是打开就能看，折腾起来其实也挺麻烦的
要买套餐，要找车友，要设备支持，还要折腾小鸡解锁啥的
下载的话，我直接看就完事了，就是找资源麻烦点，我也不玩pt，我就看看热门剧我bt都足够用了</description>
      <content:encoded><![CDATA[<p>前言<br>
最近奈飞把埃及，土耳其，尼日利亚，巴基斯坦等低价区的“垃圾客户”给清退了<br>
楼主就是受害者之一，今天闲着无聊，写篇帖子来讨论下我们需要奈飞吗</p>
<p>为啥要清退?有人觉得我给你奈飞送钱，你都不要，很多人是这么想的<br>
楼主订的埃及4K套餐才165 EGP，换算过去才5刀多点，美国的4K套餐讲过多次涨价后要23美金，差了好几倍价格<br>
爆不了金币了，影响赚钱了<br>
流媒体现在涨价很猛，除了奈飞，别家也在涨价，导致看盗版的人数都上涨了好多</p>
<p>奈飞的好处就是随时都能看，不需要下载，这个确实好，这也是流媒体的好处<br>
但是奈飞的麻烦其实也很多<br>
①网速，网速会影响画质，你的买个速度很好的小鸡才能看,具体看官网<br>
<a href="https://help.netflix.com/zh-cn/node/306">https://help.netflix.com/zh-cn/node/306</a><br>
②解锁，小鸡得解锁才能看，而且中文资源分布在香港台湾新加坡这三个地方，小鸡解锁也是个卖点<br>
这里可以查到奈飞各区的版权和字幕解锁情况<br>
<a href="https://unogs.com/">https://unogs.com/</a><br>
③设备<br>
电视国产的得配合apple tv，fire tv 4K，google tv 4K之类的才能看4K，而且杜比视界和杜比全景声也得设备支持，盒子也得支持才行<br>
pc这边得用edge和奈飞uwp才能看4K,chrome只能1080P，而且设备也得支持，不然得折腾插件啥的，mac上也得safari才能放4K<br>
怎么用edge启用4K双杜比，可以看我以前的帖子<br>
<a href="https://www.nodeseek.com/post-21191-1">https://www.nodeseek.com/post-21191-1</a><br>
手机平板安卓的得给奈飞去认证，解锁root也会掉这个<br>
不认证只有540P，认证之后L1才有1080P，hdr，双杜比啥的还得给奈飞另外交钱<br>
④套餐，最贵的套餐才能看，普通只能1080P，当然mjj合租一般都是最贵的</p>
<p>以上四个，却已不可，4K套餐，设备支持，小鸡网速给力加解锁，才能看4K<br>
当然最为下载党，以上都不在，下载的好处就是不需要这么麻烦，下载下来直接看</p>
<p>下载党的话也得分清楚资源的来源<br>
很多剧和电影的资源是蓝光原盘，这些肯定比流媒体的好<br>
你下载的时候上面会写分辨率，还有来源的，比方blue-ray啥的是蓝光，bdrip是转码过的蓝光<br>
wb-dl啥的是在线流媒体上扒下来的，后面有个nf是从奈菲上下载下来的<br>
奈飞的剧基本上资源当天就有了，所以我不准备续费了</p>
<p>奈飞的好处就是打开就能看，折腾起来其实也挺麻烦的<br>
要买套餐，要找车友，要设备支持，还要折腾小鸡解锁啥的<br>
下载的话，我直接看就完事了，就是找资源麻烦点，我也不玩pt，我就看看热门剧我bt都足够用了</p>
]]></content:encoded>
    </item>
    <item>
      <title>阿里云香港测试</title>
      <link>https://qklgblog.pages.dev/post/a-li-yun-xiang-gang-ce-shi/</link>
      <pubDate>Wed, 01 Nov 2023 22:48:10 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/a-li-yun-xiang-gang-ce-shi/</guid>
      <description>[Info] 测试路由 到 上海电信(天翼云) 中 &amp;hellip;
traceroute to 101.227.255.45 (101.227.255.45), 30 hops max, 32 byte packets
1 *
2 *
3 11.16.2.182 1.92 ms AS749 美国, defense.gov
4 47.246.116.153 1.33 ms * 中国, 香港, aliyun.com, 阿里云
5 11.94.177.130 1.48 ms AS749 美国, defense.gov
6 47.246.114.1 2.03 ms * 中国, 香港, aliyun.com, 阿里云
7 61.14.203.13 1.77 ms * 中国, 香港, chinaunicom.com, 联通
8 203.160.84.121 2.22 ms AS10099 中国, 香港, chinaunicom.com, 联通</description>
      <content:encoded><![CDATA[<p>[Info] 测试路由 到 上海电信(天翼云) 中 &hellip;<br>
traceroute to 101.227.255.45 (101.227.255.45), 30 hops max, 32 byte packets<br>
1  *<br>
2  *<br>
3  11.16.2.182  1.92 ms  AS749  美国, defense.gov<br>
4  47.246.116.153  1.33 ms  *  中国, 香港, aliyun.com, 阿里云<br>
5  11.94.177.130  1.48 ms  AS749  美国, defense.gov<br>
6  47.246.114.1  2.03 ms  *  中国, 香港, aliyun.com, 阿里云<br>
7  61.14.203.13  1.77 ms  *  中国, 香港, chinaunicom.com, 联通<br>
8  203.160.84.121  2.22 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
9  202.77.23.29  2.85 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
10  219.158.10.29  8.49 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
11  219.158.103.29  17.54 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
12  *<br>
13  *<br>
14  219.158.21.14  38.49 ms  AS4837  中国, 上海, chinaunicom.com, 联通<br>
15  *<br>
16  202.97.87.149  33.31 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信<br>
17  *<br>
18  *<br>
19  *<br>
20  *<br>
21  *<br>
22  *<br>
23  *<br>
24  *<br>
25  *<br>
26  *<br>
27  *<br>
28  *<br>
29  *<br>
30  *</p>
<p>[Info] 测试路由 到 上海电信(天翼云) 完成 ！<br>
[Info] 测试路由 到 厦门电信CN2 中 &hellip;<br>
traceroute to 117.28.254.129 (117.28.254.129), 30 hops max, 32 byte packets<br>
1  10.130.87.42  0.99 ms  *  局域网<br>
2  *<br>
3  11.16.2.186  1.61 ms  AS749  美国, defense.gov<br>
4  47.246.116.153  1.34 ms  *  中国, 香港, aliyun.com, 阿里云<br>
5  47.246.115.106  18.88 ms  *  中国, 香港, aliyun.com, 阿里云<br>
6  47.246.114.5  2.40 ms  *  中国, 香港, aliyun.com, 阿里云<br>
7  61.14.203.61  2.59 ms  *  中国, 香港, chinaunicom.com, 联通<br>
8  203.160.84.121  3.16 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
9  202.77.23.29  3.44 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
10  219.158.20.93  5.46 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
11  219.158.4.101  13.73 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
12  219.158.3.21  8.07 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
13  219.158.103.174  8.07 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
14  219.158.40.170  8.30 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
15  59.43.140.34  22.01 ms  *  中国, 福建, chinatelecom.com.cn, 电信<br>
16  *<br>
17  *<br>
18  *<br>
19  *<br>
20  117.28.254.129  26.92 ms  AS4809  中国, 福建, 厦门, chinatelecom.com.cn, 电信</p>
<p>[Info] 测试路由 到 厦门电信CN2 完成 ！<br>
[Info] 测试路由 到 浙江杭州联通 中 &hellip;<br>
traceroute to 101.71.241.238 (101.71.241.238), 30 hops max, 32 byte packets<br>
1  *<br>
2  *<br>
3  11.16.2.178  1.49 ms  AS749  美国, defense.gov<br>
4  47.246.116.153  1.38 ms  *  中国, 香港, aliyun.com, 阿里云<br>
5  11.94.177.118  2.05 ms  AS749  美国, defense.gov<br>
6  47.246.113.249  2.21 ms  *  中国, 香港, aliyun.com, 阿里云<br>
7  61.14.203.61  3.05 ms  *  中国, 香港, chinaunicom.com, 联通<br>
8  202.77.18.194  8.23 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
9  202.77.23.25  2.57 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
10  219.158.34.61  13.27 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
11  219.158.4.101  15.57 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
12  219.158.3.9  9.46 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
13  *<br>
14  *<br>
15  *<br>
16  *<br>
17  *<br>
18  *<br>
19  *<br>
20  *<br>
21  *<br>
22  *<br>
23  *<br>
24  *<br>
25  *<br>
26  *<br>
27  *<br>
28  *<br>
29  *<br>
30  *</p>
<p>[Info] 测试路由 到 浙江杭州联通 完成 ！<br>
[Info] 测试路由 到 浙江杭州移动 中 &hellip;<br>
traceroute to 112.17.0.106 (112.17.0.106), 30 hops max, 32 byte packets<br>
1  *<br>
2  *<br>
3  11.16.2.154  2.37 ms  AS749  美国, defense.gov<br>
4  *<br>
5  11.94.177.138  1.51 ms  AS749  美国, defense.gov<br>
6  47.246.113.249  1.81 ms  *  中国, 香港, aliyun.com, 阿里云<br>
7  223.119.62.173  3.32 ms  AS58453  中国, 香港, chinamobile.com, 移动<br>
8  *<br>
9  223.120.3.198  29.53 ms  AS58453  中国, 上海, chinamobile.com, 移动<br>
10  221.183.89.182  32.19 ms  AS9808  中国, 上海, chinamobile.com, 移动<br>
11  221.183.89.69  30.78 ms  AS9808  中国, 上海, chinamobile.com, 移动<br>
12  *<br>
13  *<br>
14  *<br>
15  *<br>
16  *<br>
17  *<br>
18  *<br>
19  *<br>
20  *<br>
21  *<br>
22  *<br>
23  *<br>
24  *<br>
25  *<br>
26  *<br>
27  *<br>
28  *<br>
29  *<br>
30  *</p>
<p>[Info] 测试路由 到 浙江杭州移动 完成 ！<br>
[Info] 测试路由 到 北京教育网 中 &hellip;<br>
traceroute to 202.205.6.30 (202.205.6.30), 30 hops max, 32 byte packets<br>
1  *<br>
2  *<br>
3  11.16.2.150  4.75 ms  AS749  美国, defense.gov<br>
4  11.94.177.110  1.63 ms  AS749  美国, defense.gov<br>
5  11.94.177.138  1.36 ms  AS749  美国, defense.gov<br>
6  47.246.113.249  1.86 ms  *  中国, 香港, aliyun.com, 阿里云<br>
7  61.14.203.61  2.69 ms  *  中国, 香港, chinaunicom.com, 联通<br>
8  202.77.18.194  2.63 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
9  202.77.23.25  2.11 ms  AS10099  中国, 香港, chinaunicom.com, 联通<br>
10  219.158.33.37  7.87 ms  AS4837  中国, 香港, chinaunicom.com, 联通<br>
11  219.158.96.210  13.87 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>
12  *<br>
13  *<br>
14  219.158.120.18  47.09 ms  AS4837  中国, 上海, chinaunicom.com, 联通<br>
15  219.158.44.86  37.93 ms  AS4837  中国, 上海, chinaunicom.com, 联通<br>
16  101.4.118.54  37.43 ms  AS4538  中国, 上海, edu.cn, 教育网<br>
17  101.4.117.30  60.43 ms  AS4538  中国, 北京, edu.cn, 教育网<br>
18  101.4.116.118  72.62 ms  AS4538  中国, 北京, edu.cn, 教育网<br>
19  101.4.112.69  51.49 ms  AS4538  中国, 北京, edu.cn, 教育网<br>
20  219.224.102.233  53.57 ms  AS4538  中国, 北京, edu.cn, 教育网<br>
21  *<br>
22  *<br>
23  *<br>
24  *<br>
25  *<br>
26  *<br>
27  *<br>
28  *<br>
29  *<br>
30  *</p>
]]></content:encoded>
    </item>
    <item>
      <title>将我的博客部署到ipfs上</title>
      <link>https://qklgblog.pages.dev/post/20231029/</link>
      <pubDate>Sun, 29 Oct 2023 03:22:55 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231029/</guid>
      <description>试着将签名的博客部署到ipfs上
如果你的浏览器是支持ipfs的brave浏览器的话，可以直接点下面的跳转
ipfs://QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt
如果不是的话，可以使用公共网关
cf的
https://cloudflare-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/
https://cf-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/
web3.storage的网关
https://w3s.link/ipfs/QmVKLMAuGtbaK8QXneedHzdXynuea7x5gnnyYrnxwo2kkP/
当然，也可以用别的网关
下面网址，可以检测下各个网关的速度和连通性
https://ipfs.github.io/public-gateway-checker/
我用的是fleek https://fleek.co/来部署的
类似的平台还有这些，都可以试下
https://dashboard.4everland.org/login
https://app.pinata.cloud/pinmanager
部署教程十分简单，本地用jekyll，hexo，hugo，gridea等生成静态博客，同步到github仓库
然后用上面的平台，直接用github仓库部署就可以了
你有mac的话也可以试下隔壁v2ex站长做的planet
https://www.planetable.xyz/
有条件的话还是自建网关比较靠谱，ipfs并不保证数据的丢失</description>
      <content:encoded><![CDATA[<p>试着将签名的博客部署到ipfs上</p>
<p>如果你的浏览器是支持ipfs的brave浏览器的话，可以直接点下面的跳转<br>
<a href="ipfs://QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt">ipfs://QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt</a></p>
<p>如果不是的话，可以使用公共网关<br>
cf的<br>
<a href="https://cloudflare-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/">https://cloudflare-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/</a></p>
<p><a href="https://cf-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/">https://cf-ipfs.com/ipfs/QmVSEaN34kaZpf8CbpkWyLmTobn4gr7JQe9JZghL4AsDRt/</a></p>
<p>web3.storage的网关<br>
<a href="https://w3s.link/ipfs/QmVKLMAuGtbaK8QXneedHzdXynuea7x5gnnyYrnxwo2kkP/">https://w3s.link/ipfs/QmVKLMAuGtbaK8QXneedHzdXynuea7x5gnnyYrnxwo2kkP/</a></p>
<p>当然，也可以用别的网关<br>
下面网址，可以检测下各个网关的速度和连通性<br>
<a href="https://ipfs.github.io/public-gateway-checker/">https://ipfs.github.io/public-gateway-checker/</a></p>
<p>我用的是fleek <a href="https://fleek.co/">https://fleek.co/</a>来部署的<br>
类似的平台还有这些，都可以试下<br>
<a href="https://dashboard.4everland.org/login">https://dashboard.4everland.org/login</a><br>
<a href="https://app.pinata.cloud/pinmanager">https://app.pinata.cloud/pinmanager</a></p>
<p>部署教程十分简单，本地用jekyll，hexo，hugo，gridea等生成静态博客，同步到github仓库<br>
然后用上面的平台，直接用github仓库部署就可以了</p>
<p>你有mac的话也可以试下隔壁v2ex站长做的planet<br>
<a href="https://www.planetable.xyz/">https://www.planetable.xyz/</a></p>
<p>有条件的话还是自建网关比较靠谱，ipfs并不保证数据的丢失</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享几个可以看全球海缆的网站</title>
      <link>https://qklgblog.pages.dev/post/20231022/</link>
      <pubDate>Sun, 22 Oct 2023 12:36:44 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231022/</guid>
      <description>https://www.submarinecablemap.com/
https://www.infrapedia.com/
https://submarine-cable-map-2023.telegeography.com/</description>
      <content:encoded><![CDATA[<p><a href="https://www.submarinecablemap.com/">https://www.submarinecablemap.com/</a><br>
<a href="https://www.infrapedia.com/">https://www.infrapedia.com/</a><br>
<a href="https://submarine-cable-map-2023.telegeography.com/">https://submarine-cable-map-2023.telegeography.com/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>unraid装哪吒探针</title>
      <link>https://qklgblog.pages.dev/post/20231019/</link>
      <pubDate>Thu, 19 Oct 2023 23:11:58 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231019/</guid>
      <description>1下载哪吒探针的agent
选择你的客户端下载，unraid的话一般都是linux-amd64
https://github.com/nezhahq/agent/releases
解压缩，将nezha-agent，如果你开smb的话直接用文件管理传上去，或者winscp或者别的什么传到你的nas的任意文件夹下
我是开的smb，我随手放在第二块硬盘下,路径是/mnt/disk2/download/temp，这个路径随便
2unraid上应用搜索	User Scripts安装，这个可以执行定时的bash脚本，有点类似于systemctl
插件，这个进去
点击左下角的add new script
名字随便取一个，点击ok保存
用winscp，连接unraid，打开
/boot/config/plugins/user.scripts/scripts/tanzhen 这个路径
双击script
编辑脚本
#!/bin/bash cd /mnt/disk2/download/temp chmod +x nezha-agent ./nezha-agent -s 没套cdn的域名:面板rpc端口 -p agnet key cd 后面的/mnt/disk2/download/temp可以换成上面你自己nezha-agent的文件路径
第四行的参数除了这些还可以加，可以参考这个
一般这些就足够了
然后保存
回到unraid的面板上
点击run in backgronud 在后台运行
右边设置成at first array start only开机自启
点下apply应用，done退出就完事了
参考教程
哪吒文档中在群晖中安装
https://nezha.wiki/guide/agent.html#%E5%9C%A8-%E7%BE%A4%E6%99%96dsm-%E4%B8%AD%E5%AE%89%E8%A3%85-agent</description>
      <content:encoded><![CDATA[<p>1下载哪吒探针的agent<br>
选择你的客户端下载，unraid的话一般都是linux-amd64<br>
<a href="https://github.com/nezhahq/agent/releases">https://github.com/nezhahq/agent/releases</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212319032.png" alt=""  />
</p>
<p>解压缩，将nezha-agent，如果你开smb的话直接用文件管理传上去，或者winscp或者别的什么传到你的nas的任意文件夹下<br>
我是开的smb，我随手放在第二块硬盘下,路径是/mnt/disk2/download/temp，这个路径随便</p>
<p>2unraid上应用搜索	User Scripts安装，这个可以执行定时的bash脚本，有点类似于systemctl<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212319340.png" alt=""  />
</p>
<p>插件，这个进去<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212322032.png" alt=""  />
</p>
<p>点击左下角的add new script<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212322290.png" alt=""  />
<br>
名字随便取一个，点击ok保存<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212323164.png" alt=""  />
<br>
用winscp，连接unraid，打开</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/boot/config/plugins/user.scripts/scripts/tanzhen
</span></span></code></pre></div><p>这个路径</p>
<p>双击script<br>
编辑脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">cd</span> /mnt/disk2/download/temp
</span></span><span class="line"><span class="cl">chmod +x nezha-agent
</span></span><span class="line"><span class="cl">./nezha-agent -s 没套cdn的域名:面板rpc端口 -p agnet key
</span></span></code></pre></div><p>cd 后面的/mnt/disk2/download/temp可以换成上面你自己nezha-agent的文件路径</p>
<p>第四行的参数除了这些还可以加，可以参考这个<br>
一般这些就足够了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241237565.png" alt=""  />
</p>
<p>然后保存<br>
回到unraid的面板上<br>
点击run in backgronud 在后台运行<br>
右边设置成at first array start only开机自启<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241232422.png" alt=""  />
<br>
点下apply应用，done退出就完事了</p>
<p>参考教程<br>
哪吒文档中在群晖中安装<br>
<a href="https://nezha.wiki/guide/agent.html#%E5%9C%A8-%E7%BE%A4%E6%99%96dsm-%E4%B8%AD%E5%AE%89%E8%A3%85-agent">https://nezha.wiki/guide/agent.html#%E5%9C%A8-%E7%BE%A4%E6%99%96dsm-%E4%B8%AD%E5%AE%89%E8%A3%85-agent</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>cc新ip，来波测试</title>
      <link>https://qklgblog.pages.dev/post/20231014/</link>
      <pubDate>Sat, 14 Oct 2023 23:26:49 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231014/</guid>
      <description>cc新ip，来波测试
cc的8.79，性能什么的没必要测了，就那样，ipv6让我关了，不用管
204.15换的148.135的ip
怎么启用新ip，可以看这个帖子https://www.nodeseek.com/post-28303-1，
我直接重新d了个
d的时候ip加进去，面板有的
网关是把ip的d段改成1或者129，我第一次d的时候用1直接失联了，后面缓存129就好了
子网掩码的话和原来一样
1流媒体解锁
2三网去程
电信
联通
移动
3三网回程
电信
联通
移动
现在八点多晚高峰三网多线程测速</description>
      <content:encoded><![CDATA[<p>cc新ip，来波测试<br>
cc的8.79，性能什么的没必要测了，就那样，ipv6让我关了，不用管<br>
204.15换的148.135的ip<br>
怎么启用新ip，可以看这个帖子<a href="https://www.nodeseek.com/post-28303-1">https://www.nodeseek.com/post-28303-1</a>，<br>
我直接重新d了个<br>
d的时候ip加进去，面板有的<br>
网关是把ip的d段改成1或者129，我第一次d的时候用1直接失联了，后面缓存129就好了<br>
子网掩码的话和原来一样<br>
1流媒体解锁<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212327033.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212327364.png" alt=""  />
<br>
2三网去程<br>
电信<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328254.png" alt=""  />
<br>
联通<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328461.png" alt=""  />
<br>
移动<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328697.png" alt=""  />
<br>
3三网回程<br>
电信<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328509.png" alt=""  />
<br>
联通<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328710.png" alt=""  />
<br>
移动<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212328557.png" alt=""  />
</p>
<p>现在八点多晚高峰三网多线程测速<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212329499.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>推荐下我正在用的docker</title>
      <link>https://qklgblog.pages.dev/post/20231011/</link>
      <pubDate>Wed, 11 Oct 2023 23:29:46 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231011/</guid>
      <description>我目前用的这几个，推荐给各位mjj
还有没有好玩的，推荐下
1 qbittorrnet
我主要是配合autobangumi来下bt的
https://hub.docker.com/r/linuxserver/qbittorrent
2 qbittorrnet-bot
作者githubhttps://github.com/zeroone2numeral2/qbittorrent-bot
这个大佬的博客上看到的https://syq.pub/archives/138/,
配合tg bot控制qbittorrnet，真的挺好用的
3 aria2
我主要是配合油猴脚本和alist下网盘里东西的
https://hub.docker.com/r/p3terx/aria2-pro
4 aria2 bot
用tg bot来控制aria2，aria2群内看到的
https://t.me/Aria2c/111793
真的挺好用的
5 emby
拿来看片的
https://hub.docker.com/r/emby/embyserver
6 nastool
第三方的nastool，我主要下完片之后拿来刮削的
https://hub.docker.com/r/hsuyelin/nas-tools
github链接https://github.com/hsuyelin/nas-tools
7 auto_bangumi
配合qbittorrnet自动下番剧用的
https://hub.docker.com/r/estrellaxd/auto_bangumi
github链接https://github.com/EstrellaXD/Auto_Bangumi
8 chatgpt next
本地部署chatgpt，真的挺好用的
https://hub.docker.com/r/yidadaa/chatgpt-next-web/tags
github链接https://github.com/Yidadaa/ChatGPT-Next-Web
9 uptime kuma
拿来ping自己的小鸡，或者别的啥的，挺好用的
https://hub.docker.com/r/louislam/uptime-kuma
github链接https://github.com/louislam/uptime-kuma
10 homarr
主页，我拿来当导航页用的
https://github.com/ajnart/homarr
教程可以看下这个https://www.bilibili.com/video/BV1jh4y1X7fZ/
这个哥们还整了一堆图标，挺好用的
https://github.com/xushier/HD-Icons
我的完全体
这个可以配合dash dot看机子状况</description>
      <content:encoded><![CDATA[<p>我目前用的这几个，推荐给各位mjj<br>
还有没有好玩的，推荐下<br>
1 qbittorrnet<br>
我主要是配合autobangumi来下bt的<br>
<a href="https://hub.docker.com/r/linuxserver/qbittorrent">https://hub.docker.com/r/linuxserver/qbittorrent</a></p>
<p>2 qbittorrnet-bot<br>
作者github<a href="https://github.com/zeroone2numeral2/qbittorrent-bot">https://github.com/zeroone2numeral2/qbittorrent-bot</a><br>
这个大佬的博客上看到的<a href="https://syq.pub/archives/138/">https://syq.pub/archives/138/</a>,<br>
配合tg bot控制qbittorrnet，真的挺好用的</p>
<p>3 aria2<br>
我主要是配合油猴脚本和alist下网盘里东西的<br>
<a href="https://hub.docker.com/r/p3terx/aria2-pro">https://hub.docker.com/r/p3terx/aria2-pro</a></p>
<p>4 aria2 bot<br>
用tg bot来控制aria2，aria2群内看到的<br>
<a href="https://t.me/Aria2c/111793">https://t.me/Aria2c/111793</a><br>
真的挺好用的</p>
<p>5 emby<br>
拿来看片的<br>
<a href="https://hub.docker.com/r/emby/embyserver">https://hub.docker.com/r/emby/embyserver</a></p>
<p>6 nastool<br>
第三方的nastool，我主要下完片之后拿来刮削的<br>
<a href="https://hub.docker.com/r/hsuyelin/nas-tools">https://hub.docker.com/r/hsuyelin/nas-tools</a><br>
github链接<a href="https://github.com/hsuyelin/nas-tools">https://github.com/hsuyelin/nas-tools</a></p>
<p>7 auto_bangumi<br>
配合qbittorrnet自动下番剧用的<br>
<a href="https://hub.docker.com/r/estrellaxd/auto_bangumi">https://hub.docker.com/r/estrellaxd/auto_bangumi</a><br>
github链接<a href="https://github.com/EstrellaXD/Auto_Bangumi">https://github.com/EstrellaXD/Auto_Bangumi</a></p>
<p>8 chatgpt next<br>
本地部署chatgpt，真的挺好用的<br>
<a href="https://hub.docker.com/r/yidadaa/chatgpt-next-web/tags">https://hub.docker.com/r/yidadaa/chatgpt-next-web/tags</a><br>
github链接<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">https://github.com/Yidadaa/ChatGPT-Next-Web</a></p>
<p>9 uptime kuma<br>
拿来ping自己的小鸡，或者别的啥的，挺好用的<br>
<a href="https://hub.docker.com/r/louislam/uptime-kuma">https://hub.docker.com/r/louislam/uptime-kuma</a><br>
github链接<a href="https://github.com/louislam/uptime-kuma">https://github.com/louislam/uptime-kuma</a></p>
<p>10 homarr<br>
主页，我拿来当导航页用的<br>
<a href="https://github.com/ajnart/homarr">https://github.com/ajnart/homarr</a><br>
教程可以看下这个<a href="https://www.bilibili.com/video/BV1jh4y1X7fZ/">https://www.bilibili.com/video/BV1jh4y1X7fZ/</a><br>
这个哥们还整了一堆图标，挺好用的<br>
<a href="https://github.com/xushier/HD-Icons">https://github.com/xushier/HD-Icons</a><br>
我的完全体<br>
<img loading="lazy" src="https://s3.qklg.net/img/202402140525807.png" alt=""  />
</p>
<p>这个可以配合dash dot看机子状况</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享个ping主机，通知telegram bot的脚本</title>
      <link>https://qklgblog.pages.dev/post/20231010/</link>
      <pubDate>Tue, 10 Oct 2023 23:30:38 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231010/</guid>
      <description>家里的黑群晖老是宕机，每次宕机都没意识到，
所以用chatgpt写了个小东西，这玩意别说还真挺好用的
直接ping主机，每隔15秒ping一次，ping不通就通知tg的bot
确保小鸡安装了python，还有subprocess和requests，time模块
本着留着也没啥用，发出来也许有mjj用得上呢
如果想功能多的话试下uptime-kuma或者直接挂探针
脚本如下
bot_token和chat id替换成自己的
hostname的192.168.1.90换成自己的ip
群晖nas宕机了，自己换成别的
time的15秒，自己换成自己需要的
import subprocess import requests import time def send_notification(message): # 替换为你的Telegram Bot的API令牌和聊天ID bot_token = &amp;#39;&amp;#39; chat_id = &amp;#39;&amp;#39; # 发送通知到Telegram url = f&amp;#39;https://api.telegram.org/bot{bot_token}/sendMessage&amp;#39; params = {&amp;#39;chat_id&amp;#39;: chat_id, &amp;#39;text&amp;#39;: message} response = requests.get(url, params=params) if response.status_code != 200: print(&amp;#39;无法发送通知到Telegram&amp;#39;) def check_host(): hostname = &amp;#39;192.168.1.90&amp;#39; while True: result = subprocess.run([&amp;#39;ping&amp;#39;, &amp;#39;-c&amp;#39;, &amp;#39;1&amp;#39;, hostname], stdout=subprocess.DEVNULL) if result.returncode != 0: send_notification(&amp;#39;群晖nas宕机了&amp;#39;) time.sleep(15) # 每隔15秒执行一次ping check_host() 命名为ping_notify.</description>
      <content:encoded><![CDATA[<p>家里的黑群晖老是宕机，每次宕机都没意识到，<br>
所以用chatgpt写了个小东西，这玩意别说还真挺好用的<br>
直接ping主机，每隔15秒ping一次，ping不通就通知tg的bot<br>
确保小鸡安装了python，还有subprocess和requests，time模块<br>
本着留着也没啥用，发出来也许有mjj用得上呢<br>
如果想功能多的话试下uptime-kuma或者直接挂探针<br>
脚本如下<br>
bot_token和chat id替换成自己的<br>
hostname的192.168.1.90换成自己的ip<br>
群晖nas宕机了，自己换成别的<br>
time的15秒，自己换成自己需要的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">import subprocess
</span></span><span class="line"><span class="cl">import requests
</span></span><span class="line"><span class="cl">import time
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">def send_notification(message):
</span></span><span class="line"><span class="cl">    # 替换为你的Telegram Bot的API令牌和聊天ID
</span></span><span class="line"><span class="cl">    bot_token = &#39;&#39;
</span></span><span class="line"><span class="cl">    chat_id = &#39;&#39;
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    # 发送通知到Telegram
</span></span><span class="line"><span class="cl">    url = f&#39;https://api.telegram.org/bot{bot_token}/sendMessage&#39;
</span></span><span class="line"><span class="cl">    params = {&#39;chat_id&#39;: chat_id, &#39;text&#39;: message}
</span></span><span class="line"><span class="cl">    response = requests.get(url, params=params)
</span></span><span class="line"><span class="cl">    if response.status_code != 200:
</span></span><span class="line"><span class="cl">        print(&#39;无法发送通知到Telegram&#39;)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">def check_host():
</span></span><span class="line"><span class="cl">    hostname = &#39;192.168.1.90&#39;
</span></span><span class="line"><span class="cl">    while True:
</span></span><span class="line"><span class="cl">        result = subprocess.run([&#39;ping&#39;, &#39;-c&#39;, &#39;1&#39;, hostname], stdout=subprocess.DEVNULL)
</span></span><span class="line"><span class="cl">        if result.returncode != 0:
</span></span><span class="line"><span class="cl">            send_notification(&#39;群晖nas宕机了&#39;)
</span></span><span class="line"><span class="cl">        time.sleep(15)  # 每隔15秒执行一次ping
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">check_host()
</span></span></code></pre></div><p>命名为ping_notify.py<br>
随便往小鸡的etc里一堆，设置下后台运行就可以了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">python3 /etc/ping_notify.py &amp;
</span></span></code></pre></div><p>效果如图<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212330311.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>newbing还挺好用的</title>
      <link>https://qklgblog.pages.dev/post/20231005/</link>
      <pubDate>Thu, 05 Oct 2023 23:31:49 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20231005/</guid>
      <description>最近更新
支持gpt 4和图片识别了
玩了下还挺好玩的</description>
      <content:encoded><![CDATA[<p>最近更新<br>
支持gpt 4和图片识别了<br>
玩了下还挺好玩的<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212332314.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212332472.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212332286.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>infuse替代品VidHub的ios版已上线</title>
      <link>https://qklgblog.pages.dev/post/20230928/</link>
      <pubDate>Thu, 28 Sep 2023 12:40:06 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230928/</guid>
      <description>https://apps.apple.com/cn/app/id1659622164
ios版上线了，mac之前就有了，apple tv暂时还没有
免费，infuse要订阅，而且支持阿里云盘，
支持，本地视频，NAS 视频，SMB、WebDAV 协议
Dropbox，OneDrive，Google Drive，百度网盘。阿里云盘等云盘
支持emby
ios的可以试下，和infuse一样，客户端刮削的，我是拿来看emby的话，体验还不错，免费的要啥自行车</description>
      <content:encoded><![CDATA[<p><a href="https://apps.apple.com/cn/app/id1659622164">https://apps.apple.com/cn/app/id1659622164</a><br>
ios版上线了，mac之前就有了，apple tv暂时还没有<br>
免费，infuse要订阅，而且支持阿里云盘，<br>
支持，本地视频，NAS 视频，SMB、WebDAV 协议<br>
Dropbox，OneDrive，Google Drive，百度网盘。阿里云盘等云盘<br>
支持emby</p>
<p>ios的可以试下，和infuse一样，客户端刮削的，我是拿来看emby的话，体验还不错，免费的要啥自行车</p>
]]></content:encoded>
    </item>
    <item>
      <title>内网穿透还是cf tunnel好用</title>
      <link>https://qklgblog.pages.dev/post/20230927/</link>
      <pubDate>Wed, 27 Sep 2023 23:33:18 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230927/</guid>
      <description>1 frp，结果宿迁nat老板骚操作，搞得俺不用了
2 zerotier设置太难搞了，还要搞客户端，俺就外面拿来看片用，用不着
3 ipv6 ddns，单位没ipv6，难搞
4花生壳，要实名，带宽还太烂了
5腾讯云，带宽太低
最后还是cf tunnel，国内pop全是美西的，饶了一个太平洋回来，
速度是能上去，测了下速看4K都没问，就是延迟有点爆炸,而且不要钱，真的香，cf良心企业</description>
      <content:encoded><![CDATA[<p>1 frp，结果宿迁nat老板骚操作，搞得俺不用了<br>
2 zerotier设置太难搞了，还要搞客户端，俺就外面拿来看片用，用不着<br>
3 ipv6 ddns，单位没ipv6，难搞<br>
4花生壳，要实名，带宽还太烂了<br>
5腾讯云，带宽太低</p>
<p>最后还是cf tunnel，国内pop全是美西的，饶了一个太平洋回来，<br>
速度是能上去，测了下速看4K都没问，就是延迟有点爆炸,而且不要钱，真的香，cf良心企业<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212333967.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>江苏移动自己换光猫记录下</title>
      <link>https://qklgblog.pages.dev/post/20230926/</link>
      <pubDate>Tue, 26 Sep 2023 23:35:50 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230926/</guid>
      <description>前提准备
①vlan id，这个原来光猫里面有，vid后面的数字就是vlan id
②宽带账户和密码，账户时手机号，密码直接打10086重置下就可以了，6位数字短信发给你的
③sn码，这个光猫后面有
江苏移动的认证方式是password认证，密码是手机号后面10位数字，sn直接填你原来光猫的sn码就可以了，设置好点应用就可以了
我家是光猫拨号的，路由器拨号老是折腾，这猫是华为界面的hs8145x6，10Gpon的，你买的时候闲鱼上说清楚
按照下面图上填好就ok了
二级路由要ddns的话，光猫要改配置文件关闭防火墙的，看chinadsl的这个帖子的18楼
把防火墙的配置里全给关了
新人求助 8145V的IPv6防火墙问题
https://www.chinadsl.net/thread-166819-1-1.html
(出处: 宽带技术网)
openwrt路由器怎么设置的话看恩山上这篇
https://www.right.com.cn/FORUM/thread-8247221-1-1.html</description>
      <content:encoded><![CDATA[<p>前提准备<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212336783.png" alt=""  />
<br>
①vlan id，这个原来光猫里面有，vid后面的数字就是vlan id<br>
②宽带账户和密码，账户时手机号，密码直接打10086重置下就可以了，6位数字短信发给你的<br>
③sn码，这个光猫后面有</p>
<p>江苏移动的认证方式是password认证，密码是手机号后面10位数字，sn直接填你原来光猫的sn码就可以了，设置好点应用就可以了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212336347.png" alt=""  />
<br>
我家是光猫拨号的，路由器拨号老是折腾，这猫是华为界面的hs8145x6，10Gpon的，你买的时候闲鱼上说清楚<br>
按照下面图上填好就ok了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212336913.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212336529.png" alt=""  />
<br>
二级路由要ddns的话，光猫要改配置文件关闭防火墙的，看chinadsl的这个帖子的18楼<br>
把防火墙的配置里全给关了<br>
新人求助 8145V的IPv6防火墙问题<br>
<a href="https://www.chinadsl.net/thread-166819-1-1.html">https://www.chinadsl.net/thread-166819-1-1.html</a><br>
(出处: 宽带技术网)</p>
<p>openwrt路由器怎么设置的话看恩山上这篇<br>
<a href="https://www.right.com.cn/FORUM/thread-8247221-1-1.html">https://www.right.com.cn/FORUM/thread-8247221-1-1.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>国际出口18Tbps</title>
      <link>https://qklgblog.pages.dev/post/20230913/</link>
      <pubDate>Wed, 13 Sep 2023 23:38:16 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230913/</guid>
      <description>之前两年没公布
今年公布了，还把20和21年的补上去了
https://cnnic.net.cn/NMediaFile/2023/0908/MAIN1694151810549M3LV0UWOAV.pdf
我顺带补充下ipv6的国际出口带宽
来源
https://www.china-ipv6.cn/#/networkReady/networkReadySimple
简单做了个表
顺带提下，国际出口，只有5%左右是ipv6</description>
      <content:encoded><![CDATA[<p>之前两年没公布<br>
今年公布了，还把20和21年的补上去了<br>
<a href="https://cnnic.net.cn/NMediaFile/2023/0908/MAIN1694151810549M3LV0UWOAV.pdf">https://cnnic.net.cn/NMediaFile/2023/0908/MAIN1694151810549M3LV0UWOAV.pdf</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202310212338273.png" alt=""  />
</p>
<p>我顺带补充下ipv6的国际出口带宽<br>
来源<br>
<a href="https://www.china-ipv6.cn/#/networkReady/networkReadySimple">https://www.china-ipv6.cn/#/networkReady/networkReadySimple</a></p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202310212338641.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212339397.png" alt=""  />
</p>
<p>简单做了个表<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212338982.png" alt=""  />
</p>
<p>顺带提下，国际出口，只有5%左右是ipv6<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212339838.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>搬瓦工vps的一点小建议</title>
      <link>https://qklgblog.pages.dev/post/20230912/</link>
      <pubDate>Tue, 12 Sep 2023 23:40:20 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230912/</guid>
      <description>论坛现在全是瓦工aff，
我来说下瓦工有啥，该怎么买
这是the plan的切机房的图，我把优化线路都表了下
去掉普通线路和日本和香港的贵族gia，还有垃圾gt的话别买了
瓦工现在其他的优化线路，我来捋一遍
xtom下游的
香港cmi
日本软银
澳洲9929
荷兰9929
还有新上的加拿大的gia，上游也是xtom
dc6和dc9的洛杉矶gia
爬墙的话，怎么选
联通上日本软银，移动上香港的cmi，电信的话dc6和9的gia
其实联通的话ntt，iij，软银，这三个你真用不出来什么区别的，反正就那速度上去了，也没啥区别
你油管三十万和三四万，没区别，都能看4K,何况很多人屏幕还是1080P
爬墙的话电信还是高贵的gia吧，联通的话随便是个机都能起飞，移动拿cf救下，是个机也能起飞的，
胖子10刀的iij才是mjj的快乐老家
不急的话等黑五，五折云的小秘书估计又得出来了，你只爬墙的话真不如直接买小秘书，虽然小秘书口碑不好，3年和5年容易当韭菜，但是便宜啊
3年45欧，mjj还是香喷喷
46刀的怎么评价
1核512M内存10G硬盘500G流量
外面写着软银和dc6，但是进去还有dc9和荷兰9929，和原来的传家宝一样
流量小的可以上，500G你用不完的话可以上，差个香港cmi，不然真的是神机了
荷兰9929可以用来反代你德国hz，法国ovh的杜甫，美西的dc6和9可以电信爬墙，也可以反代你美西的杜甫，不过流量就500G
软银可以联通用来爬墙，唯一的缺少的就是个香港cmi了
你要流量大的话，性价比不如the plan，去收一个，或者等一等有没有the plan v3
这款后面应该是可以溢价的
记得准备出的话一定要准备个新邮箱，以后带邮箱出
69刀那个只有软银的，和89刀的FREEDOM PLAN
那几个套餐别买了，不如the plan</description>
      <content:encoded><![CDATA[<p>论坛现在全是瓦工aff，<br>
我来说下瓦工有啥，该怎么买</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202310212340390.png" alt=""  />
<br>
这是the plan的切机房的图，我把优化线路都表了下</p>
<p>去掉普通线路和日本和香港的贵族gia，还有垃圾gt的话别买了</p>
<p>瓦工现在其他的优化线路，我来捋一遍</p>
<p>xtom下游的<br>
香港cmi<br>
日本软银<br>
澳洲9929<br>
荷兰9929<br>
还有新上的加拿大的gia，上游也是xtom</p>
<p>dc6和dc9的洛杉矶gia</p>
<p>爬墙的话，怎么选<br>
联通上日本软银，移动上香港的cmi，电信的话dc6和9的gia<br>
其实联通的话ntt，iij，软银，这三个你真用不出来什么区别的，反正就那速度上去了，也没啥区别<br>
你油管三十万和三四万，没区别，都能看4K,何况很多人屏幕还是1080P<br>
爬墙的话电信还是高贵的gia吧，联通的话随便是个机都能起飞，移动拿cf救下，是个机也能起飞的，<br>
胖子10刀的iij才是mjj的快乐老家</p>
<p>不急的话等黑五，五折云的小秘书估计又得出来了，你只爬墙的话真不如直接买小秘书，虽然小秘书口碑不好，3年和5年容易当韭菜，但是便宜啊<br>
3年45欧，mjj还是香喷喷</p>
<p>46刀的怎么评价<br>
1核512M内存10G硬盘500G流量<br>
外面写着软银和dc6，但是进去还有dc9和荷兰9929，和原来的传家宝一样<br>
流量小的可以上，500G你用不完的话可以上，差个香港cmi，不然真的是神机了<br>
荷兰9929可以用来反代你德国hz，法国ovh的杜甫，美西的dc6和9可以电信爬墙，也可以反代你美西的杜甫，不过流量就500G<br>
软银可以联通用来爬墙，唯一的缺少的就是个香港cmi了<br>
你要流量大的话，性价比不如the plan，去收一个，或者等一等有没有the plan v3<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212340952.png" alt=""  />
</p>
<p>这款后面应该是可以溢价的<br>
记得准备出的话一定要准备个新邮箱，以后带邮箱出</p>
<p>69刀那个只有软银的，和89刀的FREEDOM PLAN<br>
那几个套餐别买了，不如the plan</p>
]]></content:encoded>
    </item>
    <item>
      <title>ios,安卓和win跑流媒体解锁检测脚本</title>
      <link>https://qklgblog.pages.dev/post/20230910/</link>
      <pubDate>Sun, 10 Sep 2023 23:43:32 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230910/</guid>
      <description>本文使用脚本
github链接:https://github.com/lmc999/RegionRestrictionCheck
脚本
bash &amp;lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh) 如果github的raw无法访问，可以采用下面jsdelivr加速的
bash &amp;lt;(curl -L -s https://testingcf.jsdelivr.net/gh/lmc999/RegionRestrictionCheck@main/check.sh) 这个脚本支持：CentOS 6+, Ubuntu 14.04+, Debian 8+, MacOS, Android with Termux
linux直接运行就可以了，mac的话本人没有
android 下载temux终端
官网https://termux.dev/en/
github下载链接:https://github.com/termux/termux-app/releases
不要从google play下，google play的已经不更新了
然后复制粘贴运行脚本就好
首次运行，需要安装python，需要等待一段时间，大概几分钟吧
安装完之后点击你所需的地区，我代理是hytron香港的，选择2,然后回车就行了，结果就会出来了
windows 安装ubuntu子系统
应用商店搜ubuntu，我喜欢20.04，我直接装的20.04，
第一次登录需要设置
自己设置下用户名和密码，用户名叫啥都行，记得linux输入密码是不显示的
然后输入sudo -i，切换到root，记得输入密码
接着直接复制粘贴脚本运行就可以了
ios ios可以直接用quan x，stash，loon，surge等检测，甚至可以执行脚本来自动切换，这各自己搜下，网上有教程
参考原作者github上的，我把他写的稍微详细了点
https://github.com/lmc999/RegionRestrictionCheck/wiki/iOS%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%B9%E6%B3%95
1下载ish
https://apps.apple.com/au/app/ish-shell/id1436902243
2下载alpine linux的mini root filesystem到文件 app
地址:https://dl-cdn.alpinelinux.org/alpine/v3.13/releases/x86/alpine-minirootfs-3.13.6-x86.tar.gz
打开上面链接，点击更多-储存到文件
3打开ish app，点击右小角的设置
点filesystems
点右上角import导入
选择第二部下载的tar.gz包
然后不重启的话，选择Boot From This Filesystem
4安装依赖
重启完进入ish，点右小角剪贴输入下面命令安装依赖
apk add curl bash gawk python3 5运行脚本</description>
      <content:encoded><![CDATA[<p>本文使用脚本<br>
github链接:<a href="https://github.com/lmc999/RegionRestrictionCheck">https://github.com/lmc999/RegionRestrictionCheck</a><br>
脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)
</span></span></code></pre></div><p>如果github的raw无法访问，可以采用下面jsdelivr加速的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -L -s https://testingcf.jsdelivr.net/gh/lmc999/RegionRestrictionCheck@main/check.sh)
</span></span></code></pre></div><p>这个脚本支持：CentOS 6+, Ubuntu 14.04+, Debian 8+, MacOS, Android with Termux</p>
<p>linux直接运行就可以了，mac的话本人没有</p>
<h1 id="android">android</h1>
<p>下载temux终端<br>
官网<a href="https://termux.dev/en/">https://termux.dev/en/</a><br>
github下载链接:<a href="https://github.com/termux/termux-app/releases">https://github.com/termux/termux-app/releases</a><br>
不要从google play下，google play的已经不更新了</p>
<p>然后复制粘贴运行脚本就好<br>
首次运行，需要安装python，需要等待一段时间，大概几分钟吧<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212344255.png" alt=""  />
<br>
安装完之后点击你所需的地区，我代理是hytron香港的，选择2,然后回车就行了，结果就会出来了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212344162.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212344835.png" alt=""  />
</p>
<h1 id="windows">windows</h1>
<p>安装ubuntu子系统<br>
应用商店搜ubuntu，我喜欢20.04，我直接装的20.04，<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212344602.png" alt=""  />
<br>
第一次登录需要设置<br>
自己设置下用户名和密码，用户名叫啥都行，记得linux输入密码是不显示的<br>
然后输入sudo -i，切换到root，记得输入密码</p>
<p>接着直接复制粘贴脚本运行就可以了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345519.png" alt=""  />
</p>
<h1 id="ios">ios</h1>
<p>ios可以直接用quan x，stash，loon，surge等检测，甚至可以执行脚本来自动切换，这各自己搜下，网上有教程</p>
<p>参考原作者github上的，我把他写的稍微详细了点<br>
<a href="https://github.com/lmc999/RegionRestrictionCheck/wiki/iOS%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%B9%E6%B3%95">https://github.com/lmc999/RegionRestrictionCheck/wiki/iOS%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%B9%E6%B3%95</a><br>
1下载ish<br>
<a href="https://apps.apple.com/au/app/ish-shell/id1436902243">https://apps.apple.com/au/app/ish-shell/id1436902243</a></p>
<p>2下载alpine linux的mini root filesystem到文件 app<br>
地址:<a href="https://dl-cdn.alpinelinux.org/alpine/v3.13/releases/x86/alpine-minirootfs-3.13.6-x86.tar.gz">https://dl-cdn.alpinelinux.org/alpine/v3.13/releases/x86/alpine-minirootfs-3.13.6-x86.tar.gz</a><br>
打开上面链接，点击更多-储存到文件<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345565.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345546.png" alt=""  />
</p>
<p>3打开ish app，点击右小角的设置<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345678.png" alt=""  />
<br>
点filesystems<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345001.png" alt=""  />
<br>
点右上角import导入<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212345291.png" alt=""  />
<br>
选择第二部下载的tar.gz包<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212346746.png" alt=""  />
<br>
然后不重启的话，选择Boot From This Filesystem<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212346284.png" alt=""  />
</p>
<p>4安装依赖<br>
重启完进入ish，点右小角剪贴输入下面命令安装依赖<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212346279.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apk add curl bash gawk python3
</span></span></code></pre></div><p>5运行脚本</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -L -s -o ./check.sh https://git.io/JRw8R &amp;&amp; chmod +x ./check.sh &amp;&amp; bash ./check.sh
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/202310212347588.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212347082.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享个可以看到ip的bt下载记录的网站</title>
      <link>https://qklgblog.pages.dev/post/20230904/</link>
      <pubDate>Mon, 04 Sep 2023 23:49:02 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230904/</guid>
      <description>https://iknowwhatyoudownload.com/
原理就是记录几个大的tracker，然后你bt下载的时候连那几个tracker
你可以看到按照国家和地区的每天下啥，也能看到你邻居的口味,还有每年和每日的统计，很有趣
只有ipv4，没有ipv6，然后国内家宽一般都是nat，不一定是你下的</description>
      <content:encoded><![CDATA[<p><a href="https://iknowwhatyoudownload.com/">https://iknowwhatyoudownload.com/</a></p>
<p>原理就是记录几个大的tracker，然后你bt下载的时候连那几个tracker<br>
你可以看到按照国家和地区的每天下啥，也能看到你邻居的口味,还有每年和每日的统计，很有趣<br>
只有ipv4，没有ipv6，然后国内家宽一般都是nat，不一定是你下的</p>
]]></content:encoded>
    </item>
    <item>
      <title>最近折腾回家看片，分享点经验</title>
      <link>https://qklgblog.pages.dev/post/20230903/</link>
      <pubDate>Sun, 03 Sep 2023 23:49:51 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230903/</guid>
      <description>鉴于移动没公网ipv4，电信联通也在日益收回v4，有兴趣的话可以看下，分享点经验
1怎么回家，我用的ipv6回家的，本人测试了下基于tcp的openvpn和基于udp的wireguard
配置很简单的，谷歌搜下就有了，我是在我本地1000下，100Mbps的上行的宽带下测试的，家里的openwrt的n5105的软路由上建的openwrt
联通流量的ipv6连回家的
主要问题就是联通流量到移动宽带的ipv6互联太差了，直接ping过去延迟都有三十多ms，就有点离谱
不说了，直接上图，wg的qos很严重
openvpn的多线程和单线程测速
wiregurad的多线程和单线程测速
多次测试差不多，其实也能用，不过延迟确实有点高，这没办法，v6的互联确实很差
2打洞
本来买了个宿迁的nat打洞的，结果老板骚操作，没法用了
玩玩cf tunnel吧
cf tunnel国内一般分配的美西的服务器
我分配的是这几个
直连过去，一来一回延迟爆炸
不过速度倒是还不错
试了下今天刚下的球2，居然能看，原始码率能看，就是拖进度条有点慢</description>
      <content:encoded><![CDATA[<p>鉴于移动没公网ipv4，电信联通也在日益收回v4，有兴趣的话可以看下，分享点经验<br>
1怎么回家，我用的ipv6回家的，本人测试了下基于tcp的openvpn和基于udp的wireguard<br>
配置很简单的，谷歌搜下就有了，我是在我本地1000下，100Mbps的上行的宽带下测试的，家里的openwrt的n5105的软路由上建的openwrt<br>
联通流量的ipv6连回家的<br>
主要问题就是联通流量到移动宽带的ipv6互联太差了，直接ping过去延迟都有三十多ms，就有点离谱<br>
不说了，直接上图，wg的qos很严重<br>
openvpn的多线程和单线程测速<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212350775.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212350294.png" alt=""  />
<br>
wiregurad的多线程和单线程测速<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212351043.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212351432.png" alt=""  />
</p>
<p>多次测试差不多，其实也能用，不过延迟确实有点高，这没办法，v6的互联确实很差</p>
<p>2打洞<br>
本来买了个宿迁的nat打洞的，结果老板骚操作，没法用了<br>
玩玩cf tunnel吧<br>
cf tunnel国内一般分配的美西的服务器<br>
我分配的是这几个<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212351744.png" alt=""  />
<br>
直连过去，一来一回延迟爆炸<br>
不过速度倒是还不错<br>
试了下今天刚下的球2，居然能看，原始码率能看，就是拖进度条有点慢<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310212351478.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>给用emby的推荐几个好用的东西</title>
      <link>https://qklgblog.pages.dev/post/20230831/</link>
      <pubDate>Thu, 31 Aug 2023 12:43:53 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230831/</guid>
      <description>最近折腾emby，找到了几个好东西，推荐给各位mjj试下
1emby crx 给emby首页美化的
github链接
https://github.com/Nolovenodie/emby-crx
效果如图
2embyExternalUrl 直接调用外部播放器油猴脚本
github链接
https://github.com/bpking1/embyExternalUrl
油猴脚本链接https://greasyfork.org/en/scripts/459297-embylaunchpotplayer
效果如图
3embyDouban emby 里增加：豆瓣 Bangumi bgm.tv 评分
油猴脚本链接https://greasyfork.org/zh-CN/scripts/449894-embydouban
效果如图
4Emby.Plugin.TelegramNotification Emby 服务器插件，用于向 Telegram 机器人发送通知。
github链接https://github.com/bjoerns1983/Emby.Plugin.TelegramNotification
怎么用的话作者github的readme里有
后台长这样子，装好后填写bot token和user id然后重启下就行了
tg的bot的话通知长这样，自己库里更新了，很快就能通知了
5Emby.MeiamSub.DevTool emby的插件，支持 迅雷看看 射手影音 字幕下载 Hash匹配
github链接https://github.com/91270/MeiamSubtitles</description>
      <content:encoded><![CDATA[<p>最近折腾emby，找到了几个好东西，推荐给各位mjj试下</p>
<h1 id="1emby-crx">1emby crx</h1>
<p>给emby首页美化的<br>
github链接<br>
<a href="https://github.com/Nolovenodie/emby-crx">https://github.com/Nolovenodie/emby-crx</a><br>
效果如图<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241244150.png" alt=""  />
</p>
<h1 id="2embyexternalurl">2embyExternalUrl</h1>
<p>直接调用外部播放器油猴脚本<br>
github链接<br>
<a href="https://github.com/bpking1/embyExternalUrl">https://github.com/bpking1/embyExternalUrl</a><br>
油猴脚本链接<a href="https://greasyfork.org/en/scripts/459297-embylaunchpotplayer">https://greasyfork.org/en/scripts/459297-embylaunchpotplayer</a><br>
效果如图<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241245152.png" alt=""  />
</p>
<h1 id="3embydouban">3embyDouban</h1>
<p>emby 里增加：豆瓣 Bangumi bgm.tv 评分<br>
油猴脚本链接<a href="https://greasyfork.org/zh-CN/scripts/449894-embydouban">https://greasyfork.org/zh-CN/scripts/449894-embydouban</a><br>
效果如图<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241245120.png" alt=""  />
</p>
<h1 id="4embyplugintelegramnotification">4Emby.Plugin.TelegramNotification</h1>
<p>Emby 服务器插件，用于向 Telegram 机器人发送通知。<br>
github链接<a href="https://github.com/bjoerns1983/Emby.Plugin.TelegramNotification">https://github.com/bjoerns1983/Emby.Plugin.TelegramNotification</a><br>
怎么用的话作者github的readme里有<br>
后台长这样子，装好后填写bot token和user id然后重启下就行了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241245907.png" alt=""  />
<br>
tg的bot的话通知长这样，自己库里更新了，很快就能通知了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241245088.png" alt=""  />
</p>
<h1 id="5embymeiamsubdevtool">5Emby.MeiamSub.DevTool</h1>
<p>emby的插件，支持 迅雷看看  射手影音 字幕下载 Hash匹配<br>
github链接<a href="https://github.com/91270/MeiamSubtitles">https://github.com/91270/MeiamSubtitles</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>关于rn dc2变成亚马逊-只是ip所有权变了</title>
      <link>https://qklgblog.pages.dev/post/20230830/</link>
      <pubDate>Wed, 30 Aug 2023 12:47:03 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230830/</guid>
      <description>我rn dc2出掉了
但是我这台cc的8.79，ip段是204.15的，也变成亚马逊了
测了下回程的三网路由
去程
电信
联通
移动
回程也没变
[Info] 测试路由 到 上海电信(天翼云) 中 ... traceroute to 101.227.255.45 (101.227.255.45), 30 hops max, 32 byte packets 1 173.82.153.1 0.86 ms AS35916 美国, 加利福尼亚州, 洛杉矶, amazon.com 2 multacom.com (96.45.162.9) 0.82 ms AS35916 美国, 加利福尼亚州, 洛杉矶, amazon.com 3 los-edge-07.inet.qwest.net (65.153.29.221) 0.45 ms AS209 美国, 加利福尼亚州, 洛杉矶, centurylink.com 4 los-edge-08.inet.qwest.net (67.14.22.202) 11.11 ms AS209 美国, 加利福尼亚州, 洛杉矶, centurylink.com 5 * 6 * 7 4.15.125.54 12.</description>
      <content:encoded><![CDATA[<p>我rn dc2出掉了<br>
但是我这台cc的8.79，ip段是204.15的，也变成亚马逊了<br>
测了下回程的三网路由<br>
去程<br>
电信<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241247881.png" alt=""  />
<br>
联通<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241247385.png" alt=""  />
<br>
移动<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241247911.png" alt=""  />
</p>
<p>回程也没变</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[Info] 测试路由 到 上海电信(天翼云) 中 ...
</span></span><span class="line"><span class="cl">traceroute to 101.227.255.45 (101.227.255.45), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  173.82.153.1  0.86 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 2  multacom.com (96.45.162.9)  0.82 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 3  los-edge-07.inet.qwest.net (65.153.29.221)  0.45 ms  AS209  美国, 加利福尼亚州, 洛杉矶, centurylink.com
</span></span><span class="line"><span class="cl"> 4  los-edge-08.inet.qwest.net (67.14.22.202)  11.11 ms  AS209  美国, 加利福尼亚州, 洛杉矶, centurylink.com
</span></span><span class="line"><span class="cl"> 5  *
</span></span><span class="line"><span class="cl"> 6  *
</span></span><span class="line"><span class="cl"> 7  4.15.125.54  12.04 ms  AS3356  美国, 加利福尼亚州, 圣何塞, level3.com
</span></span><span class="line"><span class="cl"> 8  202.97.51.189  183.44 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 9  202.97.12.181  176.57 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">10  *
</span></span><span class="line"><span class="cl">11  61.152.26.61  176.62 ms  AS4812  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 上海电信(天翼云) 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 厦门电信CN2 中 ...
</span></span><span class="line"><span class="cl">traceroute to 117.28.254.129 (117.28.254.129), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  173.82.153.1  0.89 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 2  1.162.45.96-dedicated.multacom.com (96.45.162.1)  0.90 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 3  be5361.ccr42.lax01.atlas.cogentco.com (38.99.219.57)  1.32 ms  AS174  美国, 加利福尼亚州, 洛杉矶, cogentco.com
</span></span><span class="line"><span class="cl"> 4  be2367.ccr41.lax01.atlas.cogentco.com (154.54.40.161)  0.94 ms  AS174  美国, 加利福尼亚州, 洛杉矶, cogentco.com
</span></span><span class="line"><span class="cl"> 5  be2367.ccr42.lax01.atlas.cogentco.com (154.54.40.162)  169.18 ms  AS174  美国, 加利福尼亚州, 洛杉矶, cogentco.com
</span></span><span class="line"><span class="cl"> 6  be4130.ccr71.gum01.atlas.cogentco.com (154.54.5.173)  169.56 ms  AS174  美国, 德克萨斯州, 圣安东尼奥, cogentco.com
</span></span><span class="line"><span class="cl"> 7  be2915.ccr71.tyo01.atlas.cogentco.com (154.54.91.125)  169.67 ms  AS174  日本, 东京都, 东京, cogentco.com
</span></span><span class="line"><span class="cl"> 8  be2012.ccr51.tpe01.atlas.cogentco.com (66.28.4.234)  169.48 ms  AS174  中国, 台湾, 台北市, cogentco.com
</span></span><span class="line"><span class="cl"> 9  be2226.ccr21.hkg02.atlas.cogentco.com (154.54.40.137)  169.34 ms  AS174  中国, 香港, cogentco.com
</span></span><span class="line"><span class="cl">10  hgc.demarc.cogentco.com (154.18.4.226)  168.16 ms  AS174  中国, 香港, cogentco.com
</span></span><span class="line"><span class="cl">11  218.188.104.54  173.48 ms  AS9304  中国, 香港, hgc.com.hk
</span></span><span class="line"><span class="cl">12  59.43.248.249  175.85 ms  *  中国, 香港, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">13  59.43.187.89  190.09 ms  *  中国, 广东, 广州, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">14  59.43.130.149  187.96 ms  *  中国, 广东, 广州, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">15  59.43.140.34  201.29 ms  *  中国, 福建, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  27.159.81.206  196.42 ms  AS133775  中国, 福建, 厦门, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  117.28.254.129  205.11 ms  AS4809  中国, 福建, 厦门, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 厦门电信CN2 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州联通 中 ...
</span></span><span class="line"><span class="cl">traceroute to 101.71.241.238 (101.71.241.238), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  173.82.153.1  0.76 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 2  multacom.com (96.45.162.9)  0.98 ms  AS35916  美国, 加利福尼亚州, 洛杉矶, amazon.com
</span></span><span class="line"><span class="cl"> 3  182.54.129.90  0.59 ms  AS64050  美国, 加利福尼亚州, 洛杉矶, bgp.net
</span></span><span class="line"><span class="cl"> 4  10.31.0.238  10.14 ms  *  局域网
</span></span><span class="line"><span class="cl"> 5  219.158.33.77  16.32 ms  AS4837  中国, chinaunicom.com, 联通
</span></span><span class="line"><span class="cl"> 6  219.158.117.1  181.86 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 7  219.158.5.198  206.36 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 8  219.158.113.142  221.98 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 9  219.158.113.101  222.89 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl">10  219.158.115.146  200.16 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州联通 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州移动 中 ...
</span></span><span class="line"><span class="cl">traceroute to 112.17.0.106 (112.17.0.106), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  173.82.153.1  0.82 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 2  multacom.com (96.45.162.9)  1.32 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 3  china-mobile.as58453.any2ix.coresite.com (206.72.210.219)  1.15 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 4  223.120.6.17  0.91 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 5  *
</span></span><span class="line"><span class="cl"> 6  221.183.89.174  192.01 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 7  221.183.89.69  188.18 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 8  *
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  *
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州移动 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 北京教育网 中 ...
</span></span><span class="line"><span class="cl">traceroute to 202.205.6.30 (202.205.6.30), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  173.82.153.1  0.78 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 2  multacom.com (96.45.162.9)  0.80 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 3  china-mobile.as58453.any2ix.coresite.com (206.72.210.219)  1.08 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 4  223.120.6.17  0.91 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 5  223.120.3.86  153.02 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 6  223.119.81.94  158.63 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 7  101.4.114.221  173.37 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 8  101.4.114.129  171.63 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  101.4.117.81  171.61 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  219.224.102.233  172.89 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  101.4.130.53  172.50 ms  http: 403  http: 403
</span></span><span class="line"><span class="cl">25  *
</span></span></code></pre></div><p>三网测速，还是和原来差不多<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241248207.png" alt=""  />
</p>
<p>然后去ipip上查了下<br>
是mc机房的AS35916有几个ip段成amazon的了<br>
<a href="https://whois.ipip.net/AS35916">https://whois.ipip.net/AS35916</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241248155.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>关于tg收不到短信的一二件事</title>
      <link>https://qklgblog.pages.dev/post/20230828/</link>
      <pubDate>Mon, 28 Aug 2023 12:49:14 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230828/</guid>
      <description>1为什么telegram收不到短信 首先，如果你是+86的国内手机号注册的话，多半是运营商原因，请联系你的运营商开通国际短信服务也好，或者别的什么的，具体怎么折腾你可以看下这哥们
https://www.nodeseek.com/post-6982-1
第二个原因就是你的安卓手机没有safetynet认证，苹果的话没影响
2为什么会出现这种情况呢 那是因为tg从今年初开始，短信验证码只能由官方客户端发送，而且现在tg的短信是用谷歌的firebase来发的，
安卓手机上是需要过 safetynet的验证，才会给你发
是不是不理解，一堆新名词，简单来说就是，你的手机要有验证，而且客户端得是官方的，不是第三方的
苹果手机的话都有认证的，完全不用担心，安卓的话国外的话一般都是有认证的，国内的话很多都是没有的
其实这么做的原因就是为了省钱，杜叔叔家也没余粮了
3什么是safetynet 看一看谷歌的文档https://developer.android.com/training/safetynet?hl=zh-cn
简单来说就是谷歌整的一套验证机制，认证了，你的安卓手机才能装gms，当然你也可以通过特殊手段装上去，或者有gms也有没safeynet的
4怎么检测有没有呢 首先得是型号，华为用户的话mate30之后机子没有的，不用想了
小米的话一般国行的中高端机子有自带的gms，设置里启用下就有了，实在太低端的机子的话真没有，因为这个得像谷歌交钱的，小米不愿意给
国行没有的话，刷个外版，这种左转隔壁酷安
oppo，vivo和子品牌一般外面有上市的话一般有的，这种你们去酷安搜下
三星，索尼之类的国外手机品牌的话肯定是有的
很简单，打开谷歌play商店-设置-关于，里面有个play保护机制认证，那个就是，我这台K40有的
如果没有的话收不到短信只是一个，有些第三方的app会下不了
看奈菲的应该都知道，安卓手机上没这个是下不了的，谷歌商店直接会提示您的设备与此不兼容，或者直接搜不到，当然你也可以从其他地方侧载安装
4为什么别人同款的有，我的没有呢，原因很多 ①解锁了，解bl锁之后这个会掉
②国内版和国际版rom，我之前小米8，国行版的rom就是没有，刷了国际版之后就有了
③root之后的话，开magisk hide，怎么过自己网上搜下，现在我也不玩机了
最后总结 苹果没影响
安卓机的话，得看safetynet，国外基本都有，没啥影响
国内的话，这个看品牌，随缘
参考
https://zhuanlan.zhihu.com/p/142714153
https://t.me/outvivid/4033
https://t.me/tginfoen/1598</description>
      <content:encoded><![CDATA[<h1 id="1为什么telegram收不到短信">1为什么telegram收不到短信</h1>
<p>首先，如果你是+86的国内手机号注册的话，多半是运营商原因，请联系你的运营商开通国际短信服务也好，或者别的什么的，具体怎么折腾你可以看下这哥们<br>
<a href="https://www.nodeseek.com/post-6982-1">https://www.nodeseek.com/post-6982-1</a></p>
<p>第二个原因就是你的安卓手机没有safetynet认证，苹果的话没影响</p>
<h1 id="2为什么会出现这种情况呢">2为什么会出现这种情况呢</h1>
<p>那是因为tg从今年初开始，短信验证码只能由官方客户端发送，而且现在tg的短信是用谷歌的firebase来发的，<br>
安卓手机上是需要过 safetynet的验证，才会给你发</p>
<p>是不是不理解，一堆新名词，简单来说就是，你的手机要有验证，而且客户端得是官方的，不是第三方的<br>
苹果手机的话都有认证的，完全不用担心，安卓的话国外的话一般都是有认证的，国内的话很多都是没有的<br>
其实这么做的原因就是为了省钱，杜叔叔家也没余粮了</p>
<h1 id="3什么是safetynet">3什么是safetynet</h1>
<p>看一看谷歌的文档<a href="https://developer.android.com/training/safetynet?hl=zh-cn">https://developer.android.com/training/safetynet?hl=zh-cn</a><br>
简单来说就是谷歌整的一套验证机制，认证了，你的安卓手机才能装gms，当然你也可以通过特殊手段装上去，或者有gms也有没safeynet的</p>
<h1 id="4怎么检测有没有呢">4怎么检测有没有呢</h1>
<p>首先得是型号，华为用户的话mate30之后机子没有的，不用想了<br>
小米的话一般国行的中高端机子有自带的gms，设置里启用下就有了，实在太低端的机子的话真没有，因为这个得像谷歌交钱的，小米不愿意给<br>
国行没有的话，刷个外版，这种左转隔壁酷安<br>
oppo，vivo和子品牌一般外面有上市的话一般有的，这种你们去酷安搜下<br>
三星，索尼之类的国外手机品牌的话肯定是有的</p>
<p>很简单，打开谷歌play商店-设置-关于，里面有个play保护机制认证，那个就是，我这台K40有的<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241249543.png" alt=""  />
</p>
<p>如果没有的话收不到短信只是一个，有些第三方的app会下不了<br>
看奈菲的应该都知道，安卓手机上没这个是下不了的，谷歌商店直接会提示您的设备与此不兼容，或者直接搜不到，当然你也可以从其他地方侧载安装<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241249954.png" alt=""  />
</p>
<h1 id="4为什么别人同款的有我的没有呢原因很多">4为什么别人同款的有，我的没有呢，原因很多</h1>
<p>①解锁了，解bl锁之后这个会掉<br>
②国内版和国际版rom，我之前小米8，国行版的rom就是没有，刷了国际版之后就有了<br>
③root之后的话，开magisk hide，怎么过自己网上搜下，现在我也不玩机了</p>
<h1 id="最后总结">最后总结</h1>
<p>苹果没影响<br>
安卓机的话，得看safetynet，国外基本都有，没啥影响<br>
国内的话，这个看品牌，随缘</p>
<p>参考<br>
<a href="https://zhuanlan.zhihu.com/p/142714153">https://zhuanlan.zhihu.com/p/142714153</a><br>
<a href="https://t.me/outvivid/4033">https://t.me/outvivid/4033</a><br>
<a href="https://t.me/tginfoen/1598">https://t.me/tginfoen/1598</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>cloudflare停止颁发 DigiCert的证书</title>
      <link>https://qklgblog.pages.dev/post/20230827/</link>
      <pubDate>Sun, 27 Aug 2023 12:51:55 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230827/</guid>
      <description>来源https://t.me/xhqcankao/6043
Cloudflare弃用DigiCert作为所有SSL证书的证书颁发机构
在 2023 年下半年，Cloudflare 将开始弃用 DigiCert 作为所有 SSL 证书产品(通用证书、高级证书、SSL for SaaS)的证书颁发机构。
这一变化不会影响 Cloudflare 目前正在使用的 DigiCert 颁发的现有证书，但会影响新的证书订单和续订。
在 DigiCert 停用后，证书将开始使用 Let&amp;rsquo;s Encrypt 或 Google Trust Services 作为颁发 CA。如果您有 CA 偏好，Cloudflare 建议在停用日期之前采取行动，以指定首选 CA 。
详细说明可以看
cf文档https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/
cf社区https://community.cloudflare.com/t/community-update-deprecating-digicert-as-a-certificate-authority-for-all-ssl/547436
总结
和普通用户没啥关系，就是一年证书没有了
如果要切证书的话可以看我之前的帖子https://www.nodeseek.com/post-10862-1</description>
      <content:encoded><![CDATA[<p>来源<a href="https://t.me/xhqcankao/6043">https://t.me/xhqcankao/6043</a></p>
<p>Cloudflare弃用DigiCert作为所有SSL证书的证书颁发机构<br>
在 2023 年下半年，Cloudflare 将开始弃用 DigiCert 作为所有 SSL 证书产品(<a href="https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/universal-certificates/">通用证书</a>、<a href="https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/advanced-certificates/">高级证书</a>、<a href="https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/custom-hostname-certificates/">SSL for SaaS</a>)的证书颁发机构。<br>
这一变化不会影响 Cloudflare 目前正在使用的 DigiCert 颁发的现有证书，但会影响新的证书订单和续订。<br>
在 DigiCert 停用后，证书将开始使用 Let&rsquo;s Encrypt 或 Google Trust Services 作为颁发 CA。如果您有 CA 偏好，Cloudflare 建议在停用日期之前采取行动，以指定首选 CA 。<br>
详细说明可以看<br>
cf文档<a href="https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/">https://developers.cloudflare.com/ssl/reference/migration-guides/digicert-update/</a><br>
cf社区<a href="https://community.cloudflare.com/t/community-update-deprecating-digicert-as-a-certificate-authority-for-all-ssl/547436">https://community.cloudflare.com/t/community-update-deprecating-digicert-as-a-certificate-authority-for-all-ssl/547436</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241252784.png" alt=""  />
<br>
总结<br>
和普通用户没啥关系，就是一年证书没有了<br>
如果要切证书的话可以看我之前的帖子<a href="https://www.nodeseek.com/post-10862-1">https://www.nodeseek.com/post-10862-1</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>win 10上Netflix开启4K&#43;双杜比</title>
      <link>https://qklgblog.pages.dev/post/20230825/</link>
      <pubDate>Fri, 25 Aug 2023 12:54:13 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230825/</guid>
      <description>前言
你套餐还有网速得达标才能放4K和双杜比，chrome对Netflix支持很差，别试了
需要edge
1安装解锁4K的插件 这个插件可以让不是4K的设备强制开4K，
我在这大佬频道发现了个好用的插件:https://t.me/GodlyNews1/961
github链接:https://github.com/lkmvip/netflix-4K-DDplus
选择code-download zip
解压
打开edge的扩展界面edge://extensions/
左下角的来自开发人员模式和允许来自其他应用商店都打开
再把解压好的文件夹整个拖进edge的扩展
然后插件就装好了，然后启用
2安装hevc扩展 https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;amp;gl=cn
点击这个直接安装
还不行的话，打开https://store.rg-adguard.net/,左边的上面的url link输入进去，或者Produc tId改成9N4WGH0Z6VHQ
然后选择8M的那个下载下来，手动安装
3安装Dolby Vision（杜比视界） https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9
4安装Dobly Atoms（杜比全景声） https://apps.microsoft.com/store/detail/dolby-access/9N0866FS04W8
然后右键点击右下角的音量，空间音效，选择dobly atoms，杜比全景声尽量带耳机用，做到沉浸感
这样子就启用了
tips:直接买很贵，某宝就十块钱
有些设备自带Dolby Atmos，应该是可以不用下access，我的被我删掉了,
5测试 打开Netflix,直接用这个尸战朝鲜:雅信传测就可以了
https://www.netflix.com/sg-zh/title/81312457
点亮双杜比的话会有这个标志的，但是不知道为啥没4K标志，实际播放时候是有的
点击播放，播放时候同时按住ctrl+shift+alt+D 四个按键，就可以显示参数了
有这三个就表示，成功点亮4K+双杜比了，
6 最后废话几句 自己组装的pc具体支持不支持双杜比，自己看，反正按照这个步骤走，还是不支持，俺也没办法
杜比视界和杜比全景声这两东西是需要厂商花钱，才能用的，我是拿我的联想thinkbook 14+试的，联想应该是给钱了的
其实pc不适合流媒体，要看的话买个火棒或者google tv，apple tv啥的，插家里的4K电视上看，现在电视一般都支持的
还有杜比视界是有双层和单层的，双层的得那些碟机才行，流媒体的都是单层的</description>
      <content:encoded><![CDATA[<p>前言<br>
你套餐还有网速得达标才能放4K和双杜比，chrome对Netflix支持很差，别试了<br>
需要edge</p>
<h1 id="1安装解锁4k的插件">1安装解锁4K的插件</h1>
<p>这个插件可以让不是4K的设备强制开4K，<br>
我在这大佬频道发现了个好用的插件:<a href="https://t.me/GodlyNews1/961">https://t.me/GodlyNews1/961</a><br>
github链接:<a href="https://github.com/lkmvip/netflix-4K-DDplus">https://github.com/lkmvip/netflix-4K-DDplus</a><br>
选择code-download zip<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241254318.png" alt=""  />
<br>
解压<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241254775.png" alt=""  />
<br>
打开edge的扩展界面<a href="edge://extensions/">edge://extensions/</a><br>
左下角的来自开发人员模式和允许来自其他应用商店都打开<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241254978.png" alt=""  />
<br>
再把解压好的文件夹整个拖进edge的扩展<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241254822.png" alt=""  />
<br>
然后插件就装好了，然后启用<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241254070.png" alt=""  />
</p>
<h1 id="2安装hevc扩展">2安装hevc扩展</h1>
<p><a href="https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;gl=cn">https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;gl=cn</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255546.png" alt=""  />
<br>
点击这个直接安装<br>
还不行的话，打开<a href="https://store.rg-adguard.net/">https://store.rg-adguard.net/</a>,左边的上面的url link输入进去，或者Produc tId改成9N4WGH0Z6VHQ<br>
然后选择8M的那个下载下来，手动安装<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255670.png" alt=""  />
</p>
<h1 id="3安装dolby-vision杜比视界">3安装Dolby Vision（杜比视界）</h1>
<p><a href="https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9">https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255456.png" alt=""  />
</p>
<h1 id="4安装dobly-atoms杜比全景声">4安装Dobly Atoms（杜比全景声）</h1>
<p><a href="https://apps.microsoft.com/store/detail/dolby-access/9N0866FS04W8">https://apps.microsoft.com/store/detail/dolby-access/9N0866FS04W8</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255114.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255866.png" alt=""  />
<br>
然后右键点击右下角的音量，空间音效，选择dobly atoms，杜比全景声尽量带耳机用，做到沉浸感<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241255869.png" alt=""  />
<br>
这样子就启用了</p>
<p>tips:直接买很贵，某宝就十块钱<br>
有些设备自带Dolby Atmos，应该是可以不用下access，我的被我删掉了,</p>
<h1 id="5测试">5测试</h1>
<p>打开Netflix,直接用这个尸战朝鲜:雅信传测就可以了<br>
<a href="https://www.netflix.com/sg-zh/title/81312457">https://www.netflix.com/sg-zh/title/81312457</a><br>
点亮双杜比的话会有这个标志的，但是不知道为啥没4K标志，实际播放时候是有的<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241256515.png" alt=""  />
</p>
<p>点击播放，播放时候同时按住ctrl+shift+alt+D 四个按键，就可以显示参数了<br>
有这三个就表示，成功点亮4K+双杜比了，<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241256530.png" alt=""  />
</p>
<h1 id="6-最后废话几句">6 最后废话几句</h1>
<p>自己组装的pc具体支持不支持双杜比，自己看，反正按照这个步骤走，还是不支持，俺也没办法<br>
杜比视界和杜比全景声这两东西是需要厂商花钱，才能用的，我是拿我的联想thinkbook 14+试的，联想应该是给钱了的<br>
其实pc不适合流媒体，要看的话买个火棒或者google tv，apple tv啥的，插家里的4K电视上看，现在电视一般都支持的<br>
还有杜比视界是有双层和单层的，双层的得那些碟机才行，流媒体的都是单层的</p>
]]></content:encoded>
    </item>
    <item>
      <title>win10使用杜比视界</title>
      <link>https://qklgblog.pages.dev/post/20230824/</link>
      <pubDate>Thu, 24 Aug 2023 12:57:17 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230824/</guid>
      <description>最近闲着无聊，折腾影音，来分享下win10怎么用杜比视界
1hevc扩展
https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;amp;gl=cn
点击这个直接安装
还不行的话，打开https://store.rg-adguard.net/,左边的上面的url link输入进去，或者Produc tId改成9N4WGH0Z6VHQ
然后选择8M的那个下载下来，手动安装
2Dolby Vision
https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9
两个插件装好了，然后用win10自带的电影与电视打开就可以看杜比视界的视频了
3怎么测支持不支持
昨天我帖子里那个视频，我扒下来传google drive上了，没声音的，油管那个有问题，坛友反馈支持不支持都是蓝色的，
https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link
下载下来视频，用win10自带的电影与电视打开，球是蓝色的话支持，绿色的话就是不支持
支持
不支持
装完还可以试下Netflix，俺这联想的笔记本整完可以点亮双杜比了，还要装个dolby access</description>
      <content:encoded><![CDATA[<p>最近闲着无聊，折腾影音，来分享下win10怎么用杜比视界</p>
<p>1hevc扩展<br>
<a href="https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;gl=cn">https://apps.microsoft.com/store/detail/%E6%9D%A5%E8%87%AA%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86%E7%9A%84-hevc-%E8%A7%86%E9%A2%91%E6%89%A9%E5%B1%95/9N4WGH0Z6VHQ?hl=zh-cn&amp;gl=cn</a><br>
点击这个直接安装<br>
还不行的话，打开<a href="https://store.rg-adguard.net/">https://store.rg-adguard.net/</a>,左边的上面的url link输入进去，或者Produc tId改成9N4WGH0Z6VHQ<br>
然后选择8M的那个下载下来，手动安装<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241257895.png" alt=""  />
<br>
2Dolby Vision<br>
<a href="https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9">https://apps.microsoft.com/store/detail/dolby-vision/9MVMZ93N61T9</a><br>
两个插件装好了，然后用win10自带的电影与电视打开就可以看杜比视界的视频了</p>
<p>3怎么测支持不支持</p>
<p>昨天我帖子里那个视频，我扒下来传google drive上了，没声音的，油管那个有问题，坛友反馈支持不支持都是蓝色的，<br>
<a href="https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link">https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link</a><br>
下载下来视频，用win10自带的电影与电视打开，球是蓝色的话支持，绿色的话就是不支持<br>
支持<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241257658.png" alt=""  />
<br>
不支持<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241257208.png" alt=""  />
<br>
装完还可以试下Netflix，俺这联想的笔记本整完可以点亮双杜比了，还要装个dolby access<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241257301.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>来试下你的设备支持不支持杜比视界</title>
      <link>https://qklgblog.pages.dev/post/20230823/</link>
      <pubDate>Wed, 23 Aug 2023 13:00:51 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230823/</guid>
      <description>B站https://www.bilibili.com/video/av419059870/ 要大会员
支持的话球是蓝色的，
不支持的话是绿色的
很容易分辨的
当然色盲当我没说
油管那个有问题，我把b站的扒下来了，没声音的啊，他音轨和声轨是分开的，我没合起来,来试下
win10下载下来，装好hevc和dollby vision的插件，拿电视电影播就可以了
https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link</description>
      <content:encoded><![CDATA[<p>B站<a href="https://www.bilibili.com/video/av419059870/">https://www.bilibili.com/video/av419059870/</a> 要大会员</p>
<p>支持的话球是蓝色的，<br>
不支持的话是绿色的<br>
很容易分辨的<br>
当然色盲当我没说<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241301425.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241301002.png" alt=""  />
</p>
<p>油管那个有问题，我把b站的扒下来了，没声音的啊，他音轨和声轨是分开的，我没合起来,来试下<br>
win10下载下来，装好hevc和dollby vision的插件，拿电视电影播就可以了<br>
<a href="https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link">https://drive.google.com/file/d/127yA0HCrB4vamveJ5zTWSJ5i73cAuqUL/view?usp=drive_link</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>BitRemote -苹果上管理下载神器</title>
      <link>https://qklgblog.pages.dev/post/20230822/</link>
      <pubDate>Tue, 22 Aug 2023 13:01:47 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230822/</guid>
      <description>可以在 Mac、iPhone、iPad 上 管理 BT、PT 下载任务
支持
qBittorrent
Transmission
群晖 Synology Download Station
威联通 QNAP Download Station
testflight链接
https://testflight.apple.com/join/yOuPRI3A
具体怎么样看小众软件上这个帖子
https://www.appinn.com/bitremote-for-apple/</description>
      <content:encoded><![CDATA[<p>可以在 Mac、iPhone、iPad 上 管理 BT、PT 下载任务<br>
支持<br>
qBittorrent<br>
Transmission<br>
群晖 Synology Download Station<br>
威联通 QNAP Download Station</p>
<p>testflight链接<br>
<a href="https://testflight.apple.com/join/yOuPRI3A">https://testflight.apple.com/join/yOuPRI3A</a></p>
<p>具体怎么样看小众软件上这个帖子<br>
<a href="https://www.appinn.com/bitremote-for-apple/">https://www.appinn.com/bitremote-for-apple/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>百年域名</title>
      <link>https://qklgblog.pages.dev/post/20230821/</link>
      <pubDate>Mon, 21 Aug 2023 13:02:25 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230821/</guid>
      <description>WordPress 宣布提供 100 年域名托管服务
WordPress宣布提供100年的域名托管服务，包括24小时协助和托管网站服务。
域名注册期限最长为十年，但 WordPress 这个“百年计划”将提供 100 年的域名和 WordPress 托管，每个计划的费用为 38,000 美元。
WordPress 表示，该计划是为了想终生保护自己的在线遗产的人设计的。注册该计划非常简单，只需在WordPress.com网站上填写表格即可。
来源
https://t.me/xhqcankao/6035
详细信息：https://wordpress.com/blog/2023/08/25/introducing-the-100-year-plan/</description>
      <content:encoded><![CDATA[<p>WordPress 宣布提供 100 年域名托管服务<br>
WordPress宣布提供100年的域名托管服务，包括24小时协助和托管网站服务。<br>
域名注册期限最长为十年，但 WordPress 这个“百年计划”将提供 100 年的域名和 WordPress 托管，每个计划的费用为 38,000 美元。<br>
WordPress 表示，该计划是为了想终生保护自己的在线遗产的人设计的。注册该计划非常简单，只需在WordPress.com网站上填写表格即可。</p>
<p>来源<br>
<a href="https://t.me/xhqcankao/6035">https://t.me/xhqcankao/6035</a><br>
详细信息：<a href="https://wordpress.com/blog/2023/08/25/introducing-the-100-year-plan/">https://wordpress.com/blog/2023/08/25/introducing-the-100-year-plan/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>qbittorrent用tg bot通知</title>
      <link>https://qklgblog.pages.dev/post/20230820/</link>
      <pubDate>Sun, 20 Aug 2023 13:03:08 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230820/</guid>
      <description>如果你想用tg bot来管理你的qbittorrent的话
可以试下下面这两个
https://github.com/zeroone2numeral2/qbittorrent-bot
开源项目：用telegramBot控制qbittorrent
https://hostloc.com/thread-1192407-1-1.html
(出处: 全球主机交流论坛)
1
botfather https://t.me/BotFather点击
/newbot命令创建bot，按照提示创建bot的名字和用户名
然后会有一个tokern在Use this token to access the HTTP API:后面，复制下
2获取telgram的user id
https://t.me/getidsbot，点击开始，
id:后面的就是你的id了
3打开qbittorrent设置-下载，拉到下面，运行外部程序
新增 torrent 时运行外部程序
curl -X POST &amp;#34;https://api.telegram.org/bot&amp;lt;YourBotToken&amp;gt;/sendMessage&amp;#34; -d &amp;#34;chat_id=&amp;lt;ChatID&amp;gt;&amp;amp;text=text=%N正在下载.&amp;#34; torrent 完成时运行外部程序
curl -X POST &amp;#34;https://api.telegram.org/bot&amp;lt;YourBotToken&amp;gt;/sendMessage&amp;#34; -d &amp;#34;chat_id=&amp;lt;ChatID&amp;gt;&amp;amp;text=text=%N完成下载.&amp;#34; 换成1里面的botfather那里获取的token，换成2里面的id后面的那串数字
点击保存，就好了
其他的参数自己根据需要调，我只是用来下载时候通知下的
最后效果如图</description>
      <content:encoded><![CDATA[<p>如果你想用tg bot来管理你的qbittorrent的话<br>
可以试下下面这两个<br>
<a href="https://github.com/zeroone2numeral2/qbittorrent-bot">https://github.com/zeroone2numeral2/qbittorrent-bot</a><br>
开源项目：用telegramBot控制qbittorrent<br>
<a href="https://hostloc.com/thread-1192407-1-1.html">https://hostloc.com/thread-1192407-1-1.html</a><br>
(出处: 全球主机交流论坛)</p>
<p>1<br>
botfather  <a href="https://t.me/BotFather">https://t.me/BotFather</a>点击<br>
/newbot命令创建bot，按照提示创建bot的名字和用户名<br>
然后会有一个tokern在Use this token to access the HTTP API:后面，复制下</p>
<p>2获取telgram的user id<br>
<a href="https://t.me/getidsbot">https://t.me/getidsbot</a>，点击开始，<br>
id:后面的就是你的id了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241303492.png" alt=""  />
<br>
3打开qbittorrent设置-下载，拉到下面，运行外部程序<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241303465.png" alt=""  />
<br>
新增 torrent 时运行外部程序</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -X POST &#34;https://api.telegram.org/bot&lt;YourBotToken&gt;/sendMessage&#34; -d &#34;chat_id=&lt;ChatID&gt;&amp;text=text=%N正在下载.&#34;
</span></span></code></pre></div><p>torrent 完成时运行外部程序</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -X POST &#34;https://api.telegram.org/bot&lt;YourBotToken&gt;/sendMessage&#34; -d &#34;chat_id=&lt;ChatID&gt;&amp;text=text=%N完成下载.&#34;
</span></span></code></pre></div><p><YourBotToken>换成1里面的botfather那里获取的token，<ChatID>换成2里面的id后面的那串数字<br>
点击保存，就好了<br>
其他的参数自己根据需要调，我只是用来下载时候通知下的<br>
最后效果如图<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241303088.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>给各位用安卓的推荐个infuse的替代品</title>
      <link>https://qklgblog.pages.dev/post/20230819/</link>
      <pubDate>Sat, 19 Aug 2023 13:04:28 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230819/</guid>
      <description>链接:https://github.com/nova-video-player/aos-AVP
github上直接下或者google play下也行
一般手机下arm-v8的64位的，电视机下arm-v7的32位的
1支持webdav，能播alist里各种网盘，也支持smb，ftp，sftp，sshj啥的
2支持infuse一样的刮削，海报墙
3支持手机和电视两种模式，设置里可以切的
4注册下OpenSubtitles ，可以从那边自动下字幕
mjj可以试下
免费的，挺好用的</description>
      <content:encoded><![CDATA[<p>链接:<a href="https://github.com/nova-video-player/aos-AVP">https://github.com/nova-video-player/aos-AVP</a><br>
github上直接下或者google play下也行<br>
一般手机下arm-v8的64位的，电视机下arm-v7的32位的<br>
1支持webdav，能播alist里各种网盘，也支持smb，ftp，sftp，sshj啥的<br>
2支持infuse一样的刮削，海报墙<br>
3支持手机和电视两种模式，设置里可以切的<br>
4注册下OpenSubtitles ，可以从那边自动下字幕<br>
mjj可以试下<br>
免费的，挺好用的</p>
]]></content:encoded>
    </item>
    <item>
      <title>高级电视用户</title>
      <link>https://qklgblog.pages.dev/post/20230818/</link>
      <pubDate>Fri, 18 Aug 2023 13:06:09 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230818/</guid>
      <description> </description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="https://s3.qklg.net/img/202310241305102.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>【宝典在手,江山我有】小白闯江湖之常用一键脚本!</title>
      <link>https://qklgblog.pages.dev/post/20230812/</link>
      <pubDate>Sat, 12 Aug 2023 13:07:50 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230812/</guid>
      <description>termius订阅掉了
换到新账户，把老的资料备份下
顺带发给给位mjj，常用的应该都有了
根据@Kdkdk 大佬的意见，修改了下，做了下分类，并且加上了来源
网络测试类脚本 三网测速 bash &amp;lt;(curl -Lso- https://www.infski.com/files/superspeed.sh) 来源:https://www.hostloc.com/thread-1076459-1-1.html
用途:三网多线程测速
Hyperspeed bash &amp;lt;(curl -Lso- https://bench.im/hyperspeed) 来源:https://hostloc.com/thread-1076585-1-1.html
用途:测试三网单线程测速，比方说油管速度就是单线程
硬件测试类脚本 geekbench和yabs geekbench5
curl -sL yabs.sh|bash -s -- -if -fdi5 yabs
curl -sL yabs.sh | bash 来源:https://github.com/masonr/yet-another-bench-script
用途:geekbench5只测试小鸡的cpu的geekbench5的跑分，去掉了网络和硬盘测试
现在的yabs默认是6，yabs同时还提供小鸡的硬盘和网络测试，具体详细的参数看作者github的readme
bench.sh wget -qO- bench.sh | bash 来源:https://teddysun.com/444.html
用途:秋水大佬的脚本，可以显示linux小鸡的详细信息，以及硬盘和网络的测试
如果要测试小鸡国外的速度的话，用这个
硬盘测试 dd bs=64k count=4k if=/dev/zero of=test oflag=dsync 用途:用dd命令测试小鸡的硬盘性能
超售检测 curl https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh | bash wget --no-check-certificate -O memoryCheck.sh https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh &amp;amp;&amp;amp; chmod +x memoryCheck.sh &amp;amp;&amp;amp; bash memoryCheck.</description>
      <content:encoded><![CDATA[<p>termius订阅掉了<br>
换到新账户，把老的资料备份下<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241308286.png" alt=""  />
<br>
顺带发给给位mjj，常用的应该都有了<br>
根据@Kdkdk 大佬的意见，修改了下，做了下分类，并且加上了来源</p>
<h1 id="网络测试类脚本">网络测试类脚本</h1>
<h2 id="三网测速">三网测速</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -Lso- https://www.infski.com/files/superspeed.sh)
</span></span></code></pre></div><p>来源:<a href="https://www.hostloc.com/thread-1076459-1-1.html">https://www.hostloc.com/thread-1076459-1-1.html</a><br>
用途:三网多线程测速</p>
<h2 id="hyperspeed">Hyperspeed</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -Lso- https://bench.im/hyperspeed)
</span></span></code></pre></div><p>来源:<a href="https://hostloc.com/thread-1076585-1-1.html">https://hostloc.com/thread-1076585-1-1.html</a><br>
用途:测试三网单线程测速，比方说油管速度就是单线程</p>
<h1 id="硬件测试类脚本">硬件测试类脚本</h1>
<h2 id="geekbench和yabs">geekbench和yabs</h2>
<p>geekbench5</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sL yabs.sh|bash -s -- -if -fdi5
</span></span></code></pre></div><p>yabs</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sL yabs.sh | bash
</span></span></code></pre></div><p>来源:<a href="https://github.com/masonr/yet-another-bench-script">https://github.com/masonr/yet-another-bench-script</a><br>
用途:geekbench5只测试小鸡的cpu的geekbench5的跑分，去掉了网络和硬盘测试<br>
现在的yabs默认是6，yabs同时还提供小鸡的硬盘和网络测试，具体详细的参数看作者github的readme</p>
<h2 id="benchsh">bench.sh</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -qO- bench.sh | bash
</span></span></code></pre></div><p>来源:<a href="https://teddysun.com/444.html">https://teddysun.com/444.html</a><br>
用途:秋水大佬的脚本，可以显示linux小鸡的详细信息，以及硬盘和网络的测试<br>
如果要测试小鸡国外的速度的话，用这个</p>
<h2 id="硬盘测试">硬盘测试</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">dd bs=64k count=4k if=/dev/zero of=test oflag=dsync
</span></span></code></pre></div><p>用途:用dd命令测试小鸡的硬盘性能</p>
<h2 id="超售检测">超售检测</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh | bash
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget --no-check-certificate -O memoryCheck.sh https://raw.githubusercontent.com/uselibrary/memoryCheck/main/memoryCheck.sh &amp;&amp; chmod +x memoryCheck.sh &amp;&amp; bash memoryCheck.sh
</span></span></code></pre></div><p>来源:<a href="https://hostloc.com/thread-1187330-1-1.html">https://hostloc.com/thread-1187330-1-1.html</a><br>
用途：检测小鸡是否超售，不过其实自己买小鸡那价格超没超售，都应该心知肚明了<br>
有钱还是上杜甫</p>
<h1 id="ip检测">ip检测</h1>
<h2 id="流媒体检测">流媒体检测</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)
</span></span></code></pre></div><p>来源:<a href="https://github.com/lmc999/RegionRestrictionCheck">https://github.com/lmc999/RegionRestrictionCheck</a><br>
用途:测试小鸡ip的流媒体以及chatgpt解锁，同时这个脚本在安卓的temux，ios上ish，mac的终端上也是能用的，可以用来判断机场的节点是否支持解锁<br>
windows的话可以用linux子系统</p>
<h2 id="四网回程测试">四网回程测试</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -O jcnf.sh https://raw.githubusercontent.com/Netflixxp/jcnfbesttrace/main/jcnf.sh &amp;&amp; chmod +x jcnf.sh &amp;&amp; clear &amp;&amp;./jcnf.sh
</span></span></code></pre></div><p>来源:<a href="https://github.com/Netflixxp/jcnfbesttrace">https://github.com/Netflixxp/jcnfbesttrace</a><br>
用途:测试小鸡的四网回程路由，三大运营商和教育网的路由</p>
<h1 id="综合脚本">综合脚本</h1>
<p>融合怪</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh)
</span></span></code></pre></div><p>来源:<a href="https://github.com/spiritLHLS/ecs">https://github.com/spiritLHLS/ecs</a></p>
<p>lemonbench</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -qO- https://raw.githubusercontent.com/LemonBench/LemonBench/main/LemonBench.sh | bash -s -- --fast
</span></span></code></pre></div><p>来源:<a href="https://github.com/LemonBench/LemonBench">https://github.com/LemonBench/LemonBench</a></p>
<p>用途：上面两个都是综合测试小鸡的各项性能，怎么用看作者的readme</p>
<h2 id="warp">warp</h2>
<p>wgcf</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh
</span></span></code></pre></div><p>Warp-go</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/warp-go.sh &amp;&amp; bash warp-go.sh
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>给各位二次元推荐个好东西</title>
      <link>https://qklgblog.pages.dev/post/20230808/</link>
      <pubDate>Tue, 08 Aug 2023 13:09:20 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230808/</guid>
      <description>AutoBangumi
全自动追番工具
github地址https://github.com/EstrellaXD/Auto_Bangumi
官网https://www.autobangumi.org/
直接小鸡上docker撸就可以了，教程官方文档就有
https://www.autobangumi.org/deploy/quick-start.html
当然你小鸡得能下bt，不然的话当心被删鸡，建议家里nas上用
拿来nas上看番，挺好用的
我是给陈叔叔冲了好几年大会员的大韭菜</description>
      <content:encoded><![CDATA[<p>AutoBangumi<br>
全自动追番工具<br>
github地址<a href="https://github.com/EstrellaXD/Auto_Bangumi">https://github.com/EstrellaXD/Auto_Bangumi</a><br>
官网<a href="https://www.autobangumi.org/">https://www.autobangumi.org/</a></p>
<p>直接小鸡上docker撸就可以了，教程官方文档就有<br>
<a href="https://www.autobangumi.org/deploy/quick-start.html">https://www.autobangumi.org/deploy/quick-start.html</a></p>
<p>当然你小鸡得能下bt，不然的话当心被删鸡，建议家里nas上用<br>
拿来nas上看番，挺好用的<br>
我是给陈叔叔冲了好几年大会员的大韭菜</p>
]]></content:encoded>
    </item>
    <item>
      <title>将博客部署到ipfs</title>
      <link>https://qklgblog.pages.dev/post/20230807/</link>
      <pubDate>Mon, 07 Aug 2023 13:11:52 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230807/</guid>
      <description>最近几天在玩ipfs，一直想把自己的博客部署到ipfs上
看了一堆文章，发现两好玩的东西，类似于github pages，cf pages之类的静态托管站点，但是区别于他们的就是，可以把博客托管到ipfs上
直接用github仓库部署静态博客就行
https://fleek.co/
https://dashboard.4everland.org/login
https://app.pinata.cloud/pinmanager
你要玩ipfs静态博客，有mac的话可以直接试下这个
隔壁v2ex站长做的
https://github.com/Planetable/Planet</description>
      <content:encoded><![CDATA[<p>最近几天在玩ipfs，一直想把自己的博客部署到ipfs上<br>
看了一堆文章，发现两好玩的东西，类似于github pages，cf pages之类的静态托管站点，但是区别于他们的就是，可以把博客托管到ipfs上<br>
直接用github仓库部署静态博客就行</p>
<p><a href="https://fleek.co/">https://fleek.co/</a><br>
<a href="https://dashboard.4everland.org/login">https://dashboard.4everland.org/login</a><br>
<a href="https://app.pinata.cloud/pinmanager">https://app.pinata.cloud/pinmanager</a><br>
你要玩ipfs静态博客，有mac的话可以直接试下这个<br>
隔壁v2ex站长做的<br>
<a href="https://github.com/Planetable/Planet">https://github.com/Planetable/Planet</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>分享个web检测工具</title>
      <link>https://qklgblog.pages.dev/post/20230804/</link>
      <pubDate>Fri, 04 Aug 2023 14:02:11 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230804/</guid>
      <description>hack news看到的，超级酷炫
IP信息、SSL、DNS记录、Cookies、标头、域名信息等一堆内容
网址:https://web-check.xyz/
作者github:https://github.com/lissy93/web-check
可以自建，作者的readme里有自建的办法的
用docker就行</description>
      <content:encoded><![CDATA[<p>hack news看到的，超级酷炫<br>
IP信息、SSL、DNS记录、Cookies、标头、域名信息等一堆内容<br>
网址:<a href="https://web-check.xyz/">https://web-check.xyz/</a><br>
作者github:<a href="https://github.com/lissy93/web-check">https://github.com/lissy93/web-check</a></p>
<p>可以自建，作者的readme里有自建的办法的<br>
用docker就行</p>
]]></content:encoded>
    </item>
    <item>
      <title>关于红米ax6000的一点小小的经验</title>
      <link>https://qklgblog.pages.dev/post/20230730/</link>
      <pubDate>Sun, 30 Jul 2023 13:12:59 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230730/</guid>
      <description>1这款路由器怎么样
很牛逼，堪称千兆毕业机，缺点也就是后面只有千兆口子，没2.5G，它那颗四2.0Ghz的a53，跑千兆稍微有点浪费
2拿来科学怎么样
我试过我的红米ax6000刷openwrt，恩山一个大佬编译的
瓦工hk cmi加我移动千兆宽带，ssrp+用naive proxy
只能跑到五百多，看了下后台cpu他占用就上不去，我感觉软件问题，我没管
后面用我的n5105的软路由是可以跑到七八百的
但是你500Mbps能几个小鸡跑得动啊
我感觉应该是navie proxy的问题，后面我用我朋友借给我的机场，用ss就可以，八百多没啥问题
不过你根本不用管这些，因为正常科学用不到这么高的速度
3购买意见
家里千兆内网，不上2.5G的，只拿来爬墙的完全足够用了
只爬墙的话解锁ssh上个shellclash也足够用了
4提醒
别买成小米的ax6000，那个cpu很弱鸡，只能当ap，不过是个很好的ap，不过直接加钱卖小米那个新的7000更香
苹果全家桶的尽量别上，联发科和苹果有点互斥，尽量买高通soc的路由器
具体怎么玩，还有啥左转隔壁恩山，我只是分享下我的感受，我最后还是刷回官网做ap了，实在有点浪费</description>
      <content:encoded><![CDATA[<p>1这款路由器怎么样<br>
很牛逼，堪称千兆毕业机，缺点也就是后面只有千兆口子，没2.5G，它那颗四2.0Ghz的a53，跑千兆稍微有点浪费</p>
<p>2拿来科学怎么样<br>
我试过我的红米ax6000刷openwrt，恩山一个大佬编译的<br>
瓦工hk cmi加我移动千兆宽带，ssrp+用naive proxy<br>
只能跑到五百多，看了下后台cpu他占用就上不去，我感觉软件问题，我没管<br>
后面用我的n5105的软路由是可以跑到七八百的<br>
但是你500Mbps能几个小鸡跑得动啊<br>
我感觉应该是navie proxy的问题，后面我用我朋友借给我的机场，用ss就可以，八百多没啥问题<br>
不过你根本不用管这些，因为正常科学用不到这么高的速度</p>
<p>3购买意见<br>
家里千兆内网，不上2.5G的，只拿来爬墙的完全足够用了<br>
只爬墙的话解锁ssh上个shellclash也足够用了</p>
<p>4提醒<br>
别买成小米的ax6000，那个cpu很弱鸡，只能当ap，不过是个很好的ap，不过直接加钱卖小米那个新的7000更香<br>
苹果全家桶的尽量别上，联发科和苹果有点互斥，尽量买高通soc的路由器</p>
<p>具体怎么玩，还有啥左转隔壁恩山，我只是分享下我的感受，我最后还是刷回官网做ap了，实在有点浪费</p>
]]></content:encoded>
    </item>
    <item>
      <title>移动宽带的一点小小的经验</title>
      <link>https://qklgblog.pages.dev/post/20230727/</link>
      <pubDate>Thu, 27 Jul 2023 13:13:36 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230727/</guid>
      <description>凌晨睡不着，醒来，随便写点什么
1怎么办便宜
某宝或者你所在省份的运营商的贴吧去找找，有优惠
比直接去营业厅问便宜很多很多，我也不知道他们怎么做到的
我用的某宝，20多一个月就能开千兆，不限制套餐，我是八元保号都能开，上行是100M的也够用了
2国内上网怎么样
国内大的网站，没啥问题，现在大网站一般都是三网bgp，或者接入网宿腾讯阿里等大cdn，没啥问题
小网站的话，国内电信或者联通单线的，也没啥实际问题，一般这种网站都得开，不过偶尔个别确实遇到过打不开，不过一般人也不会上吧
3打游戏怎么样
有国服的话，基本上体验没啥，我lol和csgo都玩，有国服的都没啥问题
外服的话该上加速器还是加速器，氪金uu没啥问题，雷神我这没啥问题
4没公网ip怎么办
我这电信的老宽带是有公网ip的，新办的也没了，只有ipv6公网，所以还不如直接移动了
ipv6的话你得自己折腾，改桥接，换光猫，上软路由啥的都得整好
5出国留学怎么样
这个比电信爽很多，亚太小鸡很容易起飞，不过最近广州出口出问题了，三个多月都没修好，绕上海,我在上海周边没啥影响，广州的mjj可能有点影响，特别是去hk的延迟大了很多
不行还有万精油，cf自选ipv6去hkg，基本上拉得动一堆小鸡
6三个运营商怎么选
我这联通覆盖很少小区有，我这小区有电信移动，长城宽带和江苏有线这两都有，就是没联通，有条件的话还是联通优选
我这19块钱的王卡+20就可以整个千兆宽带了，可惜小区没有，很难搞
江苏联通低消19千兆宽带240/年
https://hostloc.com/thread-1133561-1-1.html
(出处: 全球主机交流论坛)
7怎么折腾
自带的猫得换了，我这自带的猫某鱼十几块钱一个垃圾猫，没换之前一堆问题，
我换了个华为hs8145x6的10Gpon的猫，可惜后面四个都是千兆口
现在有条件上千兆宽带的还是上个2.5G口子的猫，现在很便宜了，我是前年换的，所以一直用，也懒得换了，现在2.5G猫很便宜，200左右就有了
也可以上猫棒，见过网上有哥们用猫棒+tp的xdr 5480，突破千兆的
不过这些体验真没啥提升，千兆足够用了
出了测速，真没啥提升
软路由，我是一台n5105的软路由，之前隔壁路由器群开车时候500买的准系统，内存，之前旧笔记本里的8G条子，固态用的某多多十几块钱的16G傲腾，不过问题很多，断流遇到好几次了，n5105+i225这两玩意凑一起真的很难受
刷了个opnewrt，上面就只跑了个科学和alist，其他都没用
固件之前自己编译的，现在懒狗一个，直接用的这个高大全https://openwrt.mpdn.fun:8443/
科学用的passwall，可以直接用这个装https://github.com/xiaorouji/openwrt-passwall/releases
然后ipv6的ddns也在上面，我装了个openvpn ipv6回家，我这wireguard被qos很严重
后面的路由器是红米ax6+ax6000做ap
ax6刷的openwrt，ax6000刷了openwrt，又被我刷回去了，做ap原厂系统就可以了
5105后面挂了个n5095的台电的小主机，装了个pve，里面一个黑群晖，本来还有个windows的，但是没啥用，被我删了
家里的网络 拓扑挺简单的
hs8145x6 光猫-n5105软路由拨号科学-ax6和ax6000两硬路由做ap</description>
      <content:encoded><![CDATA[<p>凌晨睡不着，醒来，随便写点什么<br>
1怎么办便宜<br>
某宝或者你所在省份的运营商的贴吧去找找，有优惠<br>
比直接去营业厅问便宜很多很多，我也不知道他们怎么做到的<br>
我用的某宝，20多一个月就能开千兆，不限制套餐，我是八元保号都能开，上行是100M的也够用了<br>
2国内上网怎么样<br>
国内大的网站，没啥问题，现在大网站一般都是三网bgp，或者接入网宿腾讯阿里等大cdn，没啥问题<br>
小网站的话，国内电信或者联通单线的，也没啥实际问题，一般这种网站都得开，不过偶尔个别确实遇到过打不开，不过一般人也不会上吧<br>
3打游戏怎么样<br>
有国服的话，基本上体验没啥，我lol和csgo都玩，有国服的都没啥问题<br>
外服的话该上加速器还是加速器，氪金uu没啥问题，雷神我这没啥问题<br>
4没公网ip怎么办<br>
我这电信的老宽带是有公网ip的，新办的也没了，只有ipv6公网，所以还不如直接移动了<br>
ipv6的话你得自己折腾，改桥接，换光猫，上软路由啥的都得整好<br>
5出国留学怎么样<br>
这个比电信爽很多，亚太小鸡很容易起飞，不过最近广州出口出问题了，三个多月都没修好，绕上海,我在上海周边没啥影响，广州的mjj可能有点影响，特别是去hk的延迟大了很多<br>
不行还有万精油，cf自选ipv6去hkg，基本上拉得动一堆小鸡<br>
6三个运营商怎么选<br>
我这联通覆盖很少小区有，我这小区有电信移动，长城宽带和江苏有线这两都有，就是没联通，有条件的话还是联通优选<br>
我这19块钱的王卡+20就可以整个千兆宽带了，可惜小区没有，很难搞<br>
江苏联通低消19千兆宽带240/年<br>
<a href="https://hostloc.com/thread-1133561-1-1.html">https://hostloc.com/thread-1133561-1-1.html</a><br>
(出处: 全球主机交流论坛)</p>
<p>7怎么折腾<br>
自带的猫得换了，我这自带的猫某鱼十几块钱一个垃圾猫，没换之前一堆问题，<br>
我换了个华为hs8145x6的10Gpon的猫，可惜后面四个都是千兆口<br>
现在有条件上千兆宽带的还是上个2.5G口子的猫，现在很便宜了，我是前年换的，所以一直用，也懒得换了，现在2.5G猫很便宜，200左右就有了<br>
也可以上猫棒，见过网上有哥们用猫棒+tp的xdr 5480，突破千兆的<br>
不过这些体验真没啥提升，千兆足够用了<br>
出了测速，真没啥提升</p>
<p>软路由，我是一台n5105的软路由，之前隔壁路由器群开车时候500买的准系统，内存，之前旧笔记本里的8G条子，固态用的某多多十几块钱的16G傲腾，不过问题很多，断流遇到好几次了，n5105+i225这两玩意凑一起真的很难受<br>
刷了个opnewrt，上面就只跑了个科学和alist，其他都没用<br>
固件之前自己编译的，现在懒狗一个，直接用的这个高大全<a href="https://openwrt.mpdn.fun:8443/">https://openwrt.mpdn.fun:8443/</a><br>
科学用的passwall，可以直接用这个装<a href="https://github.com/xiaorouji/openwrt-passwall/releases">https://github.com/xiaorouji/openwrt-passwall/releases</a><br>
然后ipv6的ddns也在上面，我装了个openvpn ipv6回家，我这wireguard被qos很严重</p>
<p>后面的路由器是红米ax6+ax6000做ap<br>
ax6刷的openwrt，ax6000刷了openwrt，又被我刷回去了，做ap原厂系统就可以了</p>
<p>5105后面挂了个n5095的台电的小主机，装了个pve，里面一个黑群晖，本来还有个windows的，但是没啥用，被我删了</p>
<p>家里的网络 拓扑挺简单的<br>
hs8145x6 光猫-n5105软路由拨号科学-ax6和ax6000两硬路由做ap</p>
]]></content:encoded>
    </item>
    <item>
      <title>serverbox-一个探针类的app</title>
      <link>https://qklgblog.pages.dev/post/20230725/</link>
      <pubDate>Tue, 25 Jul 2023 13:14:19 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230725/</guid>
      <description>前几天看到的，各位mjj可以试下
github地址
https://github.com/lollipopkit/flutter_server_box
开源免费（ios要1刀）
可以监控linux服务器的状态，还有docker容器的状态
还能当ssh终端</description>
      <content:encoded><![CDATA[<p>前几天看到的，各位mjj可以试下<br>
github地址<br>
<a href="https://github.com/lollipopkit/flutter_server_box">https://github.com/lollipopkit/flutter_server_box</a><br>
开源免费（ios要1刀）<br>
可以监控linux服务器的状态，还有docker容器的状态<br>
还能当ssh终端</p>
]]></content:encoded>
    </item>
    <item>
      <title>pr靓仔，七毛鸡测试</title>
      <link>https://qklgblog.pages.dev/post/20230719/</link>
      <pubDate>Wed, 19 Jul 2023 13:16:30 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230719/</guid>
      <description>前言
玩具鸡，劝你们别上车，隔壁已经有人才刚买就被靓仔干了
不过就七毛钱，买来当玩具也不错
pr的0.1刀一个月也就是七毛钱的机子
1核1G内存10G硬盘100G流量
流媒体
yabs
# Yet-Another-Bench-Script # # v2023-04-23 # # https://github.com/masonr/yet-another-bench-script # # ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## # Tue 18 Jul 2023 10:26:48 PM UTC Basic System Information: --------------------------------- Uptime : 0 days, 0 hours, 14 minutes Processor : Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz CPU cores : 1 @ 2599.998 MHz AES-NI : ✔ Enabled VM-x/AMD-V : ✔ Enabled RAM : 989.</description>
      <content:encoded><![CDATA[<p>前言<br>
玩具鸡，劝你们别上车，隔壁已经有人才刚买就被靓仔干了<br>
不过就七毛钱，买来当玩具也不错</p>
<p>pr的0.1刀一个月也就是七毛钱的机子<br>
1核1G内存10G硬盘100G流量<br>
流媒体<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241317896.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241317461.png" alt=""  />
<br>
yabs</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#             Yet-Another-Bench-Script              #
</span></span><span class="line"><span class="cl">#                     v2023-04-23                    #
</span></span><span class="line"><span class="cl"># https://github.com/masonr/yet-another-bench-script #
</span></span><span class="line"><span class="cl"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tue 18 Jul 2023 10:26:48 PM UTC
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Basic System Information:
</span></span><span class="line"><span class="cl">---------------------------------
</span></span><span class="line"><span class="cl">Uptime     : 0 days, 0 hours, 14 minutes
</span></span><span class="line"><span class="cl">Processor  : Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz
</span></span><span class="line"><span class="cl">CPU cores  : 1 @ 2599.998 MHz
</span></span><span class="line"><span class="cl">AES-NI     : ✔ Enabled
</span></span><span class="line"><span class="cl">VM-x/AMD-V : ✔ Enabled
</span></span><span class="line"><span class="cl">RAM        : 989.7 MiB
</span></span><span class="line"><span class="cl">Swap       : 0.0 KiB
</span></span><span class="line"><span class="cl">Disk       : 9.8 GiB
</span></span><span class="line"><span class="cl">Distro     : Debian GNU/Linux 10 (buster)
</span></span><span class="line"><span class="cl">Kernel     : 4.19.0-20-cloud-amd64
</span></span><span class="line"><span class="cl">VM Type    : KVM
</span></span><span class="line"><span class="cl">IPv4/IPv6  : ✔ Online / ❌ Offline
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">IPv4 Network Information:
</span></span><span class="line"><span class="cl">---------------------------------
</span></span><span class="line"><span class="cl">ISP        : QuadraNet Enterprises LLC
</span></span><span class="line"><span class="cl">ASN        : AS64270 QuadraNet Enterprises LLC
</span></span><span class="line"><span class="cl">Host       : QuadraNet Enterprises LLC
</span></span><span class="line"><span class="cl">Location   : Los Angeles, California (CA)
</span></span><span class="line"><span class="cl">Country    : United States
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">fio Disk Speed Tests (Mixed R/W 50/50):
</span></span><span class="line"><span class="cl">---------------------------------
</span></span><span class="line"><span class="cl">Block Size | 4k            (IOPS) | 64k           (IOPS)
</span></span><span class="line"><span class="cl">  ------   | ---            ----  | ----           ---- 
</span></span><span class="line"><span class="cl">Read       | 184.18 MB/s  (46.0k) | 1.22 GB/s    (19.1k)
</span></span><span class="line"><span class="cl">Write      | 184.67 MB/s  (46.1k) | 1.23 GB/s    (19.2k)
</span></span><span class="line"><span class="cl">Total      | 368.85 MB/s  (92.2k) | 2.45 GB/s    (38.3k)
</span></span><span class="line"><span class="cl">           |                      |                     
</span></span><span class="line"><span class="cl">Block Size | 512k          (IOPS) | 1m            (IOPS)
</span></span><span class="line"><span class="cl">  ------   | ---            ----  | ----           ---- 
</span></span><span class="line"><span class="cl">Read       | 1.50 GB/s     (2.9k) | 434.03 MB/s    (423)
</span></span><span class="line"><span class="cl">Write      | 1.58 GB/s     (3.0k) | 462.94 MB/s    (452)
</span></span><span class="line"><span class="cl">Total      | 3.09 GB/s     (6.0k) | 896.98 MB/s    (875)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">iperf3 Network Speed Tests (IPv4):
</span></span><span class="line"><span class="cl">---------------------------------
</span></span><span class="line"><span class="cl">Provider        | Location (Link)           | Send Speed      | Recv Speed      | Ping           
</span></span><span class="line"><span class="cl">-----           | -----                     | ----            | ----            | ----           
</span></span><span class="line"><span class="cl">Clouvider       | London, UK (10G)          | 645 Mbits/sec   | 462 Mbits/sec   | 126 ms         
</span></span><span class="line"><span class="cl">Scaleway        | Paris, FR (10G)           | 817 Mbits/sec   | 429 Mbits/sec   | 147 ms         
</span></span><span class="line"><span class="cl">NovoServe       | North Holland, NL (40G)   | 603 Mbits/sec   | 550 Mbits/sec   | 153 ms         
</span></span><span class="line"><span class="cl">Uztelecom       | Tashkent, UZ (10G)        | busy            | 214 Mbits/sec   | 234 ms         
</span></span><span class="line"><span class="cl">Clouvider       | NYC, NY, US (10G)         | 901 Mbits/sec   | 187 Mbits/sec   | 57.2 ms        
</span></span><span class="line"><span class="cl">Clouvider       | Dallas, TX, US (10G)      | 891 Mbits/sec   | 686 Mbits/sec   | 27.1 ms        
</span></span><span class="line"><span class="cl">Clouvider       | Los Angeles, CA, US (10G) | 939 Mbits/sec   | 941 Mbits/sec   | 0.916 ms 
</span></span></code></pre></div><p>geekbench5<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241317473.png" alt=""  />
<br>
<a href="https://browser.geekbench.com/v5/cpu/21470888">https://browser.geekbench.com/v5/cpu/21470888</a><br>
四网回程</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[Info] 测试路由 到 上海电信(天翼云) 中 ...
</span></span><span class="line"><span class="cl">traceroute to 101.227.255.45 (101.227.255.45), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  undefined.hostname.localhost (66.63.179.1)  0.97 ms  AS64270  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 2  66.63.190.140.static.quadranet.com (66.63.190.140)  3.77 ms  AS8100  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 3  63.218.212.169  21.18 ms  AS3491,AS31713  美国, 加利福尼亚州, 洛杉矶, pccw.com
</span></span><span class="line"><span class="cl"> 4  TenGE0-0-0-3.br03.lax05.pccwbtn.net (63.223.43.98)  1.66 ms  AS3491,AS31713  美国, 加利福尼亚州, 洛杉矶, pccw.com
</span></span><span class="line"><span class="cl"> 5  TenGE0-0-0-3.br03.lax05.pccwbtn.net (63.223.43.98)  1.29 ms  AS3491,AS31713  美国, 加利福尼亚州, 洛杉矶, pccw.com
</span></span><span class="line"><span class="cl"> 6  218.30.53.86  2.41 ms  AS4134  美国, 加利福尼亚州, 洛杉矶, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 7  202.97.52.177  133.19 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 8  202.97.74.2  169.20 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 9  202.97.57.26  139.11 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">10  *
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 上海电信(天翼云) 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 厦门电信CN2 中 ...
</span></span><span class="line"><span class="cl">traceroute to 117.28.254.129 (117.28.254.129), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  undefined.hostname.localhost (66.63.179.1)  0.86 ms  AS64270  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 2  66.63.190.142.static.quadranet.com (66.63.190.142)  1.89 ms  AS8100  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 3  *
</span></span><span class="line"><span class="cl"> 4  59.43.182.81  133.02 ms  *  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 5  59.43.247.197  132.82 ms  *  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 6  59.43.159.17  140.23 ms  *  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 7  59.43.138.186  164.95 ms  *  中国, 福建, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 8  110.80.128.94  157.67 ms  AS133775  中国, 福建, 厦门, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  *
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  117.28.254.129  166.12 ms  AS4809  中国, 福建, 厦门, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 厦门电信CN2 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州联通 中 ...
</span></span><span class="line"><span class="cl">traceroute to 101.71.241.238 (101.71.241.238), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  undefined.hostname.localhost (66.63.179.1)  0.85 ms  AS64270  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 2  66.63.190.140.static.quadranet.com (66.63.190.140)  1.06 ms  AS8100  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 3  et-0-0-6-0-369.cr4-lax2.ip4.gtt.net (173.205.58.41)  9.96 ms  AS3257  美国, 加利福尼亚州, 洛杉矶, gtt.net
</span></span><span class="line"><span class="cl"> 4  ae28.cr2-sjc1.ip4.gtt.net (89.149.136.149)  9.92 ms  AS3257  美国, 加利福尼亚州, 圣何塞, gtt.net
</span></span><span class="line"><span class="cl"> 5  219.158.39.101  178.42 ms  AS4837  美国, 加利福尼亚州, 圣何塞, chinaunicom.com, 联通
</span></span><span class="line"><span class="cl"> 6  219.158.6.5  160.22 ms  AS4837  中国, 上海, chinaunicom.com, 联通
</span></span><span class="line"><span class="cl"> 7  219.158.6.209  158.21 ms  AS4837  中国, 上海, chinaunicom.com, 联通
</span></span><span class="line"><span class="cl"> 8  219.158.7.125  153.20 ms  AS4837  中国, 上海, chinaunicom.com, 联通
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  *
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州联通 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州移动 中 ...
</span></span><span class="line"><span class="cl">traceroute to 112.17.0.106 (112.17.0.106), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  undefined.hostname.localhost (66.63.179.1)  0.84 ms  AS64270  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 2  66.63.190.142.static.quadranet.com (66.63.190.142)  0.91 ms  AS8100  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 3  218.30.48.145  1.59 ms  AS4134  美国, 加利福尼亚州, 洛杉矶, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 4  59.43.182.81  133.49 ms  *  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 5  59.43.245.69  139.39 ms  *  中国, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 6  202.97.74.34  140.53 ms  AS4134  中国, 上海, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 7  *
</span></span><span class="line"><span class="cl"> 8  202.97.102.62  144.32 ms  AS4134  中国, 浙江, 杭州, chinatelecom.com.cn, 电信
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  221.183.94.45  164.84 ms  AS9808  中国, 浙江, 杭州, chinamobile.com, 移动
</span></span><span class="line"><span class="cl">11  *
</span></span><span class="line"><span class="cl">12  *
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  *
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 浙江杭州移动 完成 ！
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 北京教育网 中 ...
</span></span><span class="line"><span class="cl">traceroute to 202.205.6.30 (202.205.6.30), 30 hops max, 32 byte packets
</span></span><span class="line"><span class="cl"> 1  undefined.hostname.localhost (66.63.179.1)  0.76 ms  AS64270  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 2  66.63.190.140.static.quadranet.com (66.63.190.140)  1.26 ms  AS8100  美国, 加利福尼亚州, 洛杉矶, quadranet.com
</span></span><span class="line"><span class="cl"> 3  eqix-la1.chinamobile.com (206.223.123.137)  2.08 ms  *  美国, 加利福尼亚州, 洛杉矶, equinix.com 4  223.120.6.217  1.47 ms  AS58453  美国, 加利福尼亚州, 洛杉矶, chinamobile.com, 移动
</span></span><span class="line"><span class="cl"> 5  223.120.3.86  151.68 ms  AS58453  中国, 香港, chinamobile.com, 移动
</span></span><span class="line"><span class="cl"> 6  223.119.81.94  155.32 ms  AS58453  中国, 香港, chinamobile.com, 移动
</span></span><span class="line"><span class="cl"> 7  101.4.117.70  155.52 ms  AS4538  中国, 香港, edu.cn, 教育网
</span></span><span class="line"><span class="cl"> 8  101.4.114.181  183.83 ms  AS4538  中国, 北京, edu.cn, 教育网
</span></span><span class="line"><span class="cl"> 9  *
</span></span><span class="line"><span class="cl">10  101.4.117.81  181.02 ms  AS4538  中国, 北京, edu.cn, 教育网
</span></span><span class="line"><span class="cl">11  101.4.113.110  180.15 ms  AS4538  中国, 北京, edu.cn, 教育网
</span></span><span class="line"><span class="cl">12  219.224.102.230  190.99 ms  AS4538  中国, 北京, edu.cn, 教育网
</span></span><span class="line"><span class="cl">13  *
</span></span><span class="line"><span class="cl">14  *
</span></span><span class="line"><span class="cl">15  *
</span></span><span class="line"><span class="cl">16  *
</span></span><span class="line"><span class="cl">17  101.4.130.54  191.08 ms  AS4538  中国, 北京, edu.cn, 教育网
</span></span><span class="line"><span class="cl">18  *
</span></span><span class="line"><span class="cl">19  *
</span></span><span class="line"><span class="cl">20  *
</span></span><span class="line"><span class="cl">21  *
</span></span><span class="line"><span class="cl">22  *
</span></span><span class="line"><span class="cl">23  *
</span></span><span class="line"><span class="cl">24  *
</span></span><span class="line"><span class="cl">25  *
</span></span><span class="line"><span class="cl">26  *
</span></span><span class="line"><span class="cl">27  *
</span></span><span class="line"><span class="cl">28  *
</span></span><span class="line"><span class="cl">29  *
</span></span><span class="line"><span class="cl">30  *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Info] 测试路由 到 北京教育网 完成 ！
</span></span><span class="line"><span class="cl">[Info] 四网路由快速测试 已完成 ！
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>mjj综合症候群</title>
      <link>https://qklgblog.pages.dev/post/20230713/</link>
      <pubDate>Thu, 13 Jul 2023 13:17:57 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230713/</guid>
      <description>症状1 仓鼠症
不停买小鸡，买了又吃灰
买完鸡，付完款，测速性能测试跑一波，挂上探针，走一波流程然后吃灰
或者干脆直接买完就吃灰
症状2 刷子症
刷刷刷，刷pt，刷bt，刷完不看，放着吃灰
症状3 用不完就亏了症
相对于吃灰，这类mjj的话是流量不用玩，就觉得自己亏了，商家赚钱了，一定要跑完才行
症状4 免费就冲症
这个免费了，这个小鸡好便宜，冲冲冲
本人以上症状都有，是不是无可救药了</description>
      <content:encoded><![CDATA[<p>症状1  仓鼠症<br>
不停买小鸡，买了又吃灰<br>
买完鸡，付完款，测速性能测试跑一波，挂上探针，走一波流程然后吃灰<br>
或者干脆直接买完就吃灰</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202310241318384.png" alt=""  />
<br>
症状2  刷子症<br>
刷刷刷，刷pt，刷bt，刷完不看，放着吃灰<br>
症状3  用不完就亏了症<br>
相对于吃灰，这类mjj的话是流量不用玩，就觉得自己亏了，商家赚钱了，一定要跑完才行<br>
症状4 免费就冲症<br>
这个免费了，这个小鸡好便宜，冲冲冲</p>
<p>本人以上症状都有，是不是无可救药了</p>
]]></content:encoded>
    </item>
    <item>
      <title>那些外币借记卡</title>
      <link>https://qklgblog.pages.dev/post/20230712/</link>
      <pubDate>Wed, 12 Jul 2023 13:19:06 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230712/</guid>
      <description>本贴写给那些办不了信用卡的学生，或者不想办信用卡的
1中国银行的visa和master card借记卡
mjj常用的非人哉，莫奈卡，这两是master
目前就上海分行的莫奈和非人哉可以网申，不过这一会行，一会不行的，其他的得去线下，一般得地级市的分行估计才有
得配一张银联的借记卡，购汇才能用
没年费
具体怎么玩可以看这个大佬的这个博客
链接
2美国运通的借记卡
主要3家，广发，兴业 中信
直接人民币入账，不需要购汇，在国内还能绑支付宝微信云闪付
具体怎么玩看这个
https://t.me/DocOfCard/1643
3其他
工商的牡丹卡，这玩意只能线下开，而且网点很少，有条件的话可以去试下
中信的visa和master card坑太多，不推荐了
其他的卡啥的看这个大佬的博客
https://docofcard.com/archives/foreign-debit-card/
这个大佬总结的很详细
目前国内开的非银联借记卡就2种值的推荐的，一个中行的非人哉和莫奈卡和运通的借记卡，尽量两个都办了，运通支持的地方比visa和master card少，而且国内的运通人民币卡是和连连支付合作的，卡段都很特殊，很容易拒付，我的兴业的运通卡试过，很多地方都不行，visa和master card的适用性肯定比运通强的，借记卡一般大部分地方都能支付，还有能走PayPal就走PayPal，汇率设置下没啥问题，还能争议，避免被坑，不过有条件还是上信用卡吧</description>
      <content:encoded><![CDATA[<p>本贴写给那些办不了信用卡的学生，或者不想办信用卡的<br>
1中国银行的visa和master card借记卡<br>
mjj常用的非人哉，莫奈卡，这两是master<br>
目前就上海分行的莫奈和非人哉可以网申，不过这一会行，一会不行的，其他的得去线下，一般得地级市的分行估计才有<br>
得配一张银联的借记卡，购汇才能用<br>
没年费<br>
具体怎么玩可以看这个大佬的这个博客<br>
<a href="https://www.nodeseek.com/jump?to=https%3A%2F%2Fpoplite.xyz%2Fpost%2F2018%2F03%2F05%2Fboc-debit-card-guide-for-online-payment.html%239-%25E5%25A4%2596%25E9%2583%25A8%25E9%2593%25BE%25E6%258E%25A5">链接</a></p>
<p>2美国运通的借记卡<br>
主要3家，广发，兴业 中信<br>
直接人民币入账，不需要购汇，在国内还能绑支付宝微信云闪付<br>
具体怎么玩看这个<br>
<a href="https://t.me/DocOfCard/1643">https://t.me/DocOfCard/1643</a></p>
<p>3其他<br>
工商的牡丹卡，这玩意只能线下开，而且网点很少，有条件的话可以去试下<br>
中信的visa和master card坑太多，不推荐了<br>
其他的卡啥的看这个大佬的博客<br>
<a href="https://docofcard.com/archives/foreign-debit-card/">https://docofcard.com/archives/foreign-debit-card/</a><br>
这个大佬总结的很详细</p>
<p>目前国内开的非银联借记卡就2种值的推荐的，一个中行的非人哉和莫奈卡和运通的借记卡，尽量两个都办了，运通支持的地方比visa和master card少，而且国内的运通人民币卡是和连连支付合作的，卡段都很特殊，很容易拒付，我的兴业的运通卡试过，很多地方都不行，visa和master card的适用性肯定比运通强的，借记卡一般大部分地方都能支付，还有能走PayPal就走PayPal，汇率设置下没啥问题，还能争议，避免被坑，不过有条件还是上信用卡吧</p>
]]></content:encoded>
    </item>
    <item>
      <title>vir东京37号母鸡的v6解决了</title>
      <link>https://qklgblog.pages.dev/post/20230711/</link>
      <pubDate>Tue, 11 Jul 2023 13:20:38 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230711/</guid>
      <description>感谢[url=home.php?mod=space&amp;amp;uid=26740]@IDC888[/url] 和 [url=home.php?mod=space&amp;amp;uid=45426]@landscape[/url] 大佬
virmach东京的ipv6有能用的吗？
https://hostloc.com/thread-1186369-1-1.html
(出处: 全球主机交流论坛)
看这个帖子的7楼landscape 大佬的办法
就是网关的问题
我37号母鸡，这个网关是2a12:a300:3700::1
其他母鸡应该是把37换成你所在母鸡的编号
群友29母鸡的网关是2a12:a300:2900::1
37号母鸡的作业在下面，第一行的ip adr不要动，我的是/64，不知道为啥landscape大佬的是/40的，我没动
把第二行和第三行换成下面的，然后ssh打service networking restart就可以了，v6就出来了
up ip addr add 2a12:a301:0:4::xxxx:xxxx/64 dev eth0 up ip -6 route add 2a12:a300:3700::1 dev eth0 up ip -6 route add default via 2a12:a300:3700::1 顺带测了下流媒体解锁
最后感谢一波vir胖子，本来买vir什么都不会的，现在啥也学会了，什么救援模式dd系统，vnc配网，还顺带学了个英语，pending这个单词以前不怎么认识，现在印象深刻，还可以享受性欲不加，还能帮胖子买跑车，做慈善，vir真是太棒了
自己要dd的话用，我用的萌咖的dd脚本，这是debian10的，要11的话把-d后面的10换成11，12的话也行，前几天试了下，太吃内存了，就d回去了
bash &amp;lt;(wget --no-check-certificate -qO- &amp;#39;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&amp;#39;) -d 10 -v 64 -p &amp;#34;密码&amp;#34; -port &amp;#34;端口&amp;#34; dd完后，进 /etc/network/interfaces
再后面加这几个，加完保存，reboot重启下就ok了,其他的有ipv6的小鸡也可以dd完这么加，ovh的0.97就能用
iface ens3 inet6 static address 2a12:a301:0:4::xxxx:xxxx netmask 64 gateway 2a12:a300:3700::1 dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844 ens3的话改成你文件里前面IPV4中&amp;quot;iface xxxx inet static&amp;quot;</description>
      <content:encoded><![CDATA[<p>感谢[url=home.php?mod=space&amp;uid=26740]@IDC888[/url] 和 [url=home.php?mod=space&amp;uid=45426]@landscape[/url] 大佬</p>
<p>virmach东京的ipv6有能用的吗？<br>
<a href="https://hostloc.com/thread-1186369-1-1.html">https://hostloc.com/thread-1186369-1-1.html</a><br>
(出处: 全球主机交流论坛)<br>
看这个帖子的7楼landscape 大佬的办法<br>
就是网关的问题<br>
我37号母鸡，这个网关是2a12:a300:3700::1<br>
其他母鸡应该是把37换成你所在母鸡的编号<br>
群友29母鸡的网关是2a12:a300:2900::1</p>
<p>37号母鸡的作业在下面，第一行的ip adr不要动，我的是/64，不知道为啥landscape大佬的是/40的，我没动<br>
把第二行和第三行换成下面的，然后ssh打service networking restart就可以了，v6就出来了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">   up ip addr add 2a12:a301:0:4::xxxx:xxxx/64 dev eth0
</span></span><span class="line"><span class="cl">   up ip -6 route add 2a12:a300:3700::1 dev eth0
</span></span><span class="line"><span class="cl">   up ip -6 route add default via 2a12:a300:3700::1
</span></span></code></pre></div><p>顺带测了下流媒体解锁<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241320986.png" alt=""  />
</p>
<p>最后感谢一波vir胖子，本来买vir什么都不会的，现在啥也学会了，什么救援模式dd系统，vnc配网，还顺带学了个英语，pending这个单词以前不怎么认识，现在印象深刻，还可以享受性欲不加，还能帮胖子买跑车，做慈善，vir真是太棒了</p>
<p>自己要dd的话用，我用的萌咖的dd脚本，这是debian10的，要11的话把-d后面的10换成11，12的话也行，前几天试了下，太吃内存了，就d回去了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">bash &lt;(wget --no-check-certificate -qO- &#39;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#39;) -d 10 -v 64 -p &#34;密码&#34; -port &#34;端口&#34;
</span></span></code></pre></div><p>dd完后，进 /etc/network/interfaces</p>
<p>再后面加这几个，加完保存，reboot重启下就ok了,其他的有ipv6的小鸡也可以dd完这么加，ovh的0.97就能用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">iface ens3 inet6 static
</span></span><span class="line"><span class="cl">address 2a12:a301:0:4::xxxx:xxxx
</span></span><span class="line"><span class="cl">netmask 64
</span></span><span class="line"><span class="cl">gateway 2a12:a300:3700::1
</span></span><span class="line"><span class="cl">dns-nameservers 2001:4860:4860::8888 2001:4860:4860::8844
</span></span></code></pre></div><p>ens3的话改成你文件里前面IPV4中&quot;iface xxxx inet static&quot;<br>
address的话你vir面板的ipv6地址<br>
netmask的话我的是64，也有40的，这个看你原版系统里的吧应该<br>
gateway的话就是前面的网关，我37号母鸡的是2a12:a300:3700::1，群友的29号的是2a12:a300:2900::1，改成你自己所在母鸡的<br>
dns的话我用谷歌的，你用cf的话也行，随便了</p>
]]></content:encoded>
    </item>
    <item>
      <title>用cloudflare tunnel把你的博客放在你的路由器上</title>
      <link>https://qklgblog.pages.dev/post/20230709/</link>
      <pubDate>Sun, 09 Jul 2023 13:21:50 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230709/</guid>
      <description>1cf官网
①打开cloudflare的控制台，选择左边的zero trust，选择计划免费就行，绑完支付方式就能用了，不会扣费的，放心好了，只用tunnel的话，绑完可以去账单，付款方式里把卡删掉就可以了
②点击左边access-tunnels
③选择creat a tunnel，tunnel name随便去个名字就行,然后点击save tunnel
这边准备工作就完成了
2本地设备
①如果你用的是openwrt路由器的话，直接参考这位大佬的教程
https://hostloc.com/thread-1154840-1-1.html
其他各平台的cf那边都有怎么做的
②如果你是和我一样的懒狗，选择docker，然后复制下面的install and run，直接进路由器或者别的支持docker的平台上ssh进去直接一键梭哈就行了
如果成功的话，回到之前的界面
这边status会变成绿色healty，这表示隧道创建成功了
3搭建博客
①我选择halo，还是因为我是懒狗，可以直接dcoker一键梭哈，不用配置乱七八糟的
参考halo官网的文档，直接运行以下命令就行就行，记得把P@88w0rd改成自己的密码，复杂点的尽量
具体参数啥的文档里都有
https://docs.halo.run/getting-started/install/docker
docker run \ -it -d \ --name halo \ -p 8090:8090 \ -v ~/.halo2:/root/.halo2 \ halohub/halo:2.7 \ --halo.external-url=http://localhost:8090/ \ --halo.security.initializer.superadminusername=admin \ --halo.security.initializer.superadminpassword=P@88w0rd ②输入你路由器ip:8090端口就可以访问你的halo的博客了
输入账户admin，密码就行了，站点名称，随便取个就行了
③回到cloudflare官网
access-tunnels
右边三个点，选择configure
选择public hostname，再点add a public hostanme
选择你想访问的域名，然后按照下面的输入就行了
hostname就是你公网访问的域名，这个自己整
service就是你路由器局域网访问ip。比方说我的博客是http://192.168.1.1:8090
选择http,然后后面输192.168.1.1:8090就ok
然后点击save hostname保存
浏览器打开你刚刚输入的host name，就可以访问了，也可以把其他的端口弄到公网上
关于速度，国内访问cf，一般都是到美西的节点，基本上绕了大半个地球回来，所以速度就那样了，当个玩具用用不错</description>
      <content:encoded><![CDATA[<p>1cf官网</p>
<p>①打开cloudflare的控制台，选择左边的zero trust，选择计划免费就行，绑完支付方式就能用了，不会扣费的，放心好了，只用tunnel的话，绑完可以去账单，付款方式里把卡删掉就可以了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241322743.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241322497.png" alt=""  />
<br>
②点击左边access-tunnels<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241322693.png" alt=""  />
<br>
③选择creat a tunnel，tunnel name随便去个名字就行,然后点击save tunnel<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323514.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323594.png" alt=""  />
<br>
这边准备工作就完成了</p>
<p>2本地设备</p>
<p>①如果你用的是openwrt路由器的话，直接参考这位大佬的教程<br>
<a href="https://hostloc.com/thread-1154840-1-1.html">https://hostloc.com/thread-1154840-1-1.html</a></p>
<p>其他各平台的cf那边都有怎么做的<br>
②如果你是和我一样的懒狗，选择docker，然后复制下面的install and run，直接进路由器或者别的支持docker的平台上ssh进去直接一键梭哈就行了</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202310241323818.png" alt=""  />
<br>
如果成功的话，回到之前的界面<br>
这边status会变成绿色healty，这表示隧道创建成功了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323843.png" alt=""  />
<br>
3搭建博客<br>
①我选择halo，还是因为我是懒狗，可以直接dcoker一键梭哈，不用配置乱七八糟的<br>
参考halo官网的文档，直接运行以下命令就行就行，记得把P@88w0rd改成自己的密码，复杂点的尽量<br>
具体参数啥的文档里都有<br>
<a href="https://docs.halo.run/getting-started/install/docker">https://docs.halo.run/getting-started/install/docker</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">docker run \
</span></span><span class="line"><span class="cl">  -it -d \
</span></span><span class="line"><span class="cl">  --name halo \
</span></span><span class="line"><span class="cl">  -p 8090:8090 \
</span></span><span class="line"><span class="cl">  -v ~/.halo2:/root/.halo2 \
</span></span><span class="line"><span class="cl">  halohub/halo:2.7 \
</span></span><span class="line"><span class="cl">  --halo.external-url=http://localhost:8090/ \
</span></span><span class="line"><span class="cl">  --halo.security.initializer.superadminusername=admin \
</span></span><span class="line"><span class="cl">  --halo.security.initializer.superadminpassword=P@88w0rd
</span></span></code></pre></div><p>②输入你路由器ip:8090端口就可以访问你的halo的博客了<br>
输入账户admin，密码就行了，站点名称，随便取个就行了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323423.png" alt=""  />
</p>
<p>③回到cloudflare官网<br>
access-tunnels<br>
右边三个点，选择configure<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323520.png" alt=""  />
<br>
选择public hostname，再点add a public hostanme<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241323028.png" alt=""  />
<br>
选择你想访问的域名，然后按照下面的输入就行了<br>
hostname就是你公网访问的域名，这个自己整<br>
service就是你路由器局域网访问ip。比方说我的博客是http://192.168.1.1:8090<br>
选择http,然后后面输192.168.1.1:8090就ok<br>
然后点击save hostname保存<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241324333.png" alt=""  />
<br>
浏览器打开你刚刚输入的host name，就可以访问了，也可以把其他的端口弄到公网上</p>
<p>关于速度，国内访问cf，一般都是到美西的节点，基本上绕了大半个地球回来，所以速度就那样了，当个玩具用用不错</p>
]]></content:encoded>
    </item>
    <item>
      <title>Remove-MS-Edge – Windows 下的 Edge 卸载器</title>
      <link>https://qklgblog.pages.dev/post/20230708/</link>
      <pubDate>Sat, 08 Jul 2023 13:25:48 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230708/</guid>
      <description>edge最近越来越流氓了
用这个直接让edge滚蛋
怎么用看隔壁小众软件上帖子
https://www.appinn.com/remove-ms-edge/
github项目地址
https://github.com/ShadowWhisperer/Remove-MS-Edge/</description>
      <content:encoded><![CDATA[<p>edge最近越来越流氓了<br>
用这个直接让edge滚蛋<br>
怎么用看隔壁小众软件上帖子<br>
<a href="https://www.appinn.com/remove-ms-edge/">https://www.appinn.com/remove-ms-edge/</a><br>
github项目地址<br>
<a href="https://github.com/ShadowWhisperer/Remove-MS-Edge/">https://github.com/ShadowWhisperer/Remove-MS-Edge/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>tabserver,用cf worker转发本地local host</title>
      <link>https://qklgblog.pages.dev/post/20230703/</link>
      <pubDate>Mon, 03 Jul 2023 13:27:16 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230703/</guid>
      <description>https://tabserve.dev/
mjj来试下，用cf worker转发本地local host</description>
      <content:encoded><![CDATA[<p><a href="https://tabserve.dev/">https://tabserve.dev/</a><br>
mjj来试下，用cf worker转发本地local host</p>
]]></content:encoded>
    </item>
    <item>
      <title>用cloudflare的api，关闭ipv6兼容性</title>
      <link>https://qklgblog.pages.dev/post/20230630/</link>
      <pubDate>Fri, 30 Jun 2023 13:28:40 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230630/</guid>
      <description>有时候有些莫名其妙的问题，其实关闭v6就能解决，但是
cloudflare的设置中的IPv6 兼容性开关是动不了的，需要20刀以上pro才能点
但是我们可以用api来关闭
参考cloudflare的文档
需要用的三个参数，1区域id，2邮箱 3global api key
打开cf你的域名，域名那边有个域名区域id
申请global api key
https://dash.cloudflare.com/profile/api-tokens
然后在linux上打以下命令,就可以关闭ipv6了，要打开的话就把off换成on就可以了
curl -X PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/域名区域id/settings/ipv6&amp;#34; \ -H &amp;#34;X-Auth-Email: 你的cf邮箱&amp;#34; \ -H &amp;#34;X-Auth-Key:你的Global API Key&amp;#34; \ -H &amp;#34;Content-Type: application/json&amp;#34; \ --data &amp;#39;{&amp;#34;value&amp;#34;:&amp;#34;off&amp;#34;}&amp;#39; 如果出现以下结果，就是成功了
{ &amp;#34;errors&amp;#34;: [], &amp;#34;messages&amp;#34;: [], &amp;#34;success&amp;#34;: true, &amp;#34;result&amp;#34;: null } </description>
      <content:encoded><![CDATA[<p>有时候有些莫名其妙的问题，其实关闭v6就能解决，但是<br>
cloudflare的设置中的IPv6 兼容性开关是动不了的，需要20刀以上pro才能点<br>
但是我们可以用api来关闭<br>
参考cloudflare的<a href="https://developers.cloudflare.com/api/operations/zone-settings-change-i-pv6-setting">文档</a><br>
需要用的三个参数，1区域id，2邮箱 3global api key<br>
打开cf你的域名，域名那边有个域名区域id<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241329534.png" alt=""  />
<br>
申请global api key<br>
<a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241329519.png" alt=""  />
</p>
<p>然后在linux上打以下命令,就可以关闭ipv6了，要打开的话就把off换成on就可以了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -X PATCH &#34;https://api.cloudflare.com/client/v4/zones/域名区域id/settings/ipv6&#34; \
</span></span><span class="line"><span class="cl">     -H &#34;X-Auth-Email: 你的cf邮箱&#34; \
</span></span><span class="line"><span class="cl">     -H &#34;X-Auth-Key:你的Global API Key&#34; \
</span></span><span class="line"><span class="cl">     -H &#34;Content-Type: application/json&#34; \
</span></span><span class="line"><span class="cl">     --data &#39;{&#34;value&#34;:&#34;off&#34;}&#39;
</span></span></code></pre></div><p>如果出现以下结果，就是成功了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  &#34;errors&#34;: [],
</span></span><span class="line"><span class="cl">  &#34;messages&#34;: [],
</span></span><span class="line"><span class="cl">  &#34;success&#34;: true,
</span></span><span class="line"><span class="cl">  &#34;result&#34;: null
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>推荐个可以下大图片网站</title>
      <link>https://qklgblog.pages.dev/post/20230629/</link>
      <pubDate>Thu, 29 Jun 2023 13:30:39 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230629/</guid>
      <description>欧洲南方天文台，这站很多大的图https://www.eso.org/public/images/</description>
      <content:encoded><![CDATA[<p>欧洲南方天文台，这站很多大的图<a href="https://www.eso.org/public/images/">https://www.eso.org/public/images/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>用api把cloudflare的证书换成自家一年的</title>
      <link>https://qklgblog.pages.dev/post/20230628/</link>
      <pubDate>Wed, 28 Jun 2023 13:31:34 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230628/</guid>
      <description>cloudflare目前的话提供了四种证书，一种是自家一年的，还有let‘s的，谷歌的，都是三个月的，还有setcigo的三个月的，但是怎么没见到，之前的话一直都是一年的证书，现在基本上都是三个月的，主要是let‘s和谷歌的两种，nodeseek就是谷歌的三个月的，其实我们可以利用api来切换这，参考cloudflare的文档里的[certificate authority]https://developers.cloudflare.com/ssl/reference/certificate-authorities/)
来切换四种证书，其实也可以完全不管，因为都是自动签的，let&amp;rsquo;s的证书的话可能会导致部分旧平台，比方说旧安卓手机和win7的电脑兼容性不好，还有国产的360浏览器不把它添加进信任列表,所以切不切其实看你自己了
下面介绍两种办法来切证书，其实都是发起api来的，本质上一样的，只是第一种稍微简单点
首先都要申请global api key
https://dash.cloudflare.com/profile/api-tokens
第一种方法
dnsfalre，这个是我之前用来修改以前cfp的cname接入的域名时候发现的，具体怎么玩可以参考这个大佬的博客https://luotianyi.vc/6415.html,可以自己部署，我们这次只是用来修改证书
作者github的项目地址https://github.com/5aaee9/Dnsflare
我们直接用作者的演示站就行了，是本地浏览器发起api请求的
打开https://dnsflare-indexyz.vercel.app/，
输入你的邮箱和global api key
点击提交登录
选择你的域名
点击下面的证书供应商，就可以切换你的域名的证书了，选择digicert就是cf自家的一年的了，let&amp;rsquo;s和谷歌的话就是三个月的，有cf自家当然选cf自家的了
这时候我们去cf的后台，就可以看到cf的自家的一年证书已经签发了
第二种，
打开cf你的域名，域名那边有个域名区域id，要用的
然后在小鸡的ssh上打下面的命令
curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key:你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;digicert\&amp;#34;}&amp;#34; 换成谷歌的话就把digicert换成google
curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key:你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;google\&amp;#34;}&amp;#34; 换成let&amp;rsquo;s的digicert 为 lets_encrypt
curl -sX PATCH &amp;#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&amp;#34; -H &amp;#34;X-Auth-Email:你的邮箱&amp;#34; -H &amp;#34;X-Auth-Key: 你的global api key&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; --data &amp;#34;{\&amp;#34;certificate_authority\&amp;#34;:\&amp;#34;lets_encrypt\&amp;#34;}&amp;#34; 如果出现以下结果的话，就是成功了</description>
      <content:encoded><![CDATA[<p>cloudflare目前的话提供了四种证书，一种是自家一年的，还有let‘s的，谷歌的，都是三个月的，还有setcigo的三个月的，但是怎么没见到，之前的话一直都是一年的证书，现在基本上都是三个月的，主要是let‘s和谷歌的两种，nodeseek就是谷歌的三个月的，其实我们可以利用api来切换这，参考cloudflare的文档里的[certificate authority]https://developers.cloudflare.com/ssl/reference/certificate-authorities/)<br>
来切换四种证书，其实也可以完全不管，因为都是自动签的，let&rsquo;s的证书的话可能会导致部分旧平台，比方说旧安卓手机和win7的电脑兼容性不好，还有国产的360浏览器不把它添加进信任列表,所以切不切其实看你自己了<br>
下面介绍两种办法来切证书，其实都是发起api来的，本质上一样的，只是第一种稍微简单点<br>
首先都要申请global api key<br>
<a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241331518.png" alt=""  />
<br>
第一种方法<br>
dnsfalre，这个是我之前用来修改以前cfp的cname接入的域名时候发现的，具体怎么玩可以参考这个大佬的博客<a href="https://luotianyi.vc/6415.html">https://luotianyi.vc/6415.html</a>,可以自己部署，我们这次只是用来修改证书<br>
作者github的项目地址<a href="https://github.com/5aaee9/Dnsflare">https://github.com/5aaee9/Dnsflare</a><br>
我们直接用作者的演示站就行了，是本地浏览器发起api请求的<br>
打开<a href="https://dnsflare-indexyz.vercel.app/">https://dnsflare-indexyz.vercel.app/</a>，<br>
输入你的邮箱和global api key<br>
点击提交登录<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332052.png" alt=""  />
<br>
选择你的域名<br>
点击下面的证书供应商，就可以切换你的域名的证书了，选择digicert就是cf自家的一年的了，let&rsquo;s和谷歌的话就是三个月的，有cf自家当然选cf自家的了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332740.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332278.png" alt=""  />
<br>
这时候我们去cf的后台，就可以看到cf的自家的一年证书已经签发了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332599.png" alt=""  />
</p>
<p>第二种，<br>
打开cf你的域名，域名那边有个域名区域id，要用的<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332273.png" alt=""  />
<br>
然后在小鸡的ssh上打下面的命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key:你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;digicert\&#34;}&#34;
</span></span></code></pre></div><p>换成谷歌的话就把digicert换成google</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key:你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;google\&#34;}&#34;
</span></span></code></pre></div><p>换成let&rsquo;s的digicert 为 lets_encrypt</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl -sX PATCH &#34;https://api.cloudflare.com/client/v4/zones/你的域名区域id/ssl/universal/settings&#34; -H &#34;X-Auth-Email:你的邮箱&#34; -H &#34;X-Auth-Key: 你的global api key&#34; -H &#34;Content-Type: application/json&#34; --data &#34;{\&#34;certificate_authority\&#34;:\&#34;lets_encrypt\&#34;}&#34;
</span></span></code></pre></div><p>如果出现以下结果的话，就是成功了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{&#34;result&#34;:{&#34;enabled&#34;:true,&#34;certificate_authority&#34;:&#34;lets_encrypt&#34;},&#34;success&#34;:true,&#34;errors&#34;:[],&#34;messages&#34;
</span></span></code></pre></div><p>如果没反应的话，打开cf的控制台，禁用通用ssl，然后再打命令，然后再启用，反复多试几次就行了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241332372.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>那些免费证书</title>
      <link>https://qklgblog.pages.dev/post/20230626/</link>
      <pubDate>Mon, 26 Jun 2023 13:33:59 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230626/</guid>
      <description>1 一年的单域名的证书
都是国内云厂商提供的，都是要实名的
第一个是华为云和阿里云的encryption everywhere
华为云的怎么申请看这里
https://www.huaweicloud.com/zhishi/sslfree.html
阿里云的https://developer.aliyun.com/article/875508
trust asia的，腾讯，宝塔，ucloud,青云，好像还有几个，
但是记得，同一主域最多只能申请20张
腾讯https://console.cloud.tencent.com/ssl,有个免费证书，点进去
宝塔直接在面板里就有
ucloud https://console.ucloud.cn/ussl/Free
青云https://www.qingcloud.com/pricing#/SSLCertificate
2 acme.sh申请的三个月的通配符证书
Let&amp;rsquo;s Encrypt ,zerossl和谷歌的三个月的
系统是debian
①安装acme.sh
curl https://get.acme.sh | sh 如果报错，安装socat
apt install socat -y 确认acme.sh已经安装，显示acme.sh版本,如果没反应的话重启下
acme.sh -v ②切换默认ca
切换成Let&amp;rsquo;s encrypt
acme.sh --set-default-ca --server letsencrypt 切换成gcp的
acme.sh --set-default-ca --server google 切换成zerossl
acme.sh --set-default-ca --server zerossl zerossl要邮箱的，https://app.zerossl.com/signup,在这边注册个账户,然后输入下面的命令就行
acme.sh --register-account -m my@example.com ②.5 如果用gcp的证书的话申请gcp证书的api
https://console.cloud.google.com/
cloudshell
gcloud beta publicca external-account-keys create acme.sh --register-account --server google -m xxx@gmail.</description>
      <content:encoded><![CDATA[<p>1   一年的单域名的证书<br>
都是国内云厂商提供的，都是要实名的<br>
第一个是华为云和阿里云的encryption everywhere</p>
<p>华为云的怎么申请看这里<br>
<a href="https://www.huaweicloud.com/zhishi/sslfree.html">https://www.huaweicloud.com/zhishi/sslfree.html</a><br>
阿里云的<a href="https://developer.aliyun.com/article/875508">https://developer.aliyun.com/article/875508</a><br>
trust asia的，腾讯，宝塔，ucloud,青云，好像还有几个，<br>
但是记得，同一主域最多只能申请20张<br>
腾讯<a href="https://console.cloud.tencent.com/ssl">https://console.cloud.tencent.com/ssl</a>,有个免费证书，点进去<br>
宝塔直接在面板里就有<br>
ucloud <a href="https://console.ucloud.cn/ussl/Free">https://console.ucloud.cn/ussl/Free</a><br>
青云<a href="https://www.qingcloud.com/pricing#/SSLCertificate">https://www.qingcloud.com/pricing#/SSLCertificate</a></p>
<p>2 acme.sh申请的三个月的通配符证书<br>
Let&rsquo;s Encrypt ,zerossl和谷歌的三个月的</p>
<p>系统是debian<br>
①安装acme.sh</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl https://get.acme.sh | sh
</span></span></code></pre></div><p>如果报错，安装socat</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt install socat -y
</span></span></code></pre></div><p>确认acme.sh已经安装，显示acme.sh版本,如果没反应的话重启下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh -v
</span></span></code></pre></div><p>②切换默认ca<br>
切换成Let&rsquo;s encrypt</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --set-default-ca --server letsencrypt
</span></span></code></pre></div><p>切换成gcp的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --set-default-ca --server google
</span></span></code></pre></div><p>切换成zerossl</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --set-default-ca  --server zerossl
</span></span></code></pre></div><p>zerossl要邮箱的，<a href="https://app.zerossl.com/signup">https://app.zerossl.com/signup</a>,在这边注册个账户,然后输入下面的命令就行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --register-account -m my@example.com
</span></span></code></pre></div><p>②.5 如果用gcp的证书的话申请gcp证书的api<br>
<a href="https://console.cloud.google.com/">https://console.cloud.google.com/</a></p>
<p>cloudshell</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">gcloud beta publicca external-account-keys create
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --register-account --server google -m xxx@gmail.com 
</span></span><span class="line"><span class="cl">--eab-hmac-key 申请到b64MacKey
</span></span><span class="line"><span class="cl">--eab-kid 申请到的keyId]
</span></span></code></pre></div><p>③设置api<br>
腾讯云dnspod api获取地址<br>
<a href="https://console.dnspod.cn/account/token/apikey">https://console.dnspod.cn/account/token/apikey</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="k">export</span> <span class="n">DP_Id</span><span class="o">=</span><span class="s2">&#34;123456&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">export</span> <span class="n">DP_Key</span><span class="o">=</span><span class="s2">&#34;abcdefg&#34;</span>
</span></span></code></pre></div><p>阿里云dns api<br>
<a href="https://usercenter.console.aliyun.com/#/manage/ak">https://usercenter.console.aliyun.com/#/manage/ak</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="k">export</span> <span class="n">Ali_Key</span><span class="o">=</span><span class="s2">&#34;AccessKeyId&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">export</span> <span class="n">Ali_Secret</span><span class="o">=</span><span class="s2">&#34;AccessKeySecret&#34;</span>
</span></span></code></pre></div><p>cloudflare的api的话<br>
<a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a><br>
申请Global API Key</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="k">export</span> <span class="n">CF_Key</span><span class="o">=</span><span class="s2">&#34;Global API Key&#34;</span> 
</span></span><span class="line"><span class="cl"><span class="k">export</span> <span class="n">CF_Email</span><span class="o">=</span><span class="s2">&#34;你cloudflare邮箱&#34;</span>
</span></span></code></pre></div><p>④申请证书</p>
<p>腾讯云dnspod</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --issue --dns dns_dp -d xxx.com -d *.xxx.com
</span></span></code></pre></div><p>阿里云dns</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --issue --dns dns_ali -d xxx.com -d *.xxx.com
</span></span></code></pre></div><p>cloudflare</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">acme.sh --issue --dns dns_cf -d *.xxx.com -d xxx.com
</span></span></code></pre></div><p>还有半年的bypass证书，不过是单域名的，还不如阿里腾讯啥的一年的，我就没申请了<br>
不想敲命令的话，可以试下这个,在线申请<br>
<a href="https://letsencrypt.osfipin.com/">https://letsencrypt.osfipin.com/</a><br>
怎么玩的话看imgurl图床作者的博客<br>
<a href="https://blog.xiaoz.org/archives/18775">https://blog.xiaoz.org/archives/18775</a><br>
3cf的那个15年的是自签证书，要配合他家cdn用的，现在所有浏览器，谷歌chrome，微软edge，苹果safari，火狐，还有那种套壳的，里面的证书通通最多就13个月<br>
两年的证书已经成历史了<br>
这15年时给你回源用的，得配合cf的cdn，点亮小云朵才行</p>
]]></content:encoded>
    </item>
    <item>
      <title>ihostart罗马尼亚灵车</title>
      <link>https://qklgblog.pages.dev/post/20230620/</link>
      <pubDate>Tue, 20 Jun 2023 13:37:29 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230620/</guid>
      <description>ihostart罗马尼亚灵车
论坛25块钱收来的
配置如图，v4被墙了，v6坏了，拿来当玩具用
先来上个geekbench5开开胃，单核300多，也不是不能用
再来个yabs，石头硬盘
再来个流媒体
最后来个bench.sh
v4被墙了，去回程和国内三网不测了</description>
      <content:encoded><![CDATA[<p>ihostart罗马尼亚灵车<br>
论坛25块钱收来的<br>
配置如图，v4被墙了，v6坏了，拿来当玩具用<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241338363.png" alt=""  />
<br>
先来上个geekbench5开开胃，单核300多，也不是不能用<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241338781.png" alt=""  />
<br>
再来个yabs，石头硬盘<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241338930.png" alt=""  />
<br>
再来个流媒体<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241338136.png" alt=""  />
<br>
最后来个bench.sh<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241338344.png" alt=""  />
<br>
v4被墙了，去回程和国内三网不测了</p>
]]></content:encoded>
    </item>
    <item>
      <title>rclone挂载webdav,以infini-cloud为列</title>
      <link>https://qklgblog.pages.dev/post/20230619/</link>
      <pubDate>Mon, 19 Jun 2023 13:35:25 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230619/</guid>
      <description>1安装rclone
①先去rclone官网找到你的版本
官网链接https://rclone.org/downloads/
②没sudo的话先安装下sudo，我一般用的是debian，直接
apt install sudo ③然后直接输入，安装rclone
sudo -v ; curl https://rclone.org/install.sh | sudo bash 安装完成的话长这样子
2
获取infini-cloud的配置
登录状态下打开这个链接
https://infini-cloud.net/en/modules/mypage/usage/
把Turn on Apps Connection给勾上
记住你的id和密码，密码只会显示一次，记得保存下
三个参数，一个url，一个id，一个password，准备好
url的话下面3④里面用到
Connection ID就是3⑤user
Apps Password	的话3
3配置rclone
①在你的ssh中输入
rclone config 会出来一排参数,中文啥意思，标在后面了，用gpt翻译的
n) New remote：新建一个远程存储。 s) Set configuration password：设置配置文件的密码。 q) Quit config：退出配置界面。 ②新建的话输入n,会出现
Enter name for new remote. name&amp;gt; 这个你直接随便输入就行,我就用这个帖子https://www.nodeseek.com/post-9604-1里的jpwp了
输入完名字会出现一大串的
③这个infini-cloud的话我们挂载的是webdav的，选择46 webdav，输入46就行了
④会让你输入url
就是第二部里面的url
直接复制，粘贴进去就行了，然后回车
会出现这个，选择5
⑤user输入第2部里面的Connection ID
然后回出现下面的
y) Yes, type in my own password：手动输入密码。 g) Generate random password：随机生成密码。 n) No, leave this optional password blank (default)：不设置密码 选择y，手动输入第2部里面的那个只出现过一次的密码，复制进去就行了，Linux 终端中输入密码时，密码不会显示在屏幕上</description>
      <content:encoded><![CDATA[<p>1安装rclone<br>
①先去rclone官网找到你的版本<br>
官网链接<a href="https://rclone.org/downloads/">https://rclone.org/downloads/</a></p>
<p>②没sudo的话先安装下sudo，我一般用的是debian，直接</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt install sudo 
</span></span></code></pre></div><p>③然后直接输入，安装rclone</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo -v ; curl https://rclone.org/install.sh | sudo bash
</span></span></code></pre></div><p>安装完成的话长这样子<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336616.png" alt=""  />
<br>
2<br>
获取infini-cloud的配置<br>
登录状态下打开这个链接<br>
<a href="https://infini-cloud.net/en/modules/mypage/usage/">https://infini-cloud.net/en/modules/mypage/usage/</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336878.png" alt=""  />
<br>
把Turn on Apps Connection给勾上<br>
记住你的id和密码，密码只会显示一次，记得保存下<br>
三个参数，一个url，一个id，一个password，准备好<br>
url的话下面3④里面用到<br>
Connection ID就是3⑤user<br>
Apps Password	的话3<br>
3配置rclone<br>
①在你的ssh中输入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">rclone config
</span></span></code></pre></div><p>会出来一排参数,中文啥意思，标在后面了，用gpt翻译的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">n) New remote：新建一个远程存储。
</span></span><span class="line"><span class="cl">s) Set configuration password：设置配置文件的密码。
</span></span><span class="line"><span class="cl">q) Quit config：退出配置界面。
</span></span></code></pre></div><p>②新建的话输入n,会出现</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Enter name for new remote.
</span></span><span class="line"><span class="cl">name&gt; 
</span></span></code></pre></div><p>这个你直接随便输入就行,我就用这个帖子<a href="https://www.nodeseek.com/post-9604-1">https://www.nodeseek.com/post-9604-1</a>里的jpwp了<br>
输入完名字会出现一大串的<br>
③这个infini-cloud的话我们挂载的是webdav的，选择46 webdav，输入46就行了<br>
④会让你输入url<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336228.png" alt=""  />
<br>
就是第二部里面的url<br>
直接复制，粘贴进去就行了，然后回车<br>
会出现这个，选择5<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336268.png" alt=""  />
<br>
⑤user输入第2部里面的Connection ID<br>
然后回出现下面的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">y) Yes, type in my own password：手动输入密码。
</span></span><span class="line"><span class="cl">g) Generate random password：随机生成密码。
</span></span><span class="line"><span class="cl">n) No, leave this optional password blank (default)：不设置密码
</span></span></code></pre></div><p>选择y，手动输入第2部里面的那个只出现过一次的密码，复制进去就行了，Linux 终端中输入密码时，密码不会显示在屏幕上<br>
然后bearer token的话直接回车edit  advanced config，也是直接回车<br>
然后keep the  jpwp remote，也是直接回车<br>
然后选择q，退出就ok了<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336936.png" alt=""  />
</p>
<p>4①<br>
最后输入<a href="https://www.nodeseek.com/post-9604-1">https://www.nodeseek.com/post-9604-1</a>这个帖子里面的命令挂载就ok了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">rclone mount jpwp: /mnt/Wanpan --config=/root/.config/rclone/rclone.conf --allow-other --allow-non-empty --vfs-cache-mode full --vfs-cache-max-age 48h --vfs-cache-max-size 5G --cache-dir /tmp/cache --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1G --buffer-size 128M --umask 000 &amp;
</span></span></code></pre></div><p>②如果出现报错的如下报错的话<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241336998.png" alt=""  />
<br>
是没有装fuse3，debian和ubuntu的话直接用下面的命令apt安装，然后再执行上面的命令就行了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt-get install fuse3
</span></span></code></pre></div><p>③如果出现mount FUSE fs: mountpoint does not exist: /mnt/Wanpan，没有的话，输入下面命令，创建挂载点</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir -p /mnt/Wanpan
</span></span></code></pre></div><p>在输入上面的命令挂载4①的命令挂载</p>
<p>最后输入df-h，显示jpwp的话那就是挂载成功了，1PB是唬人的，实际就是你网盘的容量,其他支持webdav的网盘，也是这样子挂载的，可以试下这个ovh的网盘<a href="https://www.nodeseek.com/post-8887-1">https://www.nodeseek.com/post-8887-1</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241337653.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>virmach究竟发生了啥 </title>
      <link>https://qklgblog.pages.dev/post/20230615/</link>
      <pubDate>Thu, 15 Jun 2023 13:38:57 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230615/</guid>
      <description>从https://lowendbox.com/blog/what-happened-to-virmach-anyways/#comments
转载，用chatgpt4翻译
总结:胖子和cc机房闹掰，人员跑路，胖子买新锐龙服务器要钱，新的机房要钱，胖子可能要跑路
如果你在低端市场混得久了，你可能听过一个叫做Virmach的公司。
他们以在假期，特别是黑色星期五期间提供杀手级优惠而闻名。
他们的成功秘诀很简单：
从主要的供应商那里租用便宜的服务器，主要是ColoCrossing。
竞争到底（以非常低的成本提供吸引人的价值）。
在LowEndTalk上做广告。
这并不是过度简化。
早在2019年，就有人发帖问ColoCrossing是否真的拥有Virmach——因为他们变得如此密不可分。
事实上，这也让他们走得非常远。
然而，直到他们决定购买自己的设备，并将其分布在全球各地的数据中心……
随着时间的推移，裂痕逐渐显现
最初，Virmach离开ColoCrossing的想法基本上受到了欢迎。首先，他们将获得IPv6。其次，他们离开了大坏狼ColoCrossing……最后，但同样重要的是：
这是新的、令人兴奋的，所以人们纷纷跟风。
有大量的人预订了这些服务器，Virmach最终创建了一个主题帖，宣布这些全新的自有Ryzen服务器。
基本上，从这一点开始，Virmach就开始了他们的衰落（这仍在积极发生；还没有到“安息吧”的地步。）
客户会抱怨延迟，交付的服务器出现问题，IP突然改变等等，这在开始时并不是问题。
这只看起来像是成长的痛苦，Virmach总是似乎有一个很好的理由来解释为什么会发生这样的事情，以及什么时候会解决……但显然裂痕正在形成
很多事情同时发生
大约在2022年7月，管理Virmach在LowEndTalk账户的人说：
由于我们现在的处境，我不得不每天、整天工作，已经持续一年左右。所以我现在花费的时间被严重偏向我的方向。我们现在有另外两个人和我们一起工作。我们仍然是一个小公司，一直都是，但最近更是如此。大约在COVID开始时，我们的计费人员离开了，我们的硬件人员离开了，还有两个系统管理员离开了。直到我们也必须进行大量的构建，处理老化的硬件，以及在过去的半年多时间里同时进行迁移，一切才变得不好应对。我可能也做了一些恶劣的销售，我们遇到了比预期多得多的新硬件问题，这也没有帮助。但是，你现在正在和一个几乎负责一切，长期以来几乎没有睡觉的人交谈，尤其是因为现在是周末，今天没有其他人在工作
你卖出了太多产品来交付，你决定移动你的所有客户并投入大量的资金来做这个，现在你的所有员工都辞职了？即使你打算履行早先的承诺，现在也难以做到。
我认为2022年的夏天左右真的是Virmach的巅峰。 (参见：Virmach在边缘摇摆，2022年8月发表)。
之后呢？人们只是开始失去希望。它似乎已经变成了一个人的表演。如果有问题出现？祝你好运能得到回复。例如，人们的工单开启的时间超过90天。我现在仍然有一张超过一年的工单没有解决。
2022年的7月也是Virmach账户最后一次登录LowEndTalk的时间，这是他们的主要业务来源。
他们在其他论坛仍然活跃，但随着时间的推移，他们变得越来越内向。
任何新的Virmach帖子通常都是人们谈论他们付费购买的产品的停机时间，Virmach回应说他们的所有数据中心都因为某个原因停机，然后又两个月不回应。
从技术上讲，这仍然是一个正在被写的故事……但真的是吗？
整整一年的空洞承诺，停机时间，以及缺乏解决方案。
虽然我仍然认为完全有可能扭转整个公司的局面，但变革需要立即进行。一年的时间仍然处于同一位置是很长的时间。
你只能表现得平庸这么久并且提供差的客户服务，最终，客户会找到其他的解决方案。当你的核心卖点仍然锁定在定价上时，你没有太多独特的卖点能在另一个与你价格匹配的人出现……并提供相同甚至更好的体验时，让客户留下来。
（顺便说一下，你现在在一个找到更便宜、更好体验的地方。）
总之，就像我之前说的……
他们还没死。虽然微弱，但仍有脉搏。是Virmach决定他们想要发展还是继续衰落。如果一切都失败了，有一个市场可以提供3.87美元的开发者箱，三年期的可用性服务等级承诺为33%。
如果他们一开始就和ColoCrossing保持在一起……我们都会有便宜的Buffalo服务器和Virmach的黑色星期五优惠。
珍惜简单的时光。
尾声：我们对Virmach有什么期待？
去年我们发表了一篇文章，强调了Virmach的一些问题，反应主要是“是的，我也遇到了问题”。但也有一些人说“你不应该批评他们/这是一篇攻击性的文章/你为什么对他们不好”之类的评论。
事实完全不是这样。我们喜欢为我们的社区带来超棒优惠的供应商，而Virmach长时间以来就是这样做的。他们试图通过在支持上设置一些保护措施来弥补他们微薄的利润，但基本上没有足够的收入进来。在面临太多的退款、意外的硬件费用或网络超支之前，微薄的利润很快就会被淹没。
如果Virmach恢复稳定，客户对他们的服务感到满意，我们很乐意再次展示他们。推动低价托管可能性的供应商就是我们的宗旨！
所以，我们真诚地祝Virmach一切顺利，希望他们能恢复过来。在此之前，我们会持续关注他们的发展</description>
      <content:encoded><![CDATA[<p>从https://lowendbox.com/blog/what-happened-to-virmach-anyways/#comments<br>
转载，用chatgpt4翻译</p>
<p><font color=red size=10>总结:胖子和cc机房闹掰，人员跑路，胖子买新锐龙服务器要钱，新的机房要钱，胖子可能要跑路</font></p>
<p>如果你在低端市场混得久了，你可能听过一个叫做Virmach的公司。<br>
他们以在假期，特别是黑色星期五期间提供杀手级优惠而闻名。<br>
他们的成功秘诀很简单：<br>
从主要的供应商那里租用便宜的服务器，主要是ColoCrossing。<br>
竞争到底（以非常低的成本提供吸引人的价值）。<br>
在LowEndTalk上做广告。<br>
这并不是过度简化。<br>
早在2019年，就有人发帖问ColoCrossing是否真的拥有Virmach——因为他们变得如此密不可分。<br>
事实上，这也让他们走得非常远。<br>
然而，直到他们决定购买自己的设备，并将其分布在全球各地的数据中心……</p>
<p>随着时间的推移，裂痕逐渐显现<br>
最初，Virmach离开ColoCrossing的想法基本上受到了欢迎。首先，他们将获得IPv6。其次，他们离开了大坏狼ColoCrossing……最后，但同样重要的是：<br>
这是新的、令人兴奋的，所以人们纷纷跟风。<br>
有大量的人预订了这些服务器，Virmach最终创建了一个主题帖，宣布这些全新的自有Ryzen服务器。<br>
基本上，从这一点开始，Virmach就开始了他们的衰落（这仍在积极发生；还没有到“安息吧”的地步。）<br>
客户会抱怨延迟，交付的服务器出现问题，IP突然改变等等，这在开始时并不是问题。<br>
这只看起来像是成长的痛苦，Virmach总是似乎有一个很好的理由来解释为什么会发生这样的事情，以及什么时候会解决……但显然裂痕正在形成</p>
<p>很多事情同时发生<br>
大约在2022年7月，管理Virmach在LowEndTalk账户的人说：</p>
<p>由于我们现在的处境，我不得不每天、整天工作，已经持续一年左右。所以我现在花费的时间被严重偏向我的方向。我们现在有另外两个人和我们一起工作。我们仍然是一个小公司，一直都是，但最近更是如此。大约在COVID开始时，我们的计费人员离开了，我们的硬件人员离开了，还有两个系统管理员离开了。直到我们也必须进行大量的构建，处理老化的硬件，以及在过去的半年多时间里同时进行迁移，一切才变得不好应对。我可能也做了一些恶劣的销售，我们遇到了比预期多得多的新硬件问题，这也没有帮助。但是，你现在正在和一个几乎负责一切，长期以来几乎没有睡觉的人交谈，尤其是因为现在是周末，今天没有其他人在工作</p>
<p>你卖出了太多产品来交付，你决定移动你的所有客户并投入大量的资金来做这个，现在你的所有员工都辞职了？即使你打算履行早先的承诺，现在也难以做到。<br>
我认为2022年的夏天左右真的是Virmach的巅峰。 (参见：Virmach在边缘摇摆，2022年8月发表)。<br>
之后呢？人们只是开始失去希望。它似乎已经变成了一个人的表演。如果有问题出现？祝你好运能得到回复。例如，人们的工单开启的时间超过90天。我现在仍然有一张超过一年的工单没有解决。<br>
2022年的7月也是Virmach账户最后一次登录LowEndTalk的时间，这是他们的主要业务来源。<br>
他们在其他论坛仍然活跃，但随着时间的推移，他们变得越来越内向。<br>
任何新的Virmach帖子通常都是人们谈论他们付费购买的产品的停机时间，Virmach回应说他们的所有数据中心都因为某个原因停机，然后又两个月不回应。</p>
<p>从技术上讲，这仍然是一个正在被写的故事……但真的是吗？<br>
整整一年的空洞承诺，停机时间，以及缺乏解决方案。<br>
虽然我仍然认为完全有可能扭转整个公司的局面，但变革需要立即进行。一年的时间仍然处于同一位置是很长的时间。<br>
你只能表现得平庸这么久并且提供差的客户服务，最终，客户会找到其他的解决方案。当你的核心卖点仍然锁定在定价上时，你没有太多独特的卖点能在另一个与你价格匹配的人出现……并提供相同甚至更好的体验时，让客户留下来。<br>
（顺便说一下，你现在在一个找到更便宜、更好体验的地方。）<br>
总之，就像我之前说的……<br>
他们还没死。虽然微弱，但仍有脉搏。是Virmach决定他们想要发展还是继续衰落。如果一切都失败了，有一个市场可以提供3.87美元的开发者箱，三年期的可用性服务等级承诺为33%。<br>
如果他们一开始就和ColoCrossing保持在一起……我们都会有便宜的Buffalo服务器和Virmach的黑色星期五优惠。<br>
珍惜简单的时光。</p>
<p>尾声：我们对Virmach有什么期待？<br>
去年我们发表了一篇文章，强调了Virmach的一些问题，反应主要是“是的，我也遇到了问题”。但也有一些人说“你不应该批评他们/这是一篇攻击性的文章/你为什么对他们不好”之类的评论。<br>
事实完全不是这样。我们喜欢为我们的社区带来超棒优惠的供应商，而Virmach长时间以来就是这样做的。他们试图通过在支持上设置一些保护措施来弥补他们微薄的利润，但基本上没有足够的收入进来。在面临太多的退款、意外的硬件费用或网络超支之前，微薄的利润很快就会被淹没。<br>
如果Virmach恢复稳定，客户对他们的服务感到满意，我们很乐意再次展示他们。推动低价托管可能性的供应商就是我们的宗旨！<br>
所以，我们真诚地祝Virmach一切顺利，希望他们能恢复过来。在此之前，我们会持续关注他们的发展</p>
]]></content:encoded>
    </item>
    <item>
      <title>ovh网盘，来试下</title>
      <link>https://qklgblog.pages.dev/post/20230612/</link>
      <pubDate>Mon, 12 Jun 2023 13:40:05 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230612/</guid>
      <description>前几天ovh老板的推特上看到的
https://twitter.com/olesovhcom/status/1664227559976869890
官网链接:https://shadow.tech/en-GB
关于
支持webdav
免费20G，各位mjj可以试下
别存重要数据，毕竟ovh有物理上云的先列</description>
      <content:encoded><![CDATA[<p>前几天ovh老板的推特上看到的<br>
<a href="https://twitter.com/olesovhcom/status/1664227559976869890">https://twitter.com/olesovhcom/status/1664227559976869890</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241340315.png" alt=""  />
<br>
官网链接:<a href="https://shadow.tech/en-GB">https://shadow.tech/en-GB</a><br>
<a href="https://shadow.tech/en-GB/blog/shadows-new-chapter-starts-now">关于</a><br>
<a href="https://help.shadow.tech/hc/en-gb/articles/6740528292764-How-to-connect-a-third-party-tool-to-Shadow-Drive-using-the-WebDAV-protocol">支持webdav</a><br>
免费20G，各位mjj可以试下</p>
<p>别存重要数据，毕竟ovh有物理上云的先列<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241340848.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>gridea部署静态博客</title>
      <link>https://qklgblog.pages.dev/post/20230611/</link>
      <pubDate>Sun, 11 Jun 2023 13:42:51 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230611/</guid>
      <description>gridea是一个个静态博客的客户端
相对于hugo和hexo啥的，最大的好处就是简单，不用配置啥复杂的东西
缺点，就是主题很少
本文用github仓库部署，可以同时直接用仓库部署到github pages，cf pages，vercel，netlify，国内访问推荐vercel
由于这几个默认域名被墙，绑个自己的域名
一 配置github
①没号的先注册一个
https://github.com/
点击右上角singup注册一个
②创建github仓库
https://github.com/new
创建个username.github.io，username就是你用户名，其实也可以不这样子，仓库名随便取，只是没法用github pages而已，不影响部署到cf pages和vercel的
③申请token
https://github.com/settings/tokens/new
token时间自己爱要多久，反正我直接永久，repo勾上，token只显示一次，记得保存下
二 配置gridea
①下载
https://github.com/getgridea/gridea/releases
自己根据客户端下载
支持mac，win，linux三大客户端
②配置
点击左边的远程，界面长这样子
选择github pages，
域名:你要绑的域名
仓库名称:刚刚建的github的仓库的名字:username.github.io这样子
分支，现在一般默认是main，自己看下你github仓库
仓库用户名,你github的user name
邮箱，你github的邮箱
令牌，刚刚第三步申请的token
cname这个不用github page啥的话不用管，要用的话填你要绑的域名
然后保存，再点下检测远程连接的，显示成功的话就ok了
③备份
点击最左边这个按钮，点进去，有个站点源文件路径，那就是gridea的配置文件了，要备份的话直接打包上传到网盘，或者直接整个坚果云或者onedrive啥的同步直接
④写文章
支持markdown，点击左边的文章，自己写
⑤点击左下角同步，同步到你github
如果没法同步的话，设置里又http代理设置，自己填写
三 部署到各家平台
1github pages
找到你username.github.io的仓库，点击setting，选择pages启用，可以绑定自己的域名，不展开讲了，自己谷歌搜下
2部署到cf pages（推荐）
①注册cf账户
https://cloudflare.com/ 打开网站，点击注册
②创建pages
点击workes and pages
创建应用程序，选择pages
连接到git
连接到github账户，选择你刚刚创建的那个github仓库
然后点开始设置
保存并部署
设置自定义域，默认的pages.dev被墙了，输入你在gridea里填的域名
然后点激活域再等会就ok了
浏览器打开你的域名就可以访问了
3部署到vercel
①https://vercel.com/点击右上角singup，再点击用github登录</description>
      <content:encoded><![CDATA[<p>gridea是一个个静态博客的客户端<br>
相对于hugo和hexo啥的，最大的好处就是简单，不用配置啥复杂的东西<br>
缺点，就是主题很少<br>
本文用github仓库部署，可以同时直接用仓库部署到github pages，cf pages，vercel，netlify，国内访问推荐vercel<br>
由于这几个默认域名被墙，绑个自己的域名</p>
<p>一   配置github<br>
①没号的先注册一个<br>
<a href="https://github.com/">https://github.com/</a><br>
点击右上角singup注册一个<br>
②创建github仓库<br>
<a href="https://github.com/new">https://github.com/new</a><br>
创建个username.github.io，username就是你用户名，其实也可以不这样子，仓库名随便取，只是没法用github pages而已，不影响部署到cf pages和vercel的<br>
③申请token<br>
<a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a><br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241343036.png" alt=""  />
<br>
token时间自己爱要多久，反正我直接永久，repo勾上，token只显示一次，记得保存下</p>
<p>二 配置gridea<br>
①下载</p>
<p><a href="https://github.com/getgridea/gridea/releases">https://github.com/getgridea/gridea/releases</a><br>
自己根据客户端下载<br>
支持mac，win，linux三大客户端<br>
②配置<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241343860.png" alt=""  />
<br>
点击左边的远程，界面长这样子<br>
选择github pages，<br>
域名:你要绑的域名<br>
仓库名称:刚刚建的github的仓库的名字:username.github.io这样子<br>
分支，现在一般默认是main，自己看下你github仓库<br>
仓库用户名,你github的user name<br>
邮箱，你github的邮箱<br>
令牌，刚刚第三步申请的token<br>
cname这个不用github page啥的话不用管，要用的话填你要绑的域名</p>
<p>然后保存，再点下检测远程连接的，显示成功的话就ok了<br>
③备份<br>
点击最左边这个按钮，点进去，有个站点源文件路径，那就是gridea的配置文件了，要备份的话直接打包上传到网盘，或者直接整个坚果云或者onedrive啥的同步直接<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241343543.png" alt=""  />
<br>
④写文章<br>
支持markdown，点击左边的文章，自己写<br>
⑤点击左下角同步，同步到你github<br>
如果没法同步的话，设置里又http代理设置，自己填写</p>
<p>三 部署到各家平台<br>
1github pages<br>
找到你username.github.io的仓库，点击setting，选择pages启用，可以绑定自己的域名，不展开讲了，自己谷歌搜下</p>
<p>2部署到cf pages（推荐）<br>
①注册cf账户<br>
<a href="https://cloudflare.com/">https://cloudflare.com/</a> 打开网站，点击注册<br>
②创建pages<br>
点击workes and pages<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241343855.png" alt=""  />
<br>
创建应用程序，选择pages<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344413.png" alt=""  />
<br>
连接到git<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344348.png" alt=""  />
<br>
连接到github账户，选择你刚刚创建的那个github仓库<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344500.png" alt=""  />
<br>
然后点开始设置<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344990.png" alt=""  />
<br>
保存并部署<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344798.png" alt=""  />
<br>
设置自定义域，默认的pages.dev被墙了，输入你在gridea里填的域名<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241344995.png" alt=""  />
<br>
然后点激活域再等会就ok了<br>
浏览器打开你的域名就可以访问了</p>
<p>3部署到vercel<br>
①<a href="https://vercel.com/">https://vercel.com/</a>点击右上角singup，再点击用github登录<br>
②点击add new project,选择你的github仓库，再点击import<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241345297.png" alt=""  />
<br>
然后点击deploy直接部署<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241345082.png" alt=""  />
<br>
然后就部署好了<br>
③设置自定义域，默认的vercel.app被墙了，输入你在gridea里填的域名<br>
点击setting，选择左边的domains<br>
在cloudflare或者别的域名解析商那里添加一个A记录到76.76.21.21<br>
或者cname到cname.vercel-dns.com<br>
都是可以的，具体怎么操作看vercel的文档<br>
<a href="https://vercel.com/docs/concepts/projects/domains/working-with-nameservers">https://vercel.com/docs/concepts/projects/domains/working-with-nameservers</a><br>
vercel的亚马逊aga到国内速度明显比其他的快，推荐这个部署，但是免费只有100G的流量，不过个人博客也够用了<br>
4部署到netlify<br>
①<a href="https://www.netlify.com/">https://www.netlify.com/</a>,点击右上角singup，选择github登录<br>
②点击add new site<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241345834.png" alt=""  />
<br>
选择import an existing project<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241345347.png" alt=""  />
<br>
选择你的github仓库，再点deploy site部署<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241345481.png" alt=""  />
</p>
<p>③设置自定义域，默认的netlify.app被墙了，输入你在gridea里填的域名<br>
点击domain setting，然后把你的域名cname过去就行了，具体怎么弄看netlify的文档<br>
<a href="https://docs.netlify.com/domains-https/custom-domains/">https://docs.netlify.com/domains-https/custom-domains/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>ucloud 台北测评</title>
      <link>https://qklgblog.pages.dev/post/20230606/</link>
      <pubDate>Tue, 06 Jun 2023 13:47:05 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230606/</guid>
      <description>ucloud台北，刚买的，来品一品
上车地址,没aff
https://www.ucloud.cn/site/active/kuaijiesale.html
配置如下
我买的53的，最便宜的，吃灰无所谓
测试ip
[code]乌兰察布 117.50.162.54（带宽出口在北京，北京BGP）
北京 106.75.47.147
上海 106.75.252.202
广州 106.75.172.214
台北 103.98.17.12
日本 152.32.203.164
韩国 152.32.138.254
洛杉矶 45.43.58.220
香港：103.218.242.25
孟买：123.58.203.38
曼谷：128.1.79.99
胡志明：152.32.162.124[/code]
流媒体
三网去程
电线
联通
移动
四网回程
电信
联通
移动
教育网
yabs
[code]# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #
Yet-Another-Bench-Script v2023-04-23 https://github.com/masonr/yet-another-bench-script ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## Tue 06 Jun 2023 12:26:05 AM CST</description>
      <content:encoded><![CDATA[<p>ucloud台北，刚买的，来品一品<br>
上车地址,没aff<br>
<a href="https://www.ucloud.cn/site/active/kuaijiesale.html">https://www.ucloud.cn/site/active/kuaijiesale.html</a><br>
配置如下<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241347126.png" alt=""  />
<br>
我买的53的，最便宜的，吃灰无所谓<br>
测试ip<br>
[code]乌兰察布 117.50.162.54（带宽出口在北京，北京BGP）<br>
北京 106.75.47.147<br>
上海 106.75.252.202<br>
广州 106.75.172.214<br>
台北 103.98.17.12<br>
日本 152.32.203.164<br>
韩国 152.32.138.254<br>
洛杉矶 45.43.58.220</p>
<p>香港：103.218.242.25<br>
孟买：123.58.203.38<br>
曼谷：128.1.79.99</p>
<p>胡志明：152.32.162.124[/code]</p>
<p>流媒体<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241347069.png" alt=""  />
</p>
<p>三网去程<br>
电线<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241347986.png" alt=""  />
<br>
联通<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241347497.png" alt=""  />
<br>
移动<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241347436.png" alt=""  />
<br>
四网回程<br>
电信<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241348908.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241348324.png" alt=""  />
</p>
<p>联通<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241348529.png" alt=""  />
<br>
移动<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241348220.png" alt=""  />
<br>
教育网<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241348710.png" alt=""  />
</p>
<p>yabs<br>
[code]# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</p>
<h1 id="yet-another-bench-script">Yet-Another-Bench-Script             </h1>
<h1 id="v2023-04-23">v2023-04-23                   </h1>
<h1 id="httpsgithubcommasonryet-another-bench-script"><a href="https://github.com/masonr/yet-another-bench-script">https://github.com/masonr/yet-another-bench-script</a></h1>
<h1 id="----------------">## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##</h1>
<p>Tue 06 Jun 2023 12:26:05 AM CST</p>
<h2 id="basic-system-information">Basic System Information:</h2>
<p>Uptime     : 0 days, 0 hours, 20 minutes<br>
Processor  : AMD EPYC Processor<br>
CPU cores  : 1 @ 2899.998 MHz<br>
AES-NI     : ✔ Enabled<br>
VM-x/AMD-V : ❌ Disabled<br>
RAM        : 795.2 MiB<br>
Swap       : 0.0 KiB<br>
Disk       : 39.2 GiB<br>
Distro     : Debian GNU/Linux 10 (buster)<br>
Kernel     : 4.19.0-11-amd64<br>
VM Type    : KVM<br>
IPv4/IPv6  : ✔ Online / ❌ Offline</p>
<h2 id="ipv4-network-information">IPv4 Network Information:</h2>
<p>ISP        : UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED<br>
ASN        : AS135377 UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED<br>
Host       : UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED<br>
Location   : **ei, **ei City (TPE)<br>
Country    : Taiwan</p>
<h2 id="fio-disk-speed-tests-mixed-rw-5050">fio Disk Speed Tests (Mixed R/W 50/50):</h2>
<p>Block Size | 4k            (IOPS) | 64k           (IOPS)<br>
&mdash;&mdash;   | &mdash;            &mdash;-  | &mdash;-           &mdash;-<br>
Read       | 102.30 MB/s  (25.5k) | 214.79 MB/s   (3.3k)<br>
Write      | 102.58 MB/s  (25.6k) | 215.92 MB/s   (3.3k)<br>
Total      | 204.88 MB/s  (51.2k) | 430.71 MB/s   (6.7k)<br>
|                      |                  <br>
Block Size | 512k          (IOPS) | 1m            (IOPS)<br>
&mdash;&mdash;   | &mdash;            &mdash;-  | &mdash;-           &mdash;-<br>
Read       | 204.32 MB/s    (399) | 203.26 MB/s    (198)<br>
Write      | 215.18 MB/s    (420) | 216.79 MB/s    (211)<br>
Total      | 419.51 MB/s    (819) | 420.05 MB/s    (409)</p>
<h2 id="iperf3-network-speed-tests-ipv4">iperf3 Network Speed Tests (IPv4):</h2>
<table>
<thead>
<tr>
<th>Provider</th>
<th>Location (Link)</th>
<th>Send Speed</th>
<th>Recv Speed</th>
<th>Ping</th>
</tr>
</thead>
<tbody>
<tr>
<td>Clouvider</td>
<td>London, UK (10G)</td>
<td>29.0 Mbits/sec</td>
<td>48.4 Mbits/sec</td>
<td>230 ms</td>
</tr>
<tr>
<td>Scaleway</td>
<td>Paris, FR (10G)</td>
<td>busy</td>
<td>busy</td>
<td>216 ms</td>
</tr>
<tr>
<td>NovoServe</td>
<td>North Holland, NL (40G)</td>
<td>30.1 Mbits/sec</td>
<td>47.8 Mbits/sec</td>
<td>205 ms</td>
</tr>
<tr>
<td>Uztelecom</td>
<td>Tashkent, UZ (10G)</td>
<td>29.9 Mbits/sec</td>
<td>50.6 Mbits/sec</td>
<td>115 ms</td>
</tr>
<tr>
<td>Clouvider</td>
<td>NYC, NY, US (10G)</td>
<td>29.9 Mbits/sec</td>
<td>busy</td>
<td>196 ms</td>
</tr>
<tr>
<td>Clouvider</td>
<td>Dallas, TX, US (10G)</td>
<td>30.5 Mbits/sec</td>
<td>50.3 Mbits/sec</td>
<td>172 ms</td>
</tr>
<tr>
<td>Clouvider</td>
<td>Los Angeles, CA, US (10G)</td>
<td>30.9 Mbits/sec</td>
<td>50.3 Mbits/sec</td>
<td>138 ms</td>
</tr>
<tr>
<td>[/code]</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>google.com跳转解决办法</title>
      <link>https://qklgblog.pages.dev/post/20230528/</link>
      <pubDate>Sun, 28 May 2023 13:49:37 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230528/</guid>
      <description>前言:给新手看的，老手应该都知道，别喷我
由于ip被邻居定位到内地，导致https://www.google.com/访问时跳转https://www.google.com.hk/并且强制开启安全搜索的几种解决办法
1ncr下
直接浏览器输入 https://google.com//ncr就不会跳了
ncr的全称是No Country Redirect，不进行国家/地区重定向
2gl大法
https://www.google.com/?gl=us
gl后面的us可以换成其他的，比方说日本jp，法国fr啥的
可以参考维基百科
https://zh.wikipedia.org/zh-hans/%E5%9C%8B%E5%AE%B6%E5%9C%B0%E5%8D%80%E4%BB%A3%E7%A2%BC
3location guard插件
①安装插件，chrome点这里
https://chrome.google.com/webstore/detail/location-guard/cfohepagpmnodfdmjliccbbigdkfcgia
②选择Fixed Location-要去哪里就标记哪里,别太离谱，最好小鸡附近
③option-Default level-used fixed location
④拉到谷歌搜索的最下面
更新位置信息
然后刷新下就可以了
顺带记得去谷歌这里报告下ip问题
https://support.google.com/websearch/workflow/9308722</description>
      <content:encoded><![CDATA[<p>前言:给新手看的，老手应该都知道，别喷我<br>
由于ip被邻居定位到内地，导致<a href="https://www.google.com/">https://www.google.com/</a>访问时跳转<a href="https://www.google.com.hk/">https://www.google.com.hk/</a>并且强制开启安全搜索的几种解决办法<br>
1ncr下<br>
直接浏览器输入   <a href="https://google.com//ncr">https://google.com//ncr</a>就不会跳了<br>
ncr的全称是No Country Redirect，不进行国家/地区重定向<br>
2gl大法<br>
<a href="https://www.google.com/?gl=us">https://www.google.com/?gl=us</a><br>
gl后面的us可以换成其他的，比方说日本jp，法国fr啥的<br>
可以参考维基百科<br>
<a href="https://zh.wikipedia.org/zh-hans/%E5%9C%8B%E5%AE%B6%E5%9C%B0%E5%8D%80%E4%BB%A3%E7%A2%BC">https://zh.wikipedia.org/zh-hans/%E5%9C%8B%E5%AE%B6%E5%9C%B0%E5%8D%80%E4%BB%A3%E7%A2%BC</a><br>
3location guard插件<br>
①安装插件，chrome点这里<br>
<a href="https://chrome.google.com/webstore/detail/location-guard/cfohepagpmnodfdmjliccbbigdkfcgia">https://chrome.google.com/webstore/detail/location-guard/cfohepagpmnodfdmjliccbbigdkfcgia</a><br>
②选择Fixed Location-要去哪里就标记哪里,别太离谱，最好小鸡附近<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241350878.png" alt=""  />
<br>
③option-Default level-used fixed location<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241350789.png" alt=""  />
<br>
④拉到谷歌搜索的最下面<br>
更新位置信息<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241350048.png" alt=""  />
<br>
然后刷新下就可以了<br>
顺带记得去谷歌这里报告下ip问题<br>
<a href="https://support.google.com/websearch/workflow/9308722">https://support.google.com/websearch/workflow/9308722</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>分享个可以用chatgpt翻译整本电子书的Calibre 插件</title>
      <link>https://qklgblog.pages.dev/post/20230526/</link>
      <pubDate>Fri, 26 May 2023 13:50:52 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230526/</guid>
      <description>隔壁小众软件看到的
怎么玩隔壁都有
https://www.appinn.com/ebook-translator/
github地址
https://github.com/bookfere/Ebook-Translator-Calibre-Plugin/blob/master/README.zh-CN.md
我用的自带的5刀的免费账户，速度有点慢，总共块四千行，2个多小时才翻译了十分之一
之前用过这个
https://github.com/yihong0618/bilingual_book_maker
用python+vscode太折腾了
这个Calibre 插件简单很多</description>
      <content:encoded><![CDATA[<p>隔壁小众软件看到的<br>
怎么玩隔壁都有<br>
<a href="https://www.appinn.com/ebook-translator/">https://www.appinn.com/ebook-translator/</a><br>
github地址<br>
<a href="https://github.com/bookfere/Ebook-Translator-Calibre-Plugin/blob/master/README.zh-CN.md">https://github.com/bookfere/Ebook-Translator-Calibre-Plugin/blob/master/README.zh-CN.md</a></p>
<p>我用的自带的5刀的免费账户，速度有点慢，总共块四千行，2个多小时才翻译了十分之一<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241351668.png" alt=""  />
</p>
<p>之前用过这个<br>
<a href="https://github.com/yihong0618/bilingual_book_maker">https://github.com/yihong0618/bilingual_book_maker</a><br>
用python+vscode太折腾了<br>
这个Calibre 插件简单很多</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享个好玩的-curl看天气</title>
      <link>https://qklgblog.pages.dev/post/20230311/</link>
      <pubDate>Sat, 11 Mar 2023 13:52:19 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230311/</guid>
      <description>github链接
https://github.com/schachmat/wego
安装curl
然后
curl wttr.in/城市 就可以了
比方说
curl wttr.in/hongkong 三字母机场代码也是可以的
curl wttr.in/hkg </description>
      <content:encoded><![CDATA[<p>github链接<br>
<a href="https://github.com/schachmat/wego">https://github.com/schachmat/wego</a><br>
安装curl<br>
然后</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl wttr.in/城市
</span></span></code></pre></div><p>就可以了<br>
比方说</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl wttr.in/hongkong
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/202310241353304.png" alt=""  />
<br>
三字母机场代码也是可以的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">curl wttr.in/hkg
</span></span></code></pre></div><p><img loading="lazy" src="https://s3.qklg.net/img/202310241353034.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>google one各地流媒体检测</title>
      <link>https://qklgblog.pages.dev/post/20230205/</link>
      <pubDate>Sun, 05 Feb 2023 14:04:07 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230205/</guid>
      <description>前支持地区:奥地利 澳大利亚 比利时 加拿大 丹麦 芬兰 法国 德国 冰岛 爱尔兰 意大利 日本 墨西哥 荷兰 挪威 韩国 西班牙 瑞典 瑞士 台湾 英国 美国
试了下以下几个地方
台湾
日本
美国
意大利</description>
      <content:encoded><![CDATA[<p>前支持地区:奥地利 澳大利亚 比利时 加拿大 丹麦 芬兰 法国 德国 冰岛 爱尔兰 意大利 日本 墨西哥 荷兰 挪威 韩国 西班牙 瑞典 瑞士 台湾 英国 美国<br>
试了下以下几个地方<br>
台湾<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405599.png" alt=""  />
<br>
日本<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405368.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405442.png" alt=""  />
<br>
美国<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405731.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405115.png" alt=""  />
<br>
意大利<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405494.png" alt=""  />
<br>
<img loading="lazy" src="https://s3.qklg.net/img/202310241405802.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>常用的一些在线ping检测的网站</title>
      <link>https://qklgblog.pages.dev/post/20230204/</link>
      <pubDate>Sat, 04 Feb 2023 13:53:32 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230204/</guid>
      <description>https://ping.pe/
https://ping.sx/ping
https://ping.cn/ping
https://tools.ipip.net/ping.php
https://ping.chinaz.com/
https://www.itdog.cn/ping/
https://www.17ce.com/
https://www.boce.com/
https://boce.aliyun.com/detect/ping</description>
      <content:encoded><![CDATA[<p><a href="https://ping.pe/">https://ping.pe/</a><br>
<a href="https://ping.sx/ping">https://ping.sx/ping</a><br>
<a href="https://ping.cn/ping">https://ping.cn/ping</a><br>
<a href="https://tools.ipip.net/ping.php">https://tools.ipip.net/ping.php</a><br>
<a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a><br>
<a href="https://www.itdog.cn/ping/">https://www.itdog.cn/ping/</a><br>
<a href="https://www.17ce.com/">https://www.17ce.com/</a><br>
<a href="https://www.boce.com/">https://www.boce.com/</a><br>
<a href="https://boce.aliyun.com/detect/ping">https://boce.aliyun.com/detect/ping</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>瓦工软银</title>
      <link>https://qklgblog.pages.dev/post/wa-gong-ruan-yin/</link>
      <pubDate>Thu, 02 Feb 2023 13:55:38 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/wa-gong-ruan-yin/</guid>
      <description>瓦工日本大阪软银，一起来品一品
流媒体
yabs
三网去程
电信
联通
移动
四网回程
电信
cn2
联通
移动
教育网
三网单线程</description>
      <content:encoded><![CDATA[<p>瓦工日本大阪软银，一起来品一品<br>
流媒体<br>
<img loading="lazy" src="https://i.imgur.com/gTQLhro.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/RugMvfB.png" alt="img"  />
<br>
yabs<br>
<img loading="lazy" src="https://i.imgur.com/WeueTLm.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/DN5HCjk.png" alt="img"  />
<br>
三网去程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/Gwj1jX9.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/eHZlKYI.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/K3rdCDV.png" alt="img"  />
<br>
四网回程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/ClAsAyX.png" alt="img"  />
<br>
cn2<br>
<img loading="lazy" src="https://i.imgur.com/cy0Hqbq.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/bmXfueV.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/8OgJT6g.png" alt="img"  />
<br>
教育网<br>
<img loading="lazy" src="https://i.imgur.com/pSxY0T2.png" alt="img"  />
<br>
三网单线程<br>
<img loading="lazy" src="https://i.imgur.com/uaYjUDO.png" alt="img"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>瓦工香港cmi</title>
      <link>https://qklgblog.pages.dev/post/wa-gong-xiang-gang-cmi/</link>
      <pubDate>Thu, 02 Feb 2023 13:54:48 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/wa-gong-xiang-gang-cmi/</guid>
      <description>瓦工香港cmi，一起来品一品
流媒体
yabs
三网去程
电信
联通
移动
四网回程
电信
cn2
联通
移动
教育网
三网单线程</description>
      <content:encoded><![CDATA[<p>瓦工香港cmi，一起来品一品<br>
流媒体<br>
<img loading="lazy" src="https://i.imgur.com/QGJy2bq.png" alt="img"  />
<br>
yabs<br>
<img loading="lazy" src="https://i.imgur.com/DZiMM3I.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/hfLOPHS.png" alt="img"  />
<br>
三网去程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/Ex80BvX.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/Ckp1sOB.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/wcz1WRO.png" alt="img"  />
<br>
四网回程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/ZfdqYY5.png" alt="img"  />
<br>
cn2<br>
<img loading="lazy" src="https://i.imgur.com/sWfOhEA.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/uxhx1hl.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/nM44506.png" alt="img"  />
<br>
教育网<br>
<img loading="lazy" src="https://i.imgur.com/2h2BtRw.png" alt="img"  />
<br>
三网单线程<br>
<img loading="lazy" src="https://i.imgur.com/PYMg0Wa.png" alt="img"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>瓦工迪拜</title>
      <link>https://qklgblog.pages.dev/post/wa-gong-di-bai/</link>
      <pubDate>Thu, 02 Feb 2023 02:02:23 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/wa-gong-di-bai/</guid>
      <description>瓦工迪拜一起品一品
流媒体
yabs
三网去程
移动
联通
电信
四网回程
电信
cn2
联通
移动
教育网
瓦工流量太少
三网测速不测了</description>
      <content:encoded><![CDATA[<p>瓦工迪拜一起品一品<br>
流媒体<br>
<img loading="lazy" src="https://i.imgur.com/0ykiQzq.png" alt="img"  />
<br>
yabs<br>
<img loading="lazy" src="https://i.imgur.com/inRP1of.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/MoAv7Q6.png" alt="img"  />
<br>
三网去程<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/LL2yUbZ.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/o1xF1MZ.png" alt="img"  />
<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/6JEjpVU.png" alt="img"  />
<br>
四网回程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/fB8Xid4.png" alt="img"  />
<br>
cn2<br>
<img loading="lazy" src="https://i.imgur.com/0VkI6KN.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/7Bv0fMj.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/1iwDeQH.png" alt="img"  />
<br>
教育网<br>
<img loading="lazy" src="https://i.imgur.com/Sdq5cXr.png" alt="img"  />
<br>
瓦工流量太少<br>
三网测速不测了</p>
]]></content:encoded>
    </item>
    <item>
      <title>瓦工悉尼9929</title>
      <link>https://qklgblog.pages.dev/post/wa-gong-xi-ni-9929/</link>
      <pubDate>Thu, 02 Feb 2023 01:53:17 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/wa-gong-xi-ni-9929/</guid>
      <description>瓦工悉尼一起品一品
ping.pe延迟
流媒体
yabs
三网去程
移动
联通
电信
三网回程
电信
cn2
联通
移动
教育网
瓦工流量太少
三网测速不测了</description>
      <content:encoded><![CDATA[<p>瓦工悉尼一起品一品<br>
ping.pe延迟<br>
<img loading="lazy" src="https://i.imgur.com/fHPHcxf.png" alt="img"  />
<br>
流媒体<br>
<img loading="lazy" src="https://i.imgur.com/D1fu7Ld.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/eU2GdVY.png" alt="img"  />
<br>
yabs<br>
<img loading="lazy" src="https://i.imgur.com/II5yCEg.png" alt="img"  />
<br>
<img loading="lazy" src="https://i.imgur.com/WSyqXBa.png" alt="img"  />
<br>
三网去程<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/Jti2lHP.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/WDPguzS.png" alt="img"  />
<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/HXrJeja.png" alt="img"  />
<br>
三网回程<br>
电信<br>
<img loading="lazy" src="https://i.imgur.com/hF28Wvv.png" alt="img"  />
<br>
cn2<br>
<img loading="lazy" src="https://i.imgur.com/czFkABy.png" alt="img"  />
<br>
联通<br>
<img loading="lazy" src="https://i.imgur.com/Q0Jwjvq.png" alt="img"  />
<br>
移动<br>
<img loading="lazy" src="https://i.imgur.com/tsaYQW3.png" alt="img"  />
<br>
教育网<br>
<img loading="lazy" src="https://i.imgur.com/bJvV1Mz.png" alt="img"  />
<br>
瓦工流量太少<br>
三网测速不测了</p>
]]></content:encoded>
    </item>
    <item>
      <title>分享几个多出口ip查询网站</title>
      <link>https://qklgblog.pages.dev/post/20230201/</link>
      <pubDate>Wed, 01 Feb 2023 13:56:23 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230201/</guid>
      <description>https://ip.orz.tools/
http://revproxy.ustc.edu.cn:8000/
https://ip.skk.moe/multi
记录下</description>
      <content:encoded><![CDATA[<p><a href="https://ip.orz.tools/">https://ip.orz.tools/</a><br>
<a href="http://revproxy.ustc.edu.cn:8000/">http://revproxy.ustc.edu.cn:8000/</a><br>
<a href="https://ip.skk.moe/multi">https://ip.skk.moe/multi</a><br>
记录下</p>
]]></content:encoded>
    </item>
    <item>
      <title>垃圾佬的年末持有小鸡总结</title>
      <link>https://qklgblog.pages.dev/post/20230113/</link>
      <pubDate>Fri, 13 Jan 2023 13:58:59 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/post/20230113/</guid>
      <description>跟风，年末持有小鸡总结
甲骨文首尔amd，600多天的祖传龟壳
cc8.79
2核1G内存35G硬盘4T流量@1Gbps
rn 3台
1台 2022年五一洛杉矶dc 2，年付$15.58
2核2G内存35G硬盘10T流量@1Gbps（翻倍后)
1台2022年黑五圣何塞闪购，年付$11
1核1.3G内存40G硬盘10T流量640 MB（翻倍后）
1台2021年黑五纽约闪购，年付$6.79
1核640M内存10G硬盘2T流量@1Gbps(翻倍后)
vir 2021年黑五花了3刀迁移到日本，年付$6.3
1核512M内存15G硬盘1T流量@1Gbps
ovh俄勒冈0.97一个月，年付$11.59
1核2G内存20G硬盘无限流量 100M口子
gullo 2刀nat鸡，玩具
scaleway 0.4欧一个月的，玩具
8.79+15.58+11+6.79+6.3+11.59+2+星辰0.4欧一个月的话
差不多快60多刀一年吧
rn圣何塞和vir日本主力富强，剩下基本上吃灰状态
总结:最贵的才15刀，我是垃圾佬</description>
      <content:encoded><![CDATA[<p>跟风，年末持有小鸡总结</p>
<p><img loading="lazy" src="https://s3.qklg.net/img/202402281100807.png" alt=""  />
</p>
<p>甲骨文首尔amd，600多天的祖传龟壳</p>
<p>cc8.79<br>
2核1G内存35G硬盘4T流量@1Gbps<br>
rn 3台<br>
1台 2022年五一洛杉矶dc 2，年付$15.58<br>
2核2G内存35G硬盘10T流量@1Gbps（翻倍后)</p>
<p>1台2022年黑五圣何塞闪购，年付$11<br>
1核1.3G内存40G硬盘10T流量640 MB（翻倍后）</p>
<p>1台2021年黑五纽约闪购，年付$6.79<br>
1核640M内存10G硬盘2T流量@1Gbps(翻倍后)</p>
<p>vir 2021年黑五花了3刀迁移到日本，年付$6.3<br>
1核512M内存15G硬盘1T流量@1Gbps</p>
<p>ovh俄勒冈0.97一个月，年付$11.59<br>
1核2G内存20G硬盘无限流量 100M口子</p>
<p>gullo 2刀nat鸡，玩具<br>
scaleway 0.4欧一个月的，玩具</p>
<p>8.79+15.58+11+6.79+6.3+11.59+2+星辰0.4欧一个月的话<br>
差不多快60多刀一年吧</p>
<p>rn圣何塞和vir日本主力富强，剩下基本上吃灰状态</p>
<p>总结:最贵的才15刀，我是垃圾佬</p>
]]></content:encoded>
    </item>
    <item>
      <title>About</title>
      <link>https://qklgblog.pages.dev/about/</link>
      <pubDate>Fri, 25 Jan 2019 19:09:48 +0000</pubDate>
      <guid>https://qklgblog.pages.dev/about/</guid>
      <description>qklg.net by andylee 📧 邮箱: qklg@qklg.net
🌐 探针: https://kkb.lol/
本站托管于Cloudflare Pages https://pages.cloudflare.com/
满纸荒唐言，一把辛酸泪。
都云作者痴，谁解其中味。</description>
      <content:encoded><![CDATA[<h1 id="qklgnet-by-andylee">qklg.net by andylee</h1>
<p>📧 邮箱: <a href="mailto:qklg@qklg.net">qklg@qklg.net</a><br>
🌐 探针: <a href="https://kkb.lol/">https://kkb.lol/</a></p>
<p>本站托管于Cloudflare Pages  <a href="https://pages.cloudflare.com/">https://pages.cloudflare.com/</a></p>
<p>满纸荒唐言，一把辛酸泪。<br>
都云作者痴，谁解其中味。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
